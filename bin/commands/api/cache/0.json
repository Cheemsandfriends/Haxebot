{"size":18,"fields":{"h":{"flixel.FlxG.autoPause":{"id":"autoPause","code":"static autoPause:Bool = true","doc":"Whether the game should be paused when focus is lost or not. Use -D FLX_NO_FOCUS_LOST_SCREENif you only want to get rid of the default pause screen.Override onFocus() and onFocusLost() for your own behaviour in your state. "},"flixel.FlxG.save":{"id":"save","code":"static read only save:FlxSave = new FlxSave()","doc":"A FlxSave used internally by flixel to save sound preferences andthe history of the console window, but no reason you can't use it for your own stuff too! "},"flixel.FlxG.game":{"id":"game","code":"static read only game:FlxGame","doc":"Internal tracker for game object. "},"flixel.FlxG.watch":{"id":"watch","code":"static read only watch:WatchFrontEnd = new WatchFrontEnd()","doc":"Used to add or remove things to / from the watch window. "},"flixel.FlxG.random":{"id":"random","code":"static read only random:FlxRandom = new FlxRandom()","doc":"A FlxRandom object which can be used to generate random numbers.Also used by Flixel internally. "},"flixel.FlxG.camera":{"id":"camera","code":"static camera:FlxCamera","doc":"By default this just refers to the first entry in the FlxG.cameras.listarray but you can do what you like with it. "},"flixel.FlxG.cameras":{"id":"cameras","code":"static read only cameras:CameraFrontEnd = new CameraFrontEnd()","doc":"Contains things related to cameras, a list of all cameras and several effects like flash() or fade(). "},"flixel.FlxG.gamepads":{"id":"gamepads","code":"static read only gamepads:FlxGamepadManager","doc":"Allows accessing the available gamepads. "},"flixel.FlxG.maxElapsed":{"id":"maxElapsed","code":"static maxElapsed:Float = 0.1","doc":"Useful when the timestep is NOT fixed (i.e. variable),to prevent jerky movement or erratic behavior at very low fps.Essentially locks the framerate to a minimum value - any slower and you'll getslowdown instead of frameskip; default is 1/10th of a second. "},"flixel.FlxG.state":{"id":"state","code":"static read only state:FlxState","doc":"Access the current game state from anywhere. Consider using addChildBelowMouse()if you want to add a DisplayObject to the stage instead of directly adding it here! "},"flixel.FlxG.addPostProcess":{"id":"addPostProcess","code":"static addPostProcess(postProcess:PostProcess):PostProcess","doc":""},"flixel.FlxG.addChildBelowMouse":{"id":"addChildBelowMouse","code":"static addChildBelowMouse<T>(Child:T, IndexModifier:Int = 0):T","doc":"Regular DisplayObjects are normally displayed over the Flixel cursor and the Flixel debugger if simplyadded to stage. This function simplifies things by adding a DisplayObject directly below mouse level. "},"flixel.FlxG.vcr":{"id":"vcr","code":"static read only vcr:VCRFrontEnd","doc":"Contains all the functions needed for recording and replaying. "},"flixel.FlxG.VERSION":{"id":"VERSION","code":"static read only VERSION:FlxVersion = new FlxVersion(4, 11, 0)","doc":"The HaxeFlixel version, in semantic versioning syntax. Use Std.string()on it to get a String formatted like this: \"HaxeFlixel MAJOR.MINOR.PATCH-COMMIT_SHA\". "},"flixel.FlxG.worldDivisions":{"id":"worldDivisions","code":"static worldDivisions:Int = 6","doc":"How many times the quad tree should divide the world on each axis.Generally, sparse collisions can have fewer divisons,while denser collision activity usually profits from more. Default value is 6. "},"flixel.FlxG.overlap":{"id":"overlap","code":"static overlap(?ObjectOrGroup1:FlxBasic, ?ObjectOrGroup2:FlxBasic, ?NotifyCallback:(Dynamic, Dynamic) ‑> Void, ?ProcessCallback:(Dynamic, Dynamic) ‑> Bool):Bool","doc":"Call this function to see if one FlxObject overlaps another within FlxG.worldBounds.Can be called with one object and one group, or two groups, or two objects,whatever floats your boat! For maximum performance try bundling a lot of objectstogether using a FlxGroup (or even bundling groups together!). NOTE: does NOT take objects' scrollFactor into account, all overlaps are checked in world space. NOTE: this takes the entire area of FlxTilemaps into account (including \"empty\" tiles).Use FlxTilemap#overlaps() if you don't want that. "},"flixel.FlxG.removeChild":{"id":"removeChild","code":"static inline removeChild<T>(Child:T):T","doc":"Removes a child from the Flixel display list, if it is part of it. "},"flixel.FlxG.removePostProcess":{"id":"removePostProcess","code":"static removePostProcess(postProcess:PostProcess):Void","doc":""}}}}
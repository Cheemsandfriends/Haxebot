// Generated by Haxe 4.2.1+bf9ff69
const { Routes } = require('discord-api-types/v9');
;(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var DateTools = function() { };
$hxClasses["DateTools"] = DateTools;
DateTools.__name__ = "DateTools";
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "A":
		return DateTools.DAY_NAMES[d.getDay()];
	case "B":
		return DateTools.MONTH_NAMES[d.getMonth()];
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "a":
		return DateTools.DAY_SHORT_NAMES[d.getDay()];
	case "b":case "h":
		return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new haxe_exceptions_NotImplementedException("Date.format %" + e + "- not implemented yet.",null,{ fileName : "DateTools.hx", lineNumber : 101, className : "DateTools", methodName : "__format_get"});
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len = f.length - p;
	r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
DateTools.delta = function(d,t) {
	return new Date(d.getTime() + t);
};
DateTools.getMonthDays = function(d) {
	var month = d.getMonth();
	var year = d.getFullYear();
	if(month != 1) {
		return DateTools.DAYS_OF_MONTH[month];
	}
	var isB = year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
	if(isB) {
		return 29;
	} else {
		return 28;
	}
};
DateTools.seconds = function(n) {
	return n * 1000.0;
};
DateTools.minutes = function(n) {
	return n * 60.0 * 1000.0;
};
DateTools.hours = function(n) {
	return n * 60.0 * 60.0 * 1000.0;
};
DateTools.days = function(n) {
	return n * 24.0 * 60.0 * 60.0 * 1000.0;
};
DateTools.parse = function(t) {
	var s = t / 1000;
	var m = s / 60;
	var h = m / 60;
	return { ms : t % 1000, seconds : s % 60 | 0, minutes : m % 60 | 0, hours : h % 24 | 0, days : h / 24 | 0};
};
DateTools.make = function(o) {
	return o.ms + 1000.0 * (o.seconds + 60.0 * (o.minutes + 60.0 * (o.hours + 24.0 * o.days)));
};
DateTools.makeUtc = function(year,month,day,hour,min,sec) {
	return Date.UTC(year,month,day,hour,min,sec);
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.escape = function(s) {
	return s.replace(EReg.escapeRe,"\\$&");
};
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedLeft: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return HxOverrides.substr(this.r.s,0,this.r.m.index);
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	,split: function(s) {
		return s.replace(this.r,"#__delim__#").split("#__delim__#");
	}
	,replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var EnumValue = {};
EnumValue.match = function(this1,pattern) {
	return false;
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k = s.split("-");
		return new Date(k[0],k[1] - 1,k[2],0,0,0);
	case 19:
		var k = s.split(" ");
		var y = k[0].split("-");
		var t = k[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw haxe_Exception.thrown("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) {
			i = 0;
		}
	}
	while(i < len) {
		if(((a[i]) === obj)) {
			return i;
		}
		++i;
	}
	return -1;
};
HxOverrides.lastIndexOf = function(a,obj,i) {
	var len = a.length;
	if(i >= len) {
		i = len - 1;
	} else if(i < 0) {
		i += len;
	}
	while(i >= 0) {
		if(((a[i]) === obj)) {
			return i;
		}
		--i;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
HxOverrides.keyValueIter = function(a) {
	return new haxe_iterators_ArrayKeyValueIterator(a);
};
HxOverrides.now = function() {
	return Date.now();
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = "IntIterator";
IntIterator.prototype = {
	min: null
	,max: null
	,hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
Lambda.list = function(it) {
	var l = new haxe_ds_List();
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		l.add(i1);
	}
	return l;
};
Lambda.map = function(it,f) {
	var _g = [];
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		_g.push(f(x1));
	}
	return _g;
};
Lambda.mapi = function(it,f) {
	var i = 0;
	var _g = [];
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		_g.push(f(i++,x1));
	}
	return _g;
};
Lambda.flatten = function(it) {
	var _g = [];
	var e = $getIterator(it);
	while(e.hasNext()) {
		var e1 = e.next();
		var x = $getIterator(e1);
		while(x.hasNext()) {
			var x1 = x.next();
			_g.push(x1);
		}
	}
	return _g;
};
Lambda.flatMap = function(it,f) {
	var _g = [];
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		_g.push(f(x1));
	}
	var _g1 = [];
	var e = $getIterator(_g);
	while(e.hasNext()) {
		var e1 = e.next();
		var x = $getIterator(e1);
		while(x.hasNext()) {
			var x1 = x.next();
			_g1.push(x1);
		}
	}
	return _g1;
};
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.exists = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
Lambda.foreach = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(!f(x1)) {
			return false;
		}
	}
	return true;
};
Lambda.iter = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		f(x1);
	}
};
Lambda.filter = function(it,f) {
	var _g = [];
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			_g.push(x1);
		}
	}
	return _g;
};
Lambda.fold = function(it,f,first) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		first = f(x1,first);
	}
	return first;
};
Lambda.foldi = function(it,f,first) {
	var i = 0;
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		first = f(x1,first,i);
		++i;
	}
	return first;
};
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $getIterator(it);
		while(_.hasNext()) {
			_.next();
			++n;
		}
	} else {
		var x = $getIterator(it);
		while(x.hasNext()) {
			var x1 = x.next();
			if(pred(x1)) {
				++n;
			}
		}
	}
	return n;
};
Lambda.empty = function(it) {
	return !$getIterator(it).hasNext();
};
Lambda.indexOf = function(it,v) {
	var i = 0;
	var v2 = $getIterator(it);
	while(v2.hasNext()) {
		var v21 = v2.next();
		if(v == v21) {
			return i;
		}
		++i;
	}
	return -1;
};
Lambda.find = function(it,f) {
	var v = $getIterator(it);
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			return v1;
		}
	}
	return null;
};
Lambda.findIndex = function(it,f) {
	var i = 0;
	var v = $getIterator(it);
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			return i;
		}
		++i;
	}
	return -1;
};
Lambda.concat = function(a,b) {
	var l = [];
	var x = $getIterator(a);
	while(x.hasNext()) {
		var x1 = x.next();
		l.push(x1);
	}
	var x = $getIterator(b);
	while(x.hasNext()) {
		var x1 = x.next();
		l.push(x1);
	}
	return l;
};
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.__properties__ = {get_name:"get_name"};
Main.client = null;
Main.config = null;
Main.universe = null;
Main.start = function() {
	Main.universe = new ecs_Universe(1000);
	Main.universe.systems.add(new systems_commands_Hi(Main.universe));
	Main.universe.systems.add(new systems_commands_Help(Main.universe));
	Main.universe.systems.add(new systems_commands_Haxelib(Main.universe));
	Main.universe.systems.add(new systems_commands_Notify(Main.universe));
	Main.universe.systems.add(new systems_commands_Rtfm(Main.universe));
	Main.universe.systems.add(new systems_commands_Roundup(Main.universe));
	Main.universe.systems.add(new systems_commands_Api(Main.universe));
	Main.universe.systems.add(new systems_commands_Run(Main.universe));
	Main.client = new discord_$js_Client({ intents : ["GUILDS","GUILD_MESSAGES"]});
	Main.client.once("ready",function() {
		var $l=arguments.length;
		var _ = new Array($l>0?$l-0:0);
		for(var $i=0;$i<$l;++$i){_[$i-0]=arguments[$i];}
		haxe_Log.trace("Ready!",{ fileName : "src/Main.hx", lineNumber : 51, className : "Main", methodName : "start"});
		Main.connected = true;
	});
	Main.client.on("messageCreate",function(message) {
		if(message.channel.type == "dm") {
			return;
		}
		if(StringTools.startsWith(message.toString(),"!run")) {
			var code = message.toString();
			var _ecsTmpEntity = Main.universe.entities.create();
			Main.universe.components.set_systems_commands_RunMessage(_ecsTmpEntity,3,code);
			Main.universe.components.set_discord_js_Message(_ecsTmpEntity,2,message);
			var ecsEntCompFlags = Main.universe.components.flags[ecs_Entity.id(_ecsTmpEntity)];
			var ecsTmpFamily = Main.universe.families.get(1);
			if(bits_Bits.areSet(ecsEntCompFlags,ecsTmpFamily.componentsMask)) {
				ecsTmpFamily.add(_ecsTmpEntity);
			}
		}
	});
	Main.client.on("interactionCreate",function(interaction) {
		if(!interaction.isCommand()) {
			return;
		}
		var command = { name : interaction.commandName, content : null};
		var enum_id = command.name.charAt(0).toUpperCase() + command.name.substring(1);
		var _g = 0;
		var _g1 = Main.config.commands;
		while(_g < _g1.length) {
			var value = _g1[_g];
			++_g;
			if(value.name != command.name) {
				continue;
			}
			if(value.params == null) {
				command.content = Type.createEnum(components_CommandOptions,enum_id);
				break;
			} else {
				var params = [];
				var _g2 = 0;
				var _g3 = value.params;
				while(_g2 < _g3.length) {
					var param = _g3[_g2];
					++_g2;
					switch(param.type) {
					case "bool":
						params.push(interaction.options.getBoolean(param.name));
						break;
					case "channel":
						params.push(interaction.options.getChannel(param.name));
						break;
					case "mention":
						params.push(interaction.options.getMentionable(param.name));
						break;
					case "number":
						params.push(interaction.options.getNumber(param.name));
						break;
					case "role":
						params.push(interaction.options.getRole(param.name));
						break;
					case "string":
						params.push(interaction.options.getString(param.name));
						break;
					case "user":
						params.push(interaction.options.getUser(param.name));
						break;
					default:
						throw haxe_Exception.thrown("Something went wrong.");
					}
				}
				command.content = Type.createEnum(components_CommandOptions,enum_id,params);
				break;
			}
		}
		if(command.content == null) {
			haxe_Log.trace(interaction,{ fileName : "src/Main.hx", lineNumber : 109, className : "Main", methodName : "start"});
			haxe_Log.trace(enum_id,{ fileName : "src/Main.hx", lineNumber : 110, className : "Main", methodName : "start"});
			haxe_Log.trace("Unmatched command. (" + command.name + ")",{ fileName : "src/Main.hx", lineNumber : 111, className : "Main", methodName : "start"});
		}
		var _ecsTmpEntity = Main.universe.entities.create();
		Main.universe.components.set_components_Command(_ecsTmpEntity,1,command);
		Main.universe.components.set_discord_builder_BaseCommandInteraction(_ecsTmpEntity,0,interaction);
		var ecsEntCompFlags = Main.universe.components.flags[ecs_Entity.id(_ecsTmpEntity)];
		var ecsTmpFamily = Main.universe.families.get(0);
		if(bits_Bits.areSet(ecsEntCompFlags,ecsTmpFamily.componentsMask)) {
			ecsTmpFamily.add(_ecsTmpEntity);
		}
	});
	Main.client.login(Main.config.discord_token);
	new haxe_Timer(100).run = function() {
		Main.universe.update(1);
	};
};
Main.main = function() {
	try {
		Main.config = JSON.parse(js_node_Fs.readFileSync("./config.json",{ encoding : "utf8"}));
	} catch( _g ) {
		var _g1 = haxe_Exception.caught(_g);
		haxe_Log.trace(_g1.get_message(),{ fileName : "src/Main.hx", lineNumber : 127, className : "Main", methodName : "main"});
	}
	if(Main.config == null || Main.config.discord_token == "TOKEN_HERE") {
		throw haxe_Exception.thrown("Enter your discord auth token.");
	}
	var commands = Main.parseCommands();
	var rest = new discordjs_rest_REST({ version : "9"}).setToken(Main.config.discord_token);
	rest.put(Routes.applicationGuildCommands(Main.config.client_id,Main.config.server_id),{ body : commands}).then(function(_) {
		haxe_Log.trace("Successfully registered application commands.",{ fileName : "src/Main.hx", lineNumber : 139, className : "Main", methodName : "main"});
	},function(err) {
		haxe_Log.trace(err,{ fileName : "src/Main.hx", lineNumber : 139, className : "Main", methodName : "main"});
	});
	Main.start();
};
Main.parseCommands = function() {
	var command_defs = Main.config.commands;
	if(command_defs == null || command_defs.length == 0) {
		throw haxe_Exception.thrown("No commands configured in the config.json file.");
	}
	var commands = [];
	var _g = 0;
	while(_g < command_defs.length) {
		var command = command_defs[_g];
		++_g;
		var main_command = new discord_$builder_SlashCommandBuilder().setName(command.name).setDescription(command.description);
		if(command.params != null) {
			var _g1 = 0;
			var _g2 = command.params;
			while(_g1 < _g2.length) {
				var param = _g2[_g1];
				++_g1;
				switch(param.type) {
				case "bool":
					main_command.addBooleanOption(new discord_$builder_SlashCommandBooleanOption().setName(param.name).setDescription(param.description).setRequired(param.required));
					break;
				case "channel":
					main_command.addChannelOption(new discord_$builder_SlashCommandChannelOption().setName(param.name).setDescription(param.description).setRequired(param.required));
					break;
				case "mention":
					main_command.addMentionableOption(new discord_$builder_SlashCommandMentionableOption().setName(param.name).setDescription(param.description).setRequired(param.required));
					break;
				case "number":
					main_command.addNumberOption(new discord_$builder_SlashCommandNumberOption().setName(param.name).setDescription(param.description).setRequired(param.required));
					break;
				case "role":
					main_command.addRoleOption(new discord_$builder_SlashCommandRoleOption().setName(param.name).setDescription(param.description).setRequired(param.required));
					break;
				case "string":
					main_command.addStringOption(new discord_$builder_SlashCommandStringOption().setName(param.name).setDescription(param.description).setRequired(param.required));
					break;
				case "user":
					main_command.addUserOption(new discord_$builder_SlashCommandUserOption().setName(param.name).setDescription(param.description).setRequired(param.required));
					break;
				default:
				}
			}
		}
		commands.push(discord_$builder_AnySlashCommand.fromBase(main_command));
	}
	return commands;
};
Main.get_name = function() {
	if(Main.config == null || Main.config.project_name == null) {
		return "bot";
	}
	return Main.config.project_name;
};
Math.__name__ = "Math";
var NodeHtmlParser = require("node-html-parser");
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.hasField = function(o,field) {
	return Object.prototype.hasOwnProperty.call(o,field);
};
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.setField = function(o,field,value) {
	o[field] = value;
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.copy = function(o) {
	if(o == null) {
		return null;
	}
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice;
		var a1 = arguments;
		var a2 = a.call(a1);
		return f(a2);
	};
};
var Safety = function() { };
$hxClasses["Safety"] = Safety;
Safety.__name__ = "Safety";
Safety.or = function(value,defaultValue) {
	if(value == null) {
		return defaultValue;
	} else {
		return value;
	}
};
Safety.orGet = function(value,getter) {
	if(value == null) {
		return getter();
	} else {
		return value;
	}
};
Safety.sure = function(value) {
	if(value == null) {
		throw new safety_NullPointerException("Null pointer in .sure() call");
	} else {
		return value;
	}
};
Safety.unsafe = function(value) {
	return value;
};
Safety.check = function(value,callback) {
	if(value != null) {
		return callback(value);
	} else {
		return false;
	}
};
Safety.let = function(value,callback) {
	if(value == null) {
		return null;
	} else {
		return callback(value);
	}
};
Safety.run = function(value,callback) {
	if(value != null) {
		callback(value);
	}
};
Safety.apply = function(value,callback) {
	if(value != null) {
		callback(value);
	}
	return value;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.is = function(v,t) {
	return js_Boot.__instanceof(v,t);
};
Std.isOfType = function(v,t) {
	return js_Boot.__instanceof(v,t);
};
Std.downcast = function(value,c) {
	if(js_Boot.__downcastCheck(value,c)) {
		return value;
	} else {
		return null;
	}
};
Std.instance = function(value,c) {
	if(js_Boot.__downcastCheck(value,c)) {
		return value;
	} else {
		return null;
	}
};
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.int = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,get_length: function() {
		return this.b.length;
	}
	,add: function(x) {
		this.b += Std.string(x);
	}
	,addChar: function(c) {
		this.b += String.fromCodePoint(c);
	}
	,addSub: function(s,pos,len) {
		this.b += len == null ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len);
	}
	,toString: function() {
		return this.b;
	}
	,__class__: StringBuf
	,__properties__: {get_length:"get_length"}
};
var haxe_SysTools = function() { };
$hxClasses["haxe.SysTools"] = haxe_SysTools;
haxe_SysTools.__name__ = "haxe.SysTools";
haxe_SysTools.quoteUnixArg = function(argument) {
	if(argument == "") {
		return "''";
	}
	if(!new EReg("[^a-zA-Z0-9_@%+=:,./-]","").match(argument)) {
		return argument;
	}
	return "'" + StringTools.replace(argument,"'","'\"'\"'") + "'";
};
haxe_SysTools.quoteWinArg = function(argument,escapeMetaCharacters) {
	if(!new EReg("^[^ \t\\\\\"]+$","").match(argument)) {
		var result_b = "";
		var needquote = argument.indexOf(" ") != -1 || argument.indexOf("\t") != -1 || argument == "";
		if(needquote) {
			result_b += "\"";
		}
		var bs_buf = new StringBuf();
		var _g = 0;
		var _g1 = argument.length;
		while(_g < _g1) {
			var i = _g++;
			var _g2 = HxOverrides.cca(argument,i);
			if(_g2 == null) {
				var c = _g2;
				if(bs_buf.b.length > 0) {
					result_b += Std.string(bs_buf.b);
					bs_buf = new StringBuf();
				}
				result_b += String.fromCodePoint(c);
			} else {
				switch(_g2) {
				case 34:
					var bs = bs_buf.b;
					result_b += bs == null ? "null" : "" + bs;
					result_b += bs == null ? "null" : "" + bs;
					bs_buf = new StringBuf();
					result_b += "\\\"";
					break;
				case 92:
					bs_buf.b += "\\";
					break;
				default:
					var c1 = _g2;
					if(bs_buf.b.length > 0) {
						result_b += Std.string(bs_buf.b);
						bs_buf = new StringBuf();
					}
					result_b += String.fromCodePoint(c1);
				}
			}
		}
		result_b += Std.string(bs_buf.b);
		if(needquote) {
			result_b += Std.string(bs_buf.b);
			result_b += "\"";
		}
		argument = result_b;
	}
	if(escapeMetaCharacters) {
		var result_b = "";
		var _g = 0;
		var _g1 = argument.length;
		while(_g < _g1) {
			var i = _g++;
			var c = HxOverrides.cca(argument,i);
			if(haxe_SysTools.winMetaCharacters.indexOf(c) >= 0) {
				result_b += String.fromCodePoint(94);
			}
			result_b += String.fromCodePoint(c);
		}
		return result_b;
	} else {
		return argument;
	}
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.urlEncode = function(s) {
	return encodeURIComponent(s);
};
StringTools.urlDecode = function(s) {
	return decodeURIComponent(s.split("+").join(" "));
};
StringTools.htmlEscape = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var s = _g_s;
		var index = _g_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var code = c1;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
StringTools.htmlUnescape = function(s) {
	return s.split("&gt;").join(">").split("&lt;").join("<").split("&quot;").join("\"").split("&#039;").join("'").split("&amp;").join("&");
};
StringTools.contains = function(s,value) {
	return s.indexOf(value) != -1;
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	buf_b = "" + (s == null ? "null" : "" + s);
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	while(true) {
		s = "0123456789ABCDEF".charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
StringTools.unsafeCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
StringTools.iterator = function(s) {
	return new haxe_iterators_StringIterator(s);
};
StringTools.keyValueIterator = function(s) {
	return new haxe_iterators_StringKeyValueIterator(s);
};
StringTools.isEof = function(c) {
	return c != c;
};
StringTools.quoteUnixArg = function(argument) {
	if(argument == "") {
		return "''";
	} else if(!new EReg("[^a-zA-Z0-9_@%+=:,./-]","").match(argument)) {
		return argument;
	} else {
		return "'" + StringTools.replace(argument,"'","'\"'\"'") + "'";
	}
};
StringTools.quoteWinArg = function(argument,escapeMetaCharacters) {
	var argument1 = argument;
	if(!new EReg("^[^ \t\\\\\"]+$","").match(argument1)) {
		var result_b = "";
		var needquote = argument1.indexOf(" ") != -1 || argument1.indexOf("\t") != -1 || argument1 == "";
		if(needquote) {
			result_b += "\"";
		}
		var bs_buf = new StringBuf();
		var _g = 0;
		var _g1 = argument1.length;
		while(_g < _g1) {
			var i = _g++;
			var _g2 = HxOverrides.cca(argument1,i);
			if(_g2 == null) {
				var c = _g2;
				if(bs_buf.b.length > 0) {
					result_b += Std.string(bs_buf.b);
					bs_buf = new StringBuf();
				}
				result_b += String.fromCodePoint(c);
			} else {
				switch(_g2) {
				case 34:
					var bs = bs_buf.b;
					result_b += Std.string(bs);
					result_b += Std.string(bs);
					bs_buf = new StringBuf();
					result_b += "\\\"";
					break;
				case 92:
					bs_buf.b += "\\";
					break;
				default:
					var c1 = _g2;
					if(bs_buf.b.length > 0) {
						result_b += Std.string(bs_buf.b);
						bs_buf = new StringBuf();
					}
					result_b += String.fromCodePoint(c1);
				}
			}
		}
		result_b += Std.string(bs_buf.b);
		if(needquote) {
			result_b += Std.string(bs_buf.b);
			result_b += "\"";
		}
		argument1 = result_b;
	}
	if(escapeMetaCharacters) {
		var result_b = "";
		var _g = 0;
		var _g1 = argument1.length;
		while(_g < _g1) {
			var i = _g++;
			var c = HxOverrides.cca(argument1,i);
			if(haxe_SysTools.winMetaCharacters.indexOf(c) >= 0) {
				result_b += String.fromCodePoint(94);
			}
			result_b += String.fromCodePoint(c);
		}
		return result_b;
	} else {
		return argument1;
	}
};
StringTools.utf16CodePointAt = function(s,index) {
	var c = s.charCodeAt(index);
	if(c >= 55296 && c <= 56319) {
		c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
	}
	return c;
};
var ValueType = $hxEnums["ValueType"] = { __ename__:"ValueType",__constructs__:null
	,TNull: {_hx_name:"TNull",_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_name:"TObject",_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_name:"TFunction",_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TClass",$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_name:"TUnknown",_hx_index:8,__enum__:"ValueType",toString:$estr}
};
ValueType.__constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TClass,ValueType.TEnum,ValueType.TUnknown];
ValueType.__empty_constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.getClass = function(o) {
	return js_Boot.getClass(o);
};
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return $hxEnums[o.__enum__];
};
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	return c.__name__;
};
Type.getEnumName = function(e) {
	return e.__ename__;
};
Type.resolveClass = function(name) {
	return $hxClasses[name];
};
Type.resolveEnum = function(name) {
	return $hxEnums[name];
};
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.createEmptyInstance = function(cl) {
	return Object.create(cl.prototype);
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c;
	var _g = e.__constructs__[index];
	if(_g == null) {
		c = null;
	} else {
		var ctor = _g;
		c = ctor._hx_name;
	}
	if(c == null) {
		throw haxe_Exception.thrown(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.getClassFields = function(c) {
	var a = Reflect.fields(c);
	HxOverrides.remove(a,"__name__");
	HxOverrides.remove(a,"__interfaces__");
	HxOverrides.remove(a,"__properties__");
	HxOverrides.remove(a,"__super__");
	HxOverrides.remove(a,"__meta__");
	HxOverrides.remove(a,"prototype");
	return a;
};
Type.getEnumConstructs = function(e) {
	var _this = e.__constructs__;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = _this[i]._hx_name;
	}
	return result;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var params = enm.__constructs__[a._hx_index].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( _g ) {
		return false;
	}
	return true;
};
Type.enumConstructor = function(e) {
	return $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var params = enm.__constructs__[e._hx_index].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
Type.enumIndex = function(e) {
	return e._hx_index;
};
Type.allEnums = function(e) {
	return e.__empty_constructs__.slice();
};
function Util_loadFile(filename,pos) {
	var data = null;
	try {
		data = JSON.parse(js_node_Fs.readFileSync("./commands/" + filename + ".json",{ encoding : "utf8"}));
	} catch( _g ) {
		var _g1 = haxe_Exception.caught(_g);
		haxe_Log.trace(_g1,{ fileName : "src/Util.hx", lineNumber : 12, className : "_Util.Util_Fields_", methodName : "loadFile"});
		haxe_Log.trace("Failed to load file or parse json",{ fileName : "src/Util.hx", lineNumber : 13, className : "_Util.Util_Fields_", methodName : "loadFile", customParams : [pos]});
	}
	return data;
}
function Util_hasRole(role,interaction) {
	var guild = interaction.member.roles.cache.get(role);
	if(interaction.guild.available) {
		var _v_ = guild == null ? null : guild.members;
		if(_v_ == null) {
			return null;
		} else {
			return _v_.has(interaction.user.id);
		}
	} else {
		return false;
	}
}
var bits_Bits = {};
bits_Bits.fromPositions = function(positions) {
	var this1 = [0];
	var this2 = this1;
	var bits = this2;
	var _g = 0;
	while(_g < positions.length) {
		var pos = positions[_g];
		++_g;
		if(pos < 32) {
			bits[0] |= 1 << pos;
		} else {
			var cell = pos / 32 | 0;
			if(bits.length <= cell) {
				var _g1 = bits.length;
				var _g2 = cell + 1;
				while(_g1 < _g2) {
					var i = _g1++;
					bits[i] = 0;
				}
			}
			var bit = pos - cell * 32;
			bits[cell] |= 1 << bit;
		}
	}
	return bits;
};
bits_Bits._new = function(capacity) {
	if(capacity == null) {
		capacity = 0;
	}
	var this1 = [0];
	var this2 = this1;
	if(capacity > 0) {
		var newLength = Math.ceil(capacity / 32);
		var _g = this2.length;
		while(_g < newLength) {
			var i = _g++;
			this2[i] = 0;
		}
	}
	return this2;
};
bits_Bits.set = function(this1,pos) {
	if(pos < 32) {
		this1[0] |= 1 << pos;
	} else {
		var cell = pos / 32 | 0;
		if(this1.length <= cell) {
			var _g = this1.length;
			var _g1 = cell + 1;
			while(_g < _g1) {
				var i = _g++;
				this1[i] = 0;
			}
		}
		var bit = pos - cell * 32;
		this1[cell] |= 1 << bit;
	}
};
bits_Bits.unset = function(this1,pos) {
	if(pos < 32) {
		this1[0] &= ~(1 << pos);
	} else {
		var cell = pos / 32 | 0;
		if(this1.length <= cell) {
			var _g = this1.length;
			var _g1 = cell + 1;
			while(_g < _g1) {
				var i = _g++;
				this1[i] = 0;
			}
		}
		var bit = pos - cell * 32;
		this1[cell] &= ~(1 << bit);
	}
};
bits_Bits.add = function(this1,bits) {
	var data = bits;
	if(this1.length < data.length) {
		var newLength = data.length;
		var _g = this1.length;
		while(_g < newLength) {
			var i = _g++;
			this1[i] = 0;
		}
	}
	var _g = 0;
	var _g1 = data.length;
	while(_g < _g1) {
		var cell = _g++;
		this1[cell] |= data[cell];
	}
};
bits_Bits.remove = function(this1,bits) {
	var data = bits;
	var _g = 0;
	var _g1 = data.length;
	while(_g < _g1) {
		var cell = _g++;
		if(cell >= this1.length) {
			break;
		}
		this1[cell] &= ~data[cell];
	}
};
bits_Bits.isSet = function(this1,pos) {
	if(pos < 32) {
		return 0 != (this1[0] & 1 << pos);
	} else {
		var cell = pos / 32 | 0;
		var bit = pos - cell * 32;
		if(cell < this1.length) {
			return 0 != (this1[cell] & 1 << bit);
		} else {
			return false;
		}
	}
};
bits_Bits.areSet = function(this1,bits) {
	var data = bits;
	var has = true;
	var _g = 0;
	var _g1 = data.length;
	while(_g < _g1) {
		var cell = _g++;
		if(cell < this1.length) {
			has = data[cell] == (this1[cell] & data[cell]);
		} else {
			has = 0 == data[cell];
		}
		if(!has) {
			break;
		}
	}
	return has;
};
bits_Bits.forEach = function(this1,callback) {
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var cell = _g++;
		var cellValue = this1[cell];
		if(cellValue != 0) {
			var _g2 = 0;
			while(_g2 < 32) {
				var i = _g2++;
				if(0 != (cellValue & 1 << i)) {
					callback(cell * 32 + i);
				}
			}
		}
	}
};
bits_Bits.copy = function(this1) {
	return this1.slice();
};
bits_Bits.toString = function(this1) {
	var result = "";
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var cell = _g++;
		var cellValue = this1[cell];
		var _g2 = 0;
		while(_g2 < 32) {
			var i = _g2++;
			result = (0 != (cellValue & 1 << i) ? "1" : "0") + result;
		}
	}
	return HxOverrides.substr(result,result.indexOf("1"),null);
};
bits_Bits.isEmpty = function(this1) {
	var empty = true;
	var _g = 0;
	while(_g < this1.length) {
		var cellValue = this1[_g];
		++_g;
		if(cellValue != 0) {
			empty = false;
			break;
		}
	}
	return empty;
};
bits_Bits.count = function(this1) {
	var result = 0;
	var _g = 0;
	while(_g < this1.length) {
		var v = this1[_g];
		++_g;
		if(v != 0) {
			v -= v >>> 1 & 1431655765;
			v = (v & 858993459) + (v >>> 2 & 858993459);
			result += (v + (v >>> 4) & 252645135) * 16843009 >>> 24;
		}
	}
	return result;
};
bits_Bits.clear = function(this1) {
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var cell = _g++;
		this1[cell] = 0;
	}
};
bits_Bits.merge = function(this1,bits) {
	if(this1.length < bits.length) {
		var result = bits.slice();
		var _g = 0;
		var _g1 = this1.length;
		while(_g < _g1) {
			var cell = _g++;
			result[cell] |= this1[cell];
		}
		return result;
	} else {
		var result = this1.slice();
		var _g = 0;
		var _g1 = bits.length;
		while(_g < _g1) {
			var cell = _g++;
			result[cell] |= bits[cell];
		}
		return result;
	}
};
bits_Bits.intersect = function(this1,bits) {
	if(this1.length < bits.length) {
		var result = this1.slice();
		var _g = 0;
		var _g1 = this1.length;
		while(_g < _g1) {
			var cell = _g++;
			result[cell] &= bits[cell];
		}
		return result;
	} else {
		var result = bits.slice();
		var _g = 0;
		var _g1 = bits.length;
		while(_g < _g1) {
			var cell = _g++;
			result[cell] &= this1[cell];
		}
		return result;
	}
};
bits_Bits.iterator = function(this1) {
	return new bits_BitsIterator(this1);
};
var bits_BitsIterator = function(data) {
	this.i = 0;
	this.cell = 0;
	this.data = data;
};
$hxClasses["bits.BitsIterator"] = bits_BitsIterator;
bits_BitsIterator.__name__ = "bits.BitsIterator";
bits_BitsIterator.prototype = {
	data: null
	,cell: null
	,i: null
	,hasNext: function() {
		var has = false;
		while(this.cell < this.data.length) {
			var cellValue = this.data[this.cell];
			if(cellValue != 0) {
				while(this.i < 32) {
					if((cellValue & 1 << this.i) != 0) {
						has = true;
						break;
					}
					++this.i;
				}
				if(has) {
					break;
				}
			}
			this.i = 0;
			++this.cell;
		}
		return has;
	}
	,next: function() {
		++this.i;
		return this.cell * 32 + this.i - 1;
	}
	,__class__: bits_BitsIterator
};
var bits_BitsData = {};
bits_BitsData.__properties__ = {get_length:"get_length"};
bits_BitsData._new = function() {
	var this1 = [0];
	return this1;
};
bits_BitsData.resize = function(this1,newLength) {
	var _g = this1.length;
	while(_g < newLength) {
		var i = _g++;
		this1[i] = 0;
	}
};
bits_BitsData.copy = function(this1) {
	return this1.slice();
};
bits_BitsData.countOnes = function(this1) {
	var result = 0;
	var _g = 0;
	while(_g < this1.length) {
		var v = this1[_g];
		++_g;
		if(v != 0) {
			v -= v >>> 1 & 1431655765;
			v = (v & 858993459) + (v >>> 2 & 858993459);
			result += (v + (v >>> 4) & 252645135) * 16843009 >>> 24;
		}
	}
	return result;
};
bits_BitsData.get = function(this1,index) {
	return this1[index];
};
bits_BitsData.set = function(this1,index,value) {
	return this1[index] = value;
};
bits_BitsData.get_length = function(this1) {
	return this1.length;
};
var components_CommandOptions = $hxEnums["components.CommandOptions"] = { __ename__:"components.CommandOptions",__constructs__:null
	,Hi: {_hx_name:"Hi",_hx_index:0,__enum__:"components.CommandOptions",toString:$estr}
	,Roundup: ($_=function(number) { return {_hx_index:1,number:number,__enum__:"components.CommandOptions",toString:$estr}; },$_._hx_name="Roundup",$_.__params__ = ["number"],$_)
	,Rtfm: ($_=function(channel) { return {_hx_index:2,channel:channel,__enum__:"components.CommandOptions",toString:$estr}; },$_._hx_name="Rtfm",$_.__params__ = ["channel"],$_)
	,Api: ($_=function(channel) { return {_hx_index:3,channel:channel,__enum__:"components.CommandOptions",toString:$estr}; },$_._hx_name="Api",$_.__params__ = ["channel"],$_)
	,Notify: ($_=function(channel) { return {_hx_index:4,channel:channel,__enum__:"components.CommandOptions",toString:$estr}; },$_._hx_name="Notify",$_.__params__ = ["channel"],$_)
	,Code: ($_=function(code) { return {_hx_index:5,code:code,__enum__:"components.CommandOptions",toString:$estr}; },$_._hx_name="Code",$_.__params__ = ["code"],$_)
	,Help: ($_=function(category) { return {_hx_index:6,category:category,__enum__:"components.CommandOptions",toString:$estr}; },$_._hx_name="Help",$_.__params__ = ["category"],$_)
	,Haxelib: ($_=function(command) { return {_hx_index:7,command:command,__enum__:"components.CommandOptions",toString:$estr}; },$_._hx_name="Haxelib",$_.__params__ = ["command"],$_)
};
components_CommandOptions.__constructs__ = [components_CommandOptions.Hi,components_CommandOptions.Roundup,components_CommandOptions.Rtfm,components_CommandOptions.Api,components_CommandOptions.Notify,components_CommandOptions.Code,components_CommandOptions.Help,components_CommandOptions.Haxelib];
components_CommandOptions.__empty_constructs__ = [components_CommandOptions.Hi];
var discord_$builder_SharedNameAndDescription = require("@discordjs/builders").SharedNameAndDescription;
var discord_$builder_SharedSlashCommandOptions = require("@discordjs/builders").SharedSlashCommandOptions;
var discord_$builder_AnySlashCommand = {};
discord_$builder_AnySlashCommand._new = function(builder) {
	return builder;
};
discord_$builder_AnySlashCommand.fromBase = function(base) {
	return discord_$builder_AnySlashCommand._new(base);
};
discord_$builder_AnySlashCommand.fromUser = function(user) {
	return discord_$builder_AnySlashCommand._new(user);
};
discord_$builder_AnySlashCommand.fromBool = function(bool) {
	return discord_$builder_AnySlashCommand._new(bool);
};
discord_$builder_AnySlashCommand.fromString = function(string) {
	return discord_$builder_AnySlashCommand._new(string);
};
discord_$builder_AnySlashCommand.fromChannel = function(channel) {
	return discord_$builder_AnySlashCommand._new(channel);
};
discord_$builder_AnySlashCommand.fromRole = function(role) {
	return discord_$builder_AnySlashCommand._new(role);
};
discord_$builder_AnySlashCommand.fromNumber = function(number) {
	return discord_$builder_AnySlashCommand._new(number);
};
discord_$builder_AnySlashCommand.fromMentionable = function(mentionable) {
	return discord_$builder_AnySlashCommand._new(mentionable);
};
var discord_$builder_SlashCommandOptionBase = require("@discordjs/builders").SlashCommandOptionBase;
var discord_$builder_SlashCommandBooleanOption = require("@discordjs/builders").SlashCommandBooleanOption;
var discord_$builder_SlashCommandBuilder = require("@discordjs/builders").SlashCommandBuilder;
var discord_$builder_SlashCommandChannelOption = require("@discordjs/builders").SlashCommandChannelOption;
var discord_$builder_SlashCommandMentionableOption = require("@discordjs/builders").SlashCommandMentionableOption;
var discord_$builder_SlashCommandNumberOption = require("@discordjs/builders").SlashCommandNumberOption;
var discord_$builder_SlashCommandRoleOption = require("@discordjs/builders").SlashCommandRoleOption;
var discord_$builder_SlashCommandStringOption = require("@discordjs/builders").SlashCommandStringOption;
var discord_$builder_SlashCommandUserOption = require("@discordjs/builders").SlashCommandUserOption;
var discord_$js_APIMessage = require("discord.js").APIMessage;
var discord_$js_Activity = require("discord.js").Activity;
var discord_$js_Application = require("discord.js").Application;
var discord_$js_Base = require("discord.js").Base;
var discord_$js_ApplicationCommandManager = require("discord.js").ApplicationCommandManager;
var discord_$js_BaseClient = require("discord.js").BaseClient;
var discord_$js_Emoji = require("discord.js").Emoji;
var discord_$js_BaseGuildEmoji = require("discord.js").BaseGuildEmoji;
var discord_$js_BaseManager = require("discord.js").BaseManager;
var discord_$js_BitField = require("discord.js").BitField;
var discord_$js_BroadcastDispatcher = require("discord.js").BroadcastDispatcher;
var discord_$js_Channel = require("discord.js").Channel;
var discord_$js_GuildChannel = require("discord.js").GuildChannel;
var discord_$js_CategoryChannel = require("discord.js").CategoryChannel;
var discord_$js_ChannelManager = require("discord.js").ChannelManager;
var discord_$js_Client = require("discord.js").Client;
var discord_$js_ClientApplication = require("discord.js").ClientApplication;
var discord_$js_User = require("discord.js").User;
var discord_$js_ClientUser = require("discord.js").ClientUser;
var discord_$js_ClientVoiceManager = require("discord.js").ClientVoiceManager;
var discordjs_collection_Collection = require("@discordjs/collection").Collection;
var discord_$js_Collection = require("discord.js").Collection;
var discord_$js_Collector = require("discord.js").Collector;
var discord_$js_DMChannel = require("discord.js").DMChannel;
var discord_$js_Guild = require("discord.js").Guild;
var discord_$js_GuildAuditLogs = require("discord.js").GuildAuditLogs;
var discord_$js_GuildAuditLogsEntry = require("discord.js").GuildAuditLogsEntry;
var discord_$js_GuildChannelManager = require("discord.js").GuildChannelManager;
var discord_$js_GuildEmoji = require("discord.js").GuildEmoji;
var discord_$js_GuildEmojiManager = require("discord.js").GuildEmojiManager;
var discord_$js_GuildEmojiRoleManager = require("discord.js").GuildEmojiRoleManager;
var discord_$js_GuildManager = require("discord.js").GuildManager;
var discord_$js_GuildMember = require("discord.js").GuildMember;
var discord_$js_GuildMemberManager = require("discord.js").GuildMemberManager;
var discord_$js_OverridableManager = require("discord.js").OverridableManager;
var discord_$js_GuildMemberRoleManager = require("discord.js").GuildMemberRoleManager;
var discord_$js_GuildPreview = require("discord.js").GuildPreview;
var discord_$js_GuildPreviewEmoji = require("discord.js").GuildPreviewEmoji;
var discord_$js_GuildTemplate = require("discord.js").GuildTemplate;
var discord_$js_Integration = require("discord.js").Integration;
var discord_$js_IntegrationApplication = require("discord.js").IntegrationApplication;
var discord_$js_Invite = require("discord.js").Invite;
var discord_$js_Message = require("discord.js").Message;
var discord_$js_MessageAttachment = require("discord.js").MessageAttachment;
var discord_$js_MessageCollector = require("discord.js").MessageCollector;
var discord_$js_MessageEmbed = require("discord.js").MessageEmbed;
var discord_$js_MessageManager = require("discord.js").MessageManager;
var discord_$js_MessageMentions = require("discord.js").MessageMentions;
var discord_$js_MessageReaction = require("discord.js").MessageReaction;
var discord_$js_NewsChannel = require("discord.js").NewsChannel;
var discord_$js_PartialGroupDMChannel = require("discord.js").PartialGroupDMChannel;
var discord_$js_PermissionOverwrites = require("discord.js").PermissionOverwrites;
var discord_$js_Permissions = require("discord.js").Permissions;
var discord_$js_Presence = require("discord.js").Presence;
var discord_$js_PresenceManager = require("discord.js").PresenceManager;
var discord_$js_ReactionCollector = require("discord.js").ReactionCollector;
var discord_$js_ReactionEmoji = require("discord.js").ReactionEmoji;
var discord_$js_ReactionManager = require("discord.js").ReactionManager;
var discord_$js_ReactionUserManager = require("discord.js").ReactionUserManager;
var discord_$js_RichPresenceAssets = require("discord.js").RichPresenceAssets;
var discord_$js_Role = require("discord.js").Role;
var discord_$js_RoleManager = require("discord.js").RoleManager;
var discord_$js_Shard = require("discord.js").Shard;
var discord_$js_ShardClientUtil = require("discord.js").ShardClientUtil;
var discord_$js_ShardingManager = require("discord.js").ShardingManager;
var discord_$js_StreamDispatcher = require("discord.js").StreamDispatcher;
var discord_$js_Team = require("discord.js").Team;
var discord_$js_TeamMember = require("discord.js").TeamMember;
var discord_$js_TextChannel = require("discord.js").TextChannel;
var discord_$js_UserFlags = require("discord.js").UserFlags;
var discord_$js_UserManager = require("discord.js").UserManager;
var discord_$js_VoiceBroadcast = require("discord.js").VoiceBroadcast;
var discord_$js_VoiceChannel = require("discord.js").VoiceChannel;
var discord_$js_VoiceConnection = require("discord.js").VoiceConnection;
var discord_$js_VoiceReceiver = require("discord.js").VoiceReceiver;
var discord_$js_VoiceRegion = require("discord.js").VoiceRegion;
var discord_$js_VoiceState = require("discord.js").VoiceState;
var discord_$js_VoiceStateManager = require("discord.js").VoiceStateManager;
var discord_$js_WebSocketManager = require("discord.js").WebSocketManager;
var discord_$js_WebSocketShard = require("discord.js").WebSocketShard;
var discord_$js_Webhook = require("discord.js").Webhook;
var discord_$js_WebhookClient = require("discord.js").WebhookClient;
var discordjs_rest_CDN = require("@discordjs/rest").CDN;
var node_Events = require("events");
var discordjs_rest_REST = require("@discordjs/rest").REST;
var discordjs_rest_RequestManager = require("@discordjs/rest").RequestManager;
var ecs_Components = function(_size) {
	var this1 = new Array(_size);
	this.components = this1;
};
$hxClasses["ecs.Components"] = ecs_Components;
ecs_Components.__name__ = "ecs.Components";
ecs_Components.prototype = {
	components: null
	,set: function(_entity,_component) {
		this.components[ecs_Entity.id(_entity)] = _component;
	}
	,get: function(_entity) {
		return this.components[ecs_Entity.id(_entity)];
	}
	,__class__: ecs_Components
};
var ecs_Components_$components_$Command = function(_size) {
	var this1 = new Array(_size);
	this.components = this1;
};
$hxClasses["ecs.Components_components_Command"] = ecs_Components_$components_$Command;
ecs_Components_$components_$Command.__name__ = "ecs.Components_components_Command";
ecs_Components_$components_$Command.prototype = {
	components: null
	,set: function(_entity,_component) {
		this.components[ecs_Entity.id(_entity)] = _component;
	}
	,get: function(_entity) {
		return this.components[ecs_Entity.id(_entity)];
	}
	,__class__: ecs_Components_$components_$Command
};
var ecs_Components_$discord_$builder_$BaseCommandInteraction = function(_size) {
	var this1 = new Array(_size);
	this.components = this1;
};
$hxClasses["ecs.Components_discord_builder_BaseCommandInteraction"] = ecs_Components_$discord_$builder_$BaseCommandInteraction;
ecs_Components_$discord_$builder_$BaseCommandInteraction.__name__ = "ecs.Components_discord_builder_BaseCommandInteraction";
ecs_Components_$discord_$builder_$BaseCommandInteraction.prototype = {
	components: null
	,set: function(_entity,_component) {
		this.components[ecs_Entity.id(_entity)] = _component;
	}
	,get: function(_entity) {
		return this.components[ecs_Entity.id(_entity)];
	}
	,__class__: ecs_Components_$discord_$builder_$BaseCommandInteraction
};
var ecs_Components_$discord_$js_$Message = function(_size) {
	var this1 = new Array(_size);
	this.components = this1;
};
$hxClasses["ecs.Components_discord_js_Message"] = ecs_Components_$discord_$js_$Message;
ecs_Components_$discord_$js_$Message.__name__ = "ecs.Components_discord_js_Message";
ecs_Components_$discord_$js_$Message.prototype = {
	components: null
	,set: function(_entity,_component) {
		this.components[ecs_Entity.id(_entity)] = _component;
	}
	,get: function(_entity) {
		return this.components[ecs_Entity.id(_entity)];
	}
	,__class__: ecs_Components_$discord_$js_$Message
};
var ecs_Components_$systems_$commands_$RunMessage = function(_size) {
	var this1 = new Array(_size);
	this.components = this1;
};
$hxClasses["ecs.Components_systems_commands_RunMessage"] = ecs_Components_$systems_$commands_$RunMessage;
ecs_Components_$systems_$commands_$RunMessage.__name__ = "ecs.Components_systems_commands_RunMessage";
ecs_Components_$systems_$commands_$RunMessage.prototype = {
	components: null
	,set: function(_entity,_component) {
		this.components[ecs_Entity.id(_entity)] = _component;
	}
	,get: function(_entity) {
		return this.components[ecs_Entity.id(_entity)];
	}
	,__class__: ecs_Components_$systems_$commands_$RunMessage
};
var ecs_Entity = {};
ecs_Entity._new = function(_id) {
	return _id;
};
ecs_Entity.id = function(this1) {
	return this1;
};
var ecs_Family = function(_id,_cmpMask,_resMask,_size) {
	this.id = _id;
	this.componentsMask = _cmpMask;
	this.resourcesMask = _resMask;
	this.onEntityAdded = new ecs_ds_Signal_$ecs_$Entity();
	this.onEntityRemoved = new ecs_ds_Signal_$ecs_$Entity();
	this.entities = new ecs_ds_SparseSet(_size);
	this.active = bits_Bits.isEmpty(this.resourcesMask);
};
$hxClasses["ecs.Family"] = ecs_Family;
ecs_Family.__name__ = "ecs.Family";
ecs_Family.prototype = {
	id: null
	,componentsMask: null
	,resourcesMask: null
	,onEntityAdded: null
	,onEntityRemoved: null
	,entities: null
	,active: null
	,add: function(_entity) {
		if(!this.entities.has(_entity)) {
			this.entities.insert(_entity);
			if(this.isActive()) {
				this.onEntityAdded.notify(_entity);
			}
		}
	}
	,remove: function(_entity) {
		if(this.entities.has(_entity)) {
			this.entities.remove(_entity);
			if(this.isActive()) {
				this.onEntityRemoved.notify(_entity);
			}
		}
	}
	,has: function(_entity) {
		return this.entities.has(_entity);
	}
	,activate: function() {
		if(!this.active) {
			this.active = true;
			var _g = 0;
			var _g1 = this.entities.size();
			while(_g < _g1) {
				var i = _g++;
				this.onEntityAdded.notify(this.entities.getDense(i));
			}
		}
	}
	,deactivate: function() {
		if(this.active) {
			var _g = 0;
			var _g1 = this.entities.size();
			while(_g < _g1) {
				var i = _g++;
				this.onEntityRemoved.notify(this.entities.getDense(i));
			}
			this.active = false;
		}
	}
	,isActive: function() {
		return this.active;
	}
	,iterator: function() {
		return new ecs__$Family_FamilyIterator(this.entities,this.isActive());
	}
	,__class__: ecs_Family
};
var ecs__$Family_FamilyIterator = function(_set,_active) {
	this.set = _set;
	this.active = _active;
	this.idx = 0;
};
$hxClasses["ecs._Family.FamilyIterator"] = ecs__$Family_FamilyIterator;
ecs__$Family_FamilyIterator.__name__ = "ecs._Family.FamilyIterator";
ecs__$Family_FamilyIterator.prototype = {
	set: null
	,active: null
	,idx: null
	,hasNext: function() {
		if(this.active) {
			return this.idx < this.set.size();
		} else {
			return false;
		}
	}
	,next: function() {
		return this.set.getDense(this.idx++);
	}
	,__class__: ecs__$Family_FamilyIterator
};
var ecs_System = function(_universe) {
	this.universe = _universe;
};
$hxClasses["ecs.System"] = ecs_System;
ecs_System.__name__ = "ecs.System";
ecs_System.prototype = {
	universe: null
	,onAdded: function() {
	}
	,update: function(_dt) {
	}
	,onRemoved: function() {
	}
	,__class__: ecs_System
};
var ecs_Universe = function(_maxEntities) {
	this.entities = new ecs_core_EntityManager(_maxEntities);
	this.components = new ecs_core_ComponentManager(this.entities);
	this.resources = new ecs_core_ResourceManager();
	this.families = new ecs_core_FamilyManager(this.components,this.resources,_maxEntities);
	this.systems = new ecs_core_SystemManager();
};
$hxClasses["ecs.Universe"] = ecs_Universe;
ecs_Universe.__name__ = "ecs.Universe";
ecs_Universe.prototype = {
	entities: null
	,components: null
	,resources: null
	,families: null
	,systems: null
	,update: function(_dt) {
		this.systems.update(_dt);
	}
	,__class__: ecs_Universe
};
var ecs_core_ComponentManager = function(_entities) {
	this.entities = _entities;
	var this1 = new Array(_entities.capacity());
	this.flags = this1;
	var this1 = new Array(4);
	this.components = this1;
	this.components[1] = new ecs_Components_$components_$Command(_entities.capacity());
	this.components[2] = new ecs_Components_$discord_$js_$Message(_entities.capacity());
	this.components[0] = new ecs_Components_$discord_$builder_$BaseCommandInteraction(_entities.capacity());
	this.components[3] = new ecs_Components_$systems_$commands_$RunMessage(_entities.capacity());
	var _g = 0;
	var _g1 = this.flags.length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = [0];
		var this2 = this1;
		this.flags[i] = this2;
	}
};
$hxClasses["ecs.core.ComponentManager"] = ecs_core_ComponentManager;
ecs_core_ComponentManager.__name__ = "ecs.core.ComponentManager";
ecs_core_ComponentManager.prototype = {
	set_discord_builder_BaseCommandInteraction: function(_entity,_id,_component) {
		this.components[_id].set(_entity,_component);
		bits_Bits.set(this.flags[ecs_Entity.id(_entity)],_id);
	}
	,set_components_Command: function(_entity,_id,_component) {
		this.components[_id].set(_entity,_component);
		bits_Bits.set(this.flags[ecs_Entity.id(_entity)],_id);
	}
	,set_discord_js_Message: function(_entity,_id,_component) {
		this.components[_id].set(_entity,_component);
		bits_Bits.set(this.flags[ecs_Entity.id(_entity)],_id);
	}
	,set_systems_commands_RunMessage: function(_entity,_id,_component) {
		this.components[_id].set(_entity,_component);
		bits_Bits.set(this.flags[ecs_Entity.id(_entity)],_id);
	}
	,entities: null
	,components: null
	,flags: null
	,getTable: function(_compID) {
		return this.components[_compID];
	}
	,remove: function(_entity,_id) {
		bits_Bits.unset(this.flags[ecs_Entity.id(_entity)],_id);
	}
	,clear: function(_entity) {
		bits_Bits.clear(this.flags[ecs_Entity.id(_entity)]);
	}
	,__class__: ecs_core_ComponentManager
};
var ecs_core_EntityManager = function(_max) {
	var this1 = new Array(_max);
	this.storage = this1;
	this.nextID = 0;
};
$hxClasses["ecs.core.EntityManager"] = ecs_core_EntityManager;
ecs_core_EntityManager.__name__ = "ecs.core.EntityManager";
ecs_core_EntityManager.prototype = {
	storage: null
	,nextID: null
	,create: function() {
		var idx = this.nextID++;
		var e = ecs_Entity._new(idx);
		this.storage[idx] = e;
		return e;
	}
	,get: function(_id) {
		return this.storage[_id];
	}
	,capacity: function() {
		return this.storage.length;
	}
	,__class__: ecs_core_EntityManager
};
var ecs_core_FamilyManager = function(_components,_resources,_size) {
	var this1 = new Array(2);
	this.families = this1;
	var this1 = [0];
	var this2 = this1;
	var _g = this2.length;
	while(_g < 1) {
		var i = _g++;
		this2[i] = 0;
	}
	var cmpBits = this2;
	bits_Bits.set(cmpBits,0);
	bits_Bits.set(cmpBits,1);
	var this1 = [0];
	var this2 = this1;
	var resBits = this2;
	this.families[0] = new ecs_Family(0,cmpBits,resBits,_size);
	var this1 = [0];
	var this2 = this1;
	var _g = this2.length;
	while(_g < 1) {
		var i = _g++;
		this2[i] = 0;
	}
	var cmpBits = this2;
	bits_Bits.set(cmpBits,2);
	bits_Bits.set(cmpBits,3);
	var this1 = [0];
	var this2 = this1;
	var resBits = this2;
	this.families[1] = new ecs_Family(1,cmpBits,resBits,_size);
	this.components = _components;
	this.resources = _resources;
	this.number = this.families.length;
};
$hxClasses["ecs.core.FamilyManager"] = ecs_core_FamilyManager;
ecs_core_FamilyManager.__name__ = "ecs.core.FamilyManager";
ecs_core_FamilyManager.prototype = {
	number: null
	,components: null
	,resources: null
	,families: null
	,get: function(_index) {
		return this.families[_index];
	}
	,tryActivate: function(_id) {
		if(!this.families[_id].isActive() && bits_Bits.areSet(this.resources.flags,this.families[_id].resourcesMask)) {
			this.families[_id].activate();
		}
	}
	,tryDeactivate: function(_id,resourceID) {
		if(!bits_Bits.isSet(this.resources.flags,resourceID)) {
			return;
		}
		if(!this.families[_id].isActive()) {
			return;
		}
		if(bits_Bits.isSet(this.families[_id].resourcesMask,resourceID)) {
			this.families[_id].deactivate();
		}
	}
	,whenEntityDestroyed: function(_entity) {
		var compFlags = this.components.flags[ecs_Entity.id(_entity)];
		var _g = 0;
		var _g1 = this.families;
		while(_g < _g1.length) {
			var family = _g1[_g];
			++_g;
			if(!bits_Bits.areSet(compFlags,family.componentsMask)) {
				family.remove(_entity);
			}
		}
	}
	,__class__: ecs_core_FamilyManager
};
var ecs_core_ResourceManager = function() {
	var this1 = [0];
	var this2 = this1;
	this.flags = this2;
	var this1 = new Array(0);
	this.resources = this1;
};
$hxClasses["ecs.core.ResourceManager"] = ecs_core_ResourceManager;
ecs_core_ResourceManager.__name__ = "ecs.core.ResourceManager";
ecs_core_ResourceManager.prototype = {
	flags: null
	,resources: null
	,get: function(_id) {
		return this.resources[_id];
	}
	,insert: function(_id,_resource) {
		this.resources[_id] = _resource;
		bits_Bits.set(this.flags,_id);
	}
	,remove: function(_id) {
		bits_Bits.unset(this.flags,_id);
		this.resources[_id] = null;
	}
	,__class__: ecs_core_ResourceManager
};
var ecs_core_SystemManager = function() {
	this.active = [];
};
$hxClasses["ecs.core.SystemManager"] = ecs_core_SystemManager;
ecs_core_SystemManager.__name__ = "ecs.core.SystemManager";
ecs_core_SystemManager.prototype = {
	active: null
	,add: function(_system) {
		this.active.push(_system);
		_system.onAdded();
	}
	,remove: function(_system) {
		_system.onRemoved();
		HxOverrides.remove(this.active,_system);
	}
	,update: function(_dt) {
		var _g = 0;
		var _g1 = this.active;
		while(_g < _g1.length) {
			var system = _g1[_g];
			++_g;
			system.update(_dt);
		}
	}
	,__class__: ecs_core_SystemManager
};
var ecs_ds_Result = $hxEnums["ecs.ds.Result"] = { __ename__:"ecs.ds.Result",__constructs__:null
	,Ok: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"ecs.ds.Result",toString:$estr}; },$_._hx_name="Ok",$_.__params__ = ["data"],$_)
	,Error: ($_=function(error) { return {_hx_index:1,error:error,__enum__:"ecs.ds.Result",toString:$estr}; },$_._hx_name="Error",$_.__params__ = ["error"],$_)
};
ecs_ds_Result.__constructs__ = [ecs_ds_Result.Ok,ecs_ds_Result.Error];
ecs_ds_Result.__empty_constructs__ = [];
var ecs_ds_Set = function() {
	this.data = [];
};
$hxClasses["ecs.ds.Set"] = ecs_ds_Set;
ecs_ds_Set.__name__ = "ecs.ds.Set";
ecs_ds_Set.prototype = {
	data: null
	,add: function(_value) {
		if(!Lambda.has(this.data,_value)) {
			this.data.push(_value);
		}
	}
	,iterator: function() {
		return new haxe_iterators_ArrayIterator(this.data);
	}
	,__class__: ecs_ds_Set
};
var ecs_ds_Signal = function() {
	this.subscribers = [];
};
$hxClasses["ecs.ds.Signal"] = ecs_ds_Signal;
ecs_ds_Signal.__name__ = "ecs.ds.Signal";
ecs_ds_Signal.prototype = {
	subscribers: null
	,subscribe: function(_func) {
		if(this.subscribers.indexOf(_func) == -1) {
			this.subscribers.push(_func);
		}
	}
	,unsubscribe: function(_func) {
		HxOverrides.remove(this.subscribers,_func);
	}
	,notify: function(_data) {
		var _g = 0;
		var _g1 = this.subscribers;
		while(_g < _g1.length) {
			var func = _g1[_g];
			++_g;
			func(_data);
		}
	}
	,__class__: ecs_ds_Signal
};
var ecs_ds_Signal_$ecs_$Entity = function() {
	this.subscribers = [];
};
$hxClasses["ecs.ds.Signal_ecs_Entity"] = ecs_ds_Signal_$ecs_$Entity;
ecs_ds_Signal_$ecs_$Entity.__name__ = "ecs.ds.Signal_ecs_Entity";
ecs_ds_Signal_$ecs_$Entity.prototype = {
	subscribers: null
	,subscribe: function(_func) {
		if(this.subscribers.indexOf(_func) == -1) {
			this.subscribers.push(_func);
		}
	}
	,unsubscribe: function(_func) {
		HxOverrides.remove(this.subscribers,_func);
	}
	,notify: function(_data) {
		var _g = 0;
		var _g1 = this.subscribers;
		while(_g < _g1.length) {
			var func = _g1[_g];
			++_g;
			func(_data);
		}
	}
	,__class__: ecs_ds_Signal_$ecs_$Entity
};
var ecs_ds_SparseSet = function(_size) {
	var this1 = new Array(_size);
	this.sparse = this1;
	var this1 = new Array(_size);
	this.dense = this1;
	this.number = 0;
	var _g = 0;
	var _g1 = this.sparse.length;
	while(_g < _g1) {
		var i = _g++;
		this.sparse[i] = 0;
	}
	var _g = 0;
	var _g1 = this.dense.length;
	while(_g < _g1) {
		var i = _g++;
		this.dense[i] = ecs_Entity.none;
	}
};
$hxClasses["ecs.ds.SparseSet"] = ecs_ds_SparseSet;
ecs_ds_SparseSet.__name__ = "ecs.ds.SparseSet";
ecs_ds_SparseSet.prototype = {
	sparse: null
	,dense: null
	,number: null
	,has: function(_entity) {
		if(this.sparse[ecs_Entity.id(_entity)] < this.number) {
			return this.dense[this.sparse[ecs_Entity.id(_entity)]] == _entity;
		} else {
			return false;
		}
	}
	,insert: function(_entity) {
		this.dense[this.number] = _entity;
		this.sparse[ecs_Entity.id(_entity)] = this.number;
		this.number++;
	}
	,remove: function(_entity) {
		var temp = this.dense[this.number - 1];
		this.dense[this.sparse[ecs_Entity.id(_entity)]] = temp;
		this.sparse[ecs_Entity.id(temp)] = this.sparse[ecs_Entity.id(_entity)];
		this.number--;
	}
	,getDense: function(_idx) {
		return this.dense[_idx];
	}
	,getSparse: function(_entity) {
		return this.sparse[ecs_Entity.id(_entity)];
	}
	,size: function() {
		return this.number;
	}
	,__class__: ecs_ds_SparseSet
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,keys: null
	,iterator: null
	,keyValueIterator: null
	,copy: null
	,toString: null
	,clear: null
	,__class__: haxe_IMap
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.createCopy = function(h) {
	var copy = new haxe_ds_StringMap();
	for (var key in h) copy.h[key] = h[key];
	return copy;
};
haxe_ds_StringMap.stringify = function(h) {
	var s = "{";
	var first = true;
	for (var key in h) {
		if (first) first = false; else s += ',';
		s += key + ' => ' + Std.string(h[key]);
	}
	return s + "}";
};
haxe_ds_StringMap.prototype = {
	h: null
	,exists: function(key) {
		return Object.prototype.hasOwnProperty.call(this.h,key);
	}
	,get: function(key) {
		return this.h[key];
	}
	,set: function(key,value) {
		this.h[key] = value;
	}
	,remove: function(key) {
		if(Object.prototype.hasOwnProperty.call(this.h,key)) {
			delete(this.h[key]);
			return true;
		} else {
			return false;
		}
	}
	,keys: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.h);
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapValueIterator(this.h);
	}
	,keyValueIterator: function() {
		return new haxe_ds__$StringMap_StringMapKeyValueIterator(this.h);
	}
	,copy: function() {
		return haxe_ds_StringMap.createCopy(this.h);
	}
	,clear: function() {
		this.h = Object.create(null);
	}
	,toString: function() {
		return haxe_ds_StringMap.stringify(this.h);
	}
	,__class__: haxe_ds_StringMap
};
function ecs_macros_ComponentCache_getComponentCount() {
	return ecs_macros_ComponentCache_componentIncrementer;
}
function ecs_macros_ComponentCache_getComponentMap() {
	return ecs_macros_ComponentCache_components;
}
function ecs_macros_ComponentCache_registerComponent(_hash,_type) {
	if(Object.prototype.hasOwnProperty.call(ecs_macros_ComponentCache_components.h,_hash)) {
		return ecs_macros_ComponentCache_components.h[_hash].id;
	} else {
		var id = ecs_macros_ComponentCache_componentIncrementer++;
		ecs_macros_ComponentCache_components.h[_hash] = { id : id, type : _type};
		return id;
	}
}
function ecs_macros_ComponentCache_getComponentID(_type) {
	if(Object.prototype.hasOwnProperty.call(ecs_macros_ComponentCache_components.h,_type)) {
		return haxe_ds_Option.Some(ecs_macros_ComponentCache_components.h[_type].id);
	} else {
		return haxe_ds_Option.None;
	}
}
function ecs_macros_FamilyCache_getFamilyCount() {
	return ecs_macros_FamilyCache_familyIncrementer;
}
function ecs_macros_FamilyCache_getFamilies() {
	return ecs_macros_FamilyCache_familyDefinitions;
}
function ecs_macros_FamilyCache_getFamilyIDsWithResource(_id) {
	var filtered = [];
	var _g_current = 0;
	var _g_array = ecs_macros_FamilyCache_familyDefinitions;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		if(Lambda.exists(_g1_value.resources,function(f) {
			return f.uID == _id;
		})) {
			filtered.push(_g1_key);
		}
	}
	return filtered;
}
function ecs_macros_FamilyCache_getFamilyIDsWithComponent(_id) {
	var filtered = [];
	var _g_current = 0;
	var _g_array = ecs_macros_FamilyCache_familyDefinitions;
	while(_g_current < _g_array.length) {
		var _g1_value = _g_array[_g_current];
		var _g1_key = _g_current++;
		if(Lambda.exists(_g1_value.components,function(f) {
			return f.uID == _id;
		})) {
			filtered.push(_g1_key);
		}
	}
	return filtered;
}
function ecs_macros_FamilyCache_getFamilyByKey(_key) {
	if(Object.prototype.hasOwnProperty.call(ecs_macros_FamilyCache_keyedFamilies.h,_key)) {
		return haxe_ds_Option.Some(ecs_macros_FamilyCache_keyedFamilies.h[_key]);
	} else {
		return haxe_ds_Option.None;
	}
}
function ecs_macros_FamilyCache_registerFamily(_key,_family) {
	var familyHash = ecs_macros_FamilyCache_hash(_family);
	ecs_macros_FamilyCache_keyedFamilies.h[_key] = _family;
	if(Object.prototype.hasOwnProperty.call(ecs_macros_FamilyCache_familyIDs.h,familyHash)) {
		return ecs_macros_FamilyCache_familyIDs.h[familyHash];
	} else {
		var id = ecs_macros_FamilyCache_familyIncrementer++;
		ecs_macros_FamilyCache_familyIDs.h[familyHash] = id;
		ecs_macros_FamilyCache_familyDefinitions.push(_family);
		return id;
	}
}
function ecs_macros_FamilyCache_hash(_family) {
	var buffer_b = "";
	buffer_b = "c:";
	var _g = 0;
	var _g1 = _family.components;
	while(_g < _g1.length) {
		var comp = _g1[_g];
		++_g;
		buffer_b += Std.string(comp.type);
	}
	buffer_b += "r:";
	var _g = 0;
	var _g1 = _family.resources;
	while(_g < _g1.length) {
		var res = _g1[_g];
		++_g;
		buffer_b += Std.string(res.type);
	}
	return buffer_b;
}
function ecs_macros_ResourceCache_getResourceCount() {
	return ecs_macros_ResourceCache_resourceIncrementer;
}
function ecs_macros_ResourceCache_getResourceMap() {
	return ecs_macros_ResourceCache_resources;
}
function ecs_macros_ResourceCache_getResourceID(_hash) {
	if(Object.prototype.hasOwnProperty.call(ecs_macros_ResourceCache_resources.h,_hash)) {
		return haxe_ds_Option.Some(ecs_macros_ResourceCache_resources.h[_hash]);
	} else {
		return haxe_ds_Option.None;
	}
}
function ecs_macros_ResourceCache_registerResource(_hash) {
	if(!Object.prototype.hasOwnProperty.call(ecs_macros_ResourceCache_resources.h,_hash)) {
		var id = ecs_macros_ResourceCache_resourceIncrementer++;
		ecs_macros_ResourceCache_resources.h[_hash] = id;
		return id;
	} else {
		return ecs_macros_ResourceCache_resources.h[_hash];
	}
}
function ecs_macros_SystemMacros_getOrCreateOverrideFunction(_name,_fields,_pos) {
	var _g = 0;
	while(_g < _fields.length) {
		var field = _fields[_g];
		++_g;
		if(field.name == _name) {
			return field;
		}
	}
	_fields.push({ name : _name, access : [haxe_macro_Access.APublic,haxe_macro_Access.AOverride], pos : _pos, kind : haxe_macro_FieldType.FFun({ args : [], expr : { expr : haxe_macro_ExprDef.EBlock([]), pos : { file : "c:\\Users\\Jazz9\\Documents\\Projects\\haxe\\node\\Haxebot\\.haxelib\\aidan-ecs/git/src/ecs/macros/SystemMacros.hx", min : 7200, max : 7202}}})});
	return _fields[_fields.length - 1];
}
function ecs_macros_SystemMacros_insertExprIntoFunction(_pos,_field,_expr) {
	var _g = _field.kind;
	if(_g._hx_index == 1) {
		var _g1 = _g.f.expr.expr;
		if(_g1._hx_index == 12) {
			_g1.exprs.splice(_pos,0,_expr);
		}
	}
}
function ecs_macros_SystemMacros_hasMeta(_field,_meta) {
	if(_field.meta == null || _field.meta.length == 0) {
		return false;
	}
	var _g = 0;
	var _g1 = _field.meta;
	while(_g < _g1.length) {
		var meta = _g1[_g];
		++_g;
		if(meta.name == _meta) {
			return true;
		}
	}
	return false;
}
function ecs_macros_SystemMacros_extractFastFamily(_field) {
	var _g = _field.kind;
	if(_g._hx_index == 0) {
		var _g1 = _g.t;
		if(_g1 == null) {
			return ecs_ds_Result.Error({ message : "Unexpected field kind " + Std.string(_g) + ", expected FVar", pos : _field.pos});
		} else if(_g1._hx_index == 2) {
			return ecs_macros_SystemMacros_extractFamilyComponentsFromObject(_g1.fields);
		} else {
			return ecs_ds_Result.Error({ message : "Unexpected field kind " + Std.string(_g) + ", expected FVar", pos : _field.pos});
		}
	} else {
		return ecs_ds_Result.Error({ message : "Unexpected field kind " + Std.string(_g) + ", expected FVar", pos : _field.pos});
	}
}
function ecs_macros_SystemMacros_extractFullFamily(_field) {
	var _g = _field.kind;
	if(_g._hx_index == 0) {
		var _g1 = _g.t;
		if(_g1 == null) {
			return ecs_ds_Result.Error({ message : "Unexpected field kind " + Std.string(_g) + ", expected FVar", pos : _field.pos});
		} else if(_g1._hx_index == 2) {
			var _g2 = _g1.fields;
			var value = Lambda.find(_g2,function(f) {
				return f.name == "requires";
			});
			var value1;
			if(value == null) {
				value1 = null;
			} else {
				var _g1 = value.kind;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.t;
					value1 = _g3 == null ? ecs_ds_Result.Error({ message : "Unexpected object field expression " + Std.string(_g1), pos : value.pos}) : _g3._hx_index == 2 ? ecs_macros_SystemMacros_extractFamilyComponentsFromObject(_g3.fields) : ecs_ds_Result.Error({ message : "Unexpected object field expression " + Std.string(_g1), pos : value.pos});
				} else {
					value1 = ecs_ds_Result.Error({ message : "Unexpected object field expression " + Std.string(_g1), pos : value.pos});
				}
			}
			var requires = value1 == null ? ecs_ds_Result.Ok([]) : value1;
			var value = Lambda.find(_g2,function(f) {
				return f.name == "resources";
			});
			var value1;
			if(value == null) {
				value1 = null;
			} else {
				var _g1 = value.kind;
				if(_g1._hx_index == 0) {
					var _g2 = _g1.t;
					value1 = _g2 == null ? ecs_ds_Result.Error({ message : "Unexpected object field expression " + Std.string(_g1), pos : value.pos}) : _g2._hx_index == 2 ? ecs_macros_SystemMacros_extractFamilyComponentsFromObject(_g2.fields) : ecs_ds_Result.Error({ message : "Unexpected object field expression " + Std.string(_g1), pos : value.pos});
				} else {
					value1 = ecs_ds_Result.Error({ message : "Unexpected object field expression " + Std.string(_g1), pos : value.pos});
				}
			}
			var resources = value1 == null ? ecs_ds_Result.Ok([]) : value1;
			return ecs_ds_Result.Ok({ name : _field.name, components : requires, resources : resources});
		} else {
			return ecs_ds_Result.Error({ message : "Unexpected field kind " + Std.string(_g) + ", expected FVar", pos : _field.pos});
		}
	} else {
		return ecs_ds_Result.Error({ message : "Unexpected field kind " + Std.string(_g) + ", expected FVar", pos : _field.pos});
	}
}
function ecs_macros_SystemMacros_extractFamilyComponentsFromObject(_fields) {
	var extracted = [];
	var _g = 0;
	var _g1 = _fields;
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		var _g2 = field.kind;
		if(_g2._hx_index == 0) {
			extracted.push({ name : field.name, type : _g2.t});
		} else {
			return ecs_ds_Result.Error({ message : "Unexpected expression " + Std.string(_g2) + ", expected FVar(_, EConst(CIdent(_)))", pos : field.pos});
		}
	}
	extracted.sort(ecs_macros_SystemMacros_sort);
	return ecs_ds_Result.Ok(extracted);
}
function ecs_macros_SystemMacros_getUniqueComponents(_families) {
	var components = [];
	var _g = 0;
	var _g1 = _families;
	while(_g < _g1.length) {
		var family = _g1[_g];
		++_g;
		var _g2 = 0;
		var _g3 = family.components;
		while(_g2 < _g3.length) {
			var component = [_g3[_g2]];
			++_g2;
			if(!Lambda.exists(components,(function(component) {
				return function(f) {
					return f.uID == component[0].uID;
				};
			})(component))) {
				components.push(component[0]);
			}
		}
	}
	return components;
}
function ecs_macros_SystemMacros_sort(o1,o2) {
	var name1 = o1.type;
	var name2 = o2.type;
	if(name1 < name2) {
		return -1;
	}
	if(name1 > name2) {
		return 1;
	}
	return 0;
}
var ecs_macros_TableType = {};
ecs_macros_TableType._new = function(value) {
	return value;
};
ecs_macros_TableType.fromClass = function(input) {
	return ecs_macros_TableType._new(input.__name__);
};
function ecs_macros_UniverseMacros_extractFunctionBlock(_expr) {
	var _g = _expr.expr;
	if(_g._hx_index == 28) {
		var _g1 = _g.e.expr;
		if(_g1._hx_index == 18) {
			var _g = _g1.e;
			if(_g == null) {
				return haxe_ds_Option.None;
			} else {
				var _g1 = _g.expr;
				if(_g1._hx_index == 12) {
					return haxe_ds_Option.Some(_g1.exprs);
				} else {
					return haxe_ds_Option.None;
				}
			}
		} else {
			return haxe_ds_Option.None;
		}
	} else {
		return haxe_ds_Option.None;
	}
}
function ecs_macros_UniverseMacros_isLocalIdent(_target,_classType,_vars) {
	var value = haxe_macro_TypeTools.findField(_classType,_target);
	var defaultValue = haxe_macro_TypeTools.findField(_classType,_target,true);
	var found = value == null ? defaultValue : value;
	if(found != null) {
		return haxe_ds_Option.Some(found.type);
	}
	if(Object.prototype.hasOwnProperty.call(_vars.h,_target)) {
		return haxe_ds_Option.Some(_vars.h[_target].t);
	} else {
		return haxe_ds_Option.None;
	}
}
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__:"haxe.StackItem",__constructs__:null
	,CFunction: {_hx_name:"CFunction",_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="Module",$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="FilePos",$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="Method",$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="LocalFunction",$_.__params__ = ["v"],$_)
};
haxe_StackItem.__constructs__ = [haxe_StackItem.CFunction,haxe_StackItem.Module,haxe_StackItem.FilePos,haxe_StackItem.Method,haxe_StackItem.LocalFunction];
haxe_StackItem.__empty_constructs__ = [haxe_StackItem.CFunction];
var haxe_CallStack = {};
haxe_CallStack.__properties__ = {get_length:"get_length"};
haxe_CallStack.get_length = function(this1) {
	return this1.length;
};
haxe_CallStack.callStack = function() {
	return haxe_NativeStackTrace.toHaxe(haxe_NativeStackTrace.callStack());
};
haxe_CallStack.exceptionStack = function(fullStack) {
	if(fullStack == null) {
		fullStack = false;
	}
	var eStack = haxe_NativeStackTrace.toHaxe(haxe_NativeStackTrace.exceptionStack());
	return fullStack ? eStack : haxe_CallStack.subtract(eStack,haxe_CallStack.callStack());
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	var _g1 = stack;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.subtract = function(this1,stack) {
	var startIndex = -1;
	var i = -1;
	while(++i < this1.length) {
		var _g = 0;
		var _g1 = stack.length;
		while(_g < _g1) {
			var j = _g++;
			if(haxe_CallStack.equalItems(this1[i],stack[j])) {
				if(startIndex < 0) {
					startIndex = i;
				}
				++i;
				if(i >= this1.length) {
					break;
				}
			} else {
				startIndex = -1;
			}
		}
		if(startIndex >= 0) {
			break;
		}
	}
	if(startIndex >= 0) {
		return this1.slice(0,startIndex);
	} else {
		return this1;
	}
};
haxe_CallStack.copy = function(this1) {
	return this1.slice();
};
haxe_CallStack.get = function(this1,index) {
	return this1[index];
};
haxe_CallStack.asArray = function(this1) {
	return this1;
};
haxe_CallStack.equalItems = function(item1,item2) {
	if(item1 == null) {
		if(item2 == null) {
			return true;
		} else {
			return false;
		}
	} else {
		switch(item1._hx_index) {
		case 0:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 0) {
				return true;
			} else {
				return false;
			}
			break;
		case 1:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 1) {
				return item1.m == item2.m;
			} else {
				return false;
			}
			break;
		case 2:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 2) {
				if(item1.file == item2.file && item1.line == item2.line && item1.column == item2.column) {
					return haxe_CallStack.equalItems(item1.s,item2.s);
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 3:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 3) {
				if(item1.classname == item2.classname) {
					return item1.method == item2.method;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 4:
			if(item2 == null) {
				return false;
			} else if(item2._hx_index == 4) {
				return item1.v == item2.v;
			} else {
				return false;
			}
			break;
		}
	}
};
haxe_CallStack.exceptionToString = function(e) {
	if(e.get_previous() == null) {
		var tmp = "Exception: " + e.toString();
		var tmp1 = e.get_stack();
		return tmp + (tmp1 == null ? "null" : haxe_CallStack.toString(tmp1));
	}
	var result = "";
	var e1 = e;
	var prev = null;
	while(e1 != null) {
		if(prev == null) {
			var result1 = "Exception: " + e1.get_message();
			var tmp = e1.get_stack();
			result = result1 + (tmp == null ? "null" : haxe_CallStack.toString(tmp)) + result;
		} else {
			var prevStack = haxe_CallStack.subtract(e1.get_stack(),prev.get_stack());
			result = "Exception: " + e1.get_message() + (prevStack == null ? "null" : haxe_CallStack.toString(prevStack)) + "\n\nNext " + result;
		}
		prev = e1;
		e1 = e1.get_previous();
	}
	return result;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s._hx_index) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var _g = s.m;
		b.b = (b.b += "module ") + (_g == null ? "null" : "" + _g);
		break;
	case 2:
		var _g = s.s;
		var _g1 = s.file;
		var _g2 = s.line;
		var _g3 = s.column;
		if(_g != null) {
			haxe_CallStack.itemToString(b,_g);
			b.b += " (";
		}
		b.b = (b.b += _g1 == null ? "null" : "" + _g1) + " line ";
		b.b += _g2 == null ? "null" : "" + _g2;
		if(_g3 != null) {
			b.b = (b.b += " column ") + (_g3 == null ? "null" : "" + _g3);
		}
		if(_g != null) {
			b.b += ")";
		}
		break;
	case 3:
		var _g = s.classname;
		var _g1 = s.method;
		b.b = (b.b += Std.string(_g == null ? "<unknown>" : _g)) + ".";
		b.b += _g1 == null ? "null" : "" + _g1;
		break;
	case 4:
		var _g = s.v;
		b.b = (b.b += "local function #") + (_g == null ? "null" : "" + _g);
		break;
	}
};
var haxe_DynamicAccess = {};
haxe_DynamicAccess._new = function() {
	var this1 = { };
	return this1;
};
haxe_DynamicAccess.get = function(this1,key) {
	return this1[key];
};
haxe_DynamicAccess.set = function(this1,key,value) {
	return this1[key] = value;
};
haxe_DynamicAccess.exists = function(this1,key) {
	return Object.prototype.hasOwnProperty.call(this1,key);
};
haxe_DynamicAccess.remove = function(this1,key) {
	return Reflect.deleteField(this1,key);
};
haxe_DynamicAccess.keys = function(this1) {
	return Reflect.fields(this1);
};
haxe_DynamicAccess.copy = function(this1) {
	return Reflect.copy(this1);
};
haxe_DynamicAccess.iterator = function(this1) {
	return new haxe_iterators_DynamicAccessIterator(this1);
};
haxe_DynamicAccess.keyValueIterator = function(this1) {
	return new haxe_iterators_DynamicAccessKeyValueIterator(this1);
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
	this.__skipStack = 0;
	var old = Error.prepareStackTrace;
	Error.prepareStackTrace = function(e) { return e.stack; }
	if(((native) instanceof Error)) {
		this.stack = native.stack;
	} else {
		var e = null;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,haxe_Exception);
			e = this;
		} else {
			e = new Error();
			if(typeof(e.stack) == "undefined") {
				try { throw e; } catch(_) {}
				this.__skipStack++;
			}
		}
		this.stack = e.stack;
	}
	Error.prepareStackTrace = old;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		e.__skipStack++;
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	__skipStack: null
	,__nativeException: null
	,__previousException: null
	,unwrap: function() {
		return this.__nativeException;
	}
	,toString: function() {
		return this.get_message();
	}
	,details: function() {
		if(this.get_previous() == null) {
			var tmp = "Exception: " + this.toString();
			var tmp1 = this.get_stack();
			return tmp + (tmp1 == null ? "null" : haxe_CallStack.toString(tmp1));
		} else {
			var result = "";
			var e = this;
			var prev = null;
			while(e != null) {
				if(prev == null) {
					var result1 = "Exception: " + e.get_message();
					var tmp = e.get_stack();
					result = result1 + (tmp == null ? "null" : haxe_CallStack.toString(tmp)) + result;
				} else {
					var prevStack = haxe_CallStack.subtract(e.get_stack(),prev.get_stack());
					result = "Exception: " + e.get_message() + (prevStack == null ? "null" : haxe_CallStack.toString(prevStack)) + "\n\nNext " + result;
				}
				prev = e;
				e = e.get_previous();
			}
			return result;
		}
	}
	,__shiftStack: function() {
		this.__skipStack++;
	}
	,get_message: function() {
		return this.message;
	}
	,get_previous: function() {
		return this.__previousException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,get_stack: function() {
		var _g = this.__exceptionStack;
		if(_g == null) {
			var value = haxe_NativeStackTrace.toHaxe(haxe_NativeStackTrace.normalize(this.stack),this.__skipStack);
			this.setProperty("__exceptionStack",value);
			return value;
		} else {
			return _g;
		}
	}
	,setProperty: function(name,value) {
		try {
			Object.defineProperty(this,name,{ value : value});
		} catch( _g ) {
			this[name] = value;
		}
	}
	,get___exceptionStack: function() {
		return this.__exceptionStack;
	}
	,set___exceptionStack: function(value) {
		this.setProperty("__exceptionStack",value);
		return value;
	}
	,get___skipStack: function() {
		return this.__skipStack;
	}
	,set___skipStack: function(value) {
		this.setProperty("__skipStack",value);
		return value;
	}
	,get___nativeException: function() {
		return this.__nativeException;
	}
	,set___nativeException: function(value) {
		this.setProperty("__nativeException",value);
		return value;
	}
	,get___previousException: function() {
		return this.__previousException;
	}
	,set___previousException: function(value) {
		this.setProperty("__previousException",value);
		return value;
	}
	,__class__: haxe_Exception
	,__properties__: {set___exceptionStack:"set___exceptionStack",get___exceptionStack:"get___exceptionStack",get_native:"get_native",get_previous:"get_previous",get_stack:"get_stack",get_message:"get_message"}
});
var haxe_Int32 = {};
haxe_Int32.negate = function(this1) {
	return ~this1 + 1 | 0;
};
haxe_Int32.preIncrement = function(this1) {
	this1 = ++this1 | 0;
	return this1;
};
haxe_Int32.postIncrement = function(this1) {
	var ret = this1++;
	this1 |= 0;
	return ret;
};
haxe_Int32.preDecrement = function(this1) {
	this1 = --this1 | 0;
	return this1;
};
haxe_Int32.postDecrement = function(this1) {
	var ret = this1--;
	this1 |= 0;
	return ret;
};
haxe_Int32.add = function(a,b) {
	return a + b | 0;
};
haxe_Int32.addInt = function(a,b) {
	return a + b | 0;
};
haxe_Int32.sub = function(a,b) {
	return a - b | 0;
};
haxe_Int32.subInt = function(a,b) {
	return a - b | 0;
};
haxe_Int32.intSub = function(a,b) {
	return a - b | 0;
};
haxe_Int32.mul = function(a,b) {
	return haxe_Int32._mul(a,b);
};
haxe_Int32.mulInt = function(a,b) {
	return haxe_Int32._mul(a,b);
};
haxe_Int32.toFloat = function(this1) {
	return this1;
};
haxe_Int32.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
haxe_Int32.clamp = function(x) {
	return x | 0;
};
var haxe_Int64 = {};
haxe_Int64.__properties__ = {get_low:"get_low",get_high:"get_high"};
haxe_Int64._new = function(x) {
	return x;
};
haxe_Int64.copy = function(this1) {
	return new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
};
haxe_Int64.make = function(high,low) {
	return new haxe__$Int64__$_$_$Int64(high,low);
};
haxe_Int64.ofInt = function(x) {
	return new haxe__$Int64__$_$_$Int64(x >> 31,x);
};
haxe_Int64.toInt = function(x) {
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	return x.low;
};
haxe_Int64.is = function(val) {
	return ((val) instanceof haxe__$Int64__$_$_$Int64);
};
haxe_Int64.isInt64 = function(val) {
	return ((val) instanceof haxe__$Int64__$_$_$Int64);
};
haxe_Int64.getHigh = function(x) {
	return x.high;
};
haxe_Int64.getLow = function(x) {
	return x.low;
};
haxe_Int64.isNeg = function(x) {
	return x.high < 0;
};
haxe_Int64.isZero = function(x) {
	var b_high = 0;
	var b_low = 0;
	if(x.high == b_high) {
		return x.low == b_low;
	} else {
		return false;
	}
};
haxe_Int64.compare = function(a,b) {
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	if(a.high < 0) {
		if(b.high < 0) {
			return v;
		} else {
			return -1;
		}
	} else if(b.high >= 0) {
		return v;
	} else {
		return 1;
	}
};
haxe_Int64.ucompare = function(a,b) {
	var v = haxe_Int32.ucompare(a.high,b.high);
	if(v != 0) {
		return v;
	} else {
		return haxe_Int32.ucompare(a.low,b.low);
	}
};
haxe_Int64.toStr = function(x) {
	return haxe_Int64.toString(x);
};
haxe_Int64.toString = function(this1) {
	var i = this1;
	var b_high = 0;
	var b_low = 0;
	if(i.high == b_high && i.low == b_low) {
		return "0";
	}
	var str = "";
	var neg = false;
	if(i.high < 0) {
		neg = true;
	}
	var ten = new haxe__$Int64__$_$_$Int64(0,10);
	while(true) {
		var b_high = 0;
		var b_low = 0;
		if(!(i.high != b_high || i.low != b_low)) {
			break;
		}
		var r = haxe_Int64.divMod(i,ten);
		if(r.modulus.high < 0) {
			var x = r.modulus;
			var low = ~x.low + 1 | 0;
			str = low + str;
			var x1 = r.quotient;
			var high = ~x1.high;
			var low1 = ~x1.low + 1 | 0;
			if(low1 == 0) {
				++high;
				high = high | 0;
			}
			i = new haxe__$Int64__$_$_$Int64(high,low1);
		} else {
			str = r.modulus.low + str;
			i = r.quotient;
		}
	}
	if(neg) {
		str = "-" + str;
	}
	return str;
};
haxe_Int64.parseString = function(sParam) {
	return haxe_Int64Helper.parseString(sParam);
};
haxe_Int64.fromFloat = function(f) {
	return haxe_Int64Helper.fromFloat(f);
};
haxe_Int64.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		switch(divisor.low) {
		case 0:
			throw haxe_Exception.thrown("divide by zero");
		case 1:
			return { quotient : new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low), modulus : new haxe__$Int64__$_$_$Int64(0,0)};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = ~dividend.low + 1 | 0;
		if(low == 0) {
			++high;
			high = high | 0;
		}
		modulus = new haxe__$Int64__$_$_$Int64(high,low);
	} else {
		modulus = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
	}
	if(divisor.high < 0) {
		var high = ~divisor.high;
		var low = ~divisor.low + 1 | 0;
		if(low == 0) {
			++high;
			high = high | 0;
		}
		divisor = new haxe__$Int64__$_$_$Int64(high,low);
	}
	var quotient = new haxe__$Int64__$_$_$Int64(0,0);
	var mask = new haxe__$Int64__$_$_$Int64(0,1);
	while(!(divisor.high < 0)) {
		var v = haxe_Int32.ucompare(divisor.high,modulus.high);
		var cmp = v != 0 ? v : haxe_Int32.ucompare(divisor.low,modulus.low);
		divisor = new haxe__$Int64__$_$_$Int64(divisor.high << 1 | divisor.low >>> 31,divisor.low << 1);
		mask = new haxe__$Int64__$_$_$Int64(mask.high << 1 | mask.low >>> 31,mask.low << 1);
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var b_high = 0;
		var b_low = 0;
		if(!(mask.high != b_high || mask.low != b_low)) {
			break;
		}
		var v = haxe_Int32.ucompare(modulus.high,divisor.high);
		if((v != 0 ? v : haxe_Int32.ucompare(modulus.low,divisor.low)) >= 0) {
			quotient = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			var high = modulus.high - divisor.high | 0;
			var low = modulus.low - divisor.low | 0;
			if(haxe_Int32.ucompare(modulus.low,divisor.low) < 0) {
				--high;
				high = high | 0;
			}
			modulus = new haxe__$Int64__$_$_$Int64(high,low);
		}
		mask = new haxe__$Int64__$_$_$Int64(mask.high >>> 1,mask.high << 31 | mask.low >>> 1);
		divisor = new haxe__$Int64__$_$_$Int64(divisor.high >>> 1,divisor.high << 31 | divisor.low >>> 1);
	}
	if(divSign) {
		var high = ~quotient.high;
		var low = ~quotient.low + 1 | 0;
		if(low == 0) {
			++high;
			high = high | 0;
		}
		quotient = new haxe__$Int64__$_$_$Int64(high,low);
	}
	if(dividend.high < 0) {
		var high = ~modulus.high;
		var low = ~modulus.low + 1 | 0;
		if(low == 0) {
			++high;
			high = high | 0;
		}
		modulus = new haxe__$Int64__$_$_$Int64(high,low);
	}
	return { quotient : quotient, modulus : modulus};
};
haxe_Int64.neg = function(x) {
	var high = ~x.high;
	var low = ~x.low + 1 | 0;
	if(low == 0) {
		++high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
haxe_Int64.preIncrement = function(this1) {
	var x = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = x;
	x.low++;
	x.low = x.low | 0;
	if(x.low == 0) {
		x.high++;
		x.high = x.high | 0;
	}
	return x;
};
haxe_Int64.postIncrement = function(this1) {
	var ret = this1;
	var x = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = x;
	x.low++;
	x.low = x.low | 0;
	if(x.low == 0) {
		x.high++;
		x.high = x.high | 0;
	}
	return ret;
};
haxe_Int64.preDecrement = function(this1) {
	var x = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = x;
	if(x.low == 0) {
		x.high--;
		x.high = x.high | 0;
	}
	x.low--;
	x.low = x.low | 0;
	return x;
};
haxe_Int64.postDecrement = function(this1) {
	var ret = this1;
	var x = new haxe__$Int64__$_$_$Int64(this1.high,this1.low);
	this1 = x;
	if(x.low == 0) {
		x.high--;
		x.high = x.high | 0;
	}
	x.low--;
	x.low = x.low | 0;
	return ret;
};
haxe_Int64.add = function(a,b) {
	var high = a.high + b.high | 0;
	var low = a.low + b.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		++high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
haxe_Int64.addInt = function(a,b) {
	var b_high = b >> 31;
	var b_low = b;
	var high = a.high + b_high | 0;
	var low = a.low + b_low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		++high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
haxe_Int64.sub = function(a,b) {
	var high = a.high - b.high | 0;
	var low = a.low - b.low | 0;
	if(haxe_Int32.ucompare(a.low,b.low) < 0) {
		--high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
haxe_Int64.subInt = function(a,b) {
	var b_high = b >> 31;
	var b_low = b;
	var high = a.high - b_high | 0;
	var low = a.low - b_low | 0;
	if(haxe_Int32.ucompare(a.low,b_low) < 0) {
		--high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
haxe_Int64.intSub = function(a,b) {
	var a_high = a >> 31;
	var a_low = a;
	var high = a_high - b.high | 0;
	var low = a_low - b.low | 0;
	if(haxe_Int32.ucompare(a_low,b.low) < 0) {
		--high;
		high = high | 0;
	}
	return new haxe__$Int64__$_$_$Int64(high,low);
};
haxe_Int64.mul = function(a,b) {
	var al = a.low & 65535;
	var ah = a.low >>> 16;
	var bl = b.low & 65535;
	var bh = b.low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = p00 + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		++high;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		++high;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a.low,b.high) + haxe_Int32._mul(a.high,b.low) | 0) | 0;
	return new haxe__$Int64__$_$_$Int64(high,low);
};
haxe_Int64.mulInt = function(a,b) {
	var b_high = b >> 31;
	var b_low = b;
	var al = a.low & 65535;
	var ah = a.low >>> 16;
	var bl = b_low & 65535;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = p00 + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		++high;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		++high;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a.low,b_high) + haxe_Int32._mul(a.high,b_low) | 0) | 0;
	return new haxe__$Int64__$_$_$Int64(high,low);
};
haxe_Int64.div = function(a,b) {
	return haxe_Int64.divMod(a,b).quotient;
};
haxe_Int64.divInt = function(a,b) {
	return haxe_Int64.divMod(a,new haxe__$Int64__$_$_$Int64(b >> 31,b)).quotient;
};
haxe_Int64.intDiv = function(a,b) {
	var x = haxe_Int64.divMod(new haxe__$Int64__$_$_$Int64(a >> 31,a),b).quotient;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var x1 = x.low;
	return new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
};
haxe_Int64.mod = function(a,b) {
	return haxe_Int64.divMod(a,b).modulus;
};
haxe_Int64.modInt = function(a,b) {
	var x = haxe_Int64.divMod(a,new haxe__$Int64__$_$_$Int64(b >> 31,b)).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var x1 = x.low;
	return new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
};
haxe_Int64.intMod = function(a,b) {
	var x = haxe_Int64.divMod(new haxe__$Int64__$_$_$Int64(a >> 31,a),b).modulus;
	if(x.high != x.low >> 31) {
		throw haxe_Exception.thrown("Overflow");
	}
	var x1 = x.low;
	return new haxe__$Int64__$_$_$Int64(x1 >> 31,x1);
};
haxe_Int64.eq = function(a,b) {
	if(a.high == b.high) {
		return a.low == b.low;
	} else {
		return false;
	}
};
haxe_Int64.eqInt = function(a,b) {
	var b_high = b >> 31;
	var b_low = b;
	if(a.high == b_high) {
		return a.low == b_low;
	} else {
		return false;
	}
};
haxe_Int64.neq = function(a,b) {
	if(a.high == b.high) {
		return a.low != b.low;
	} else {
		return true;
	}
};
haxe_Int64.neqInt = function(a,b) {
	var b_high = b >> 31;
	var b_low = b;
	if(a.high == b_high) {
		return a.low != b_low;
	} else {
		return true;
	}
};
haxe_Int64.lt = function(a,b) {
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
haxe_Int64.ltInt = function(a,b) {
	var b_high = b >> 31;
	var b_low = b;
	var v = a.high - b_high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b_low);
	}
	return (a.high < 0 ? b_high < 0 ? v : -1 : b_high >= 0 ? v : 1) < 0;
};
haxe_Int64.intLt = function(a,b) {
	var a_high = a >> 31;
	var a_low = a;
	var v = a_high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a_low,b.low);
	}
	return (a_high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
haxe_Int64.lte = function(a,b) {
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
haxe_Int64.lteInt = function(a,b) {
	var b_high = b >> 31;
	var b_low = b;
	var v = a.high - b_high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b_low);
	}
	return (a.high < 0 ? b_high < 0 ? v : -1 : b_high >= 0 ? v : 1) <= 0;
};
haxe_Int64.intLte = function(a,b) {
	var a_high = a >> 31;
	var a_low = a;
	var v = a_high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a_low,b.low);
	}
	return (a_high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
haxe_Int64.gt = function(a,b) {
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
haxe_Int64.gtInt = function(a,b) {
	var b_high = b >> 31;
	var b_low = b;
	var v = a.high - b_high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b_low);
	}
	return (a.high < 0 ? b_high < 0 ? v : -1 : b_high >= 0 ? v : 1) > 0;
};
haxe_Int64.intGt = function(a,b) {
	var a_high = a >> 31;
	var a_low = a;
	var v = a_high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a_low,b.low);
	}
	return (a_high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
haxe_Int64.gte = function(a,b) {
	var v = a.high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b.low);
	}
	return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
haxe_Int64.gteInt = function(a,b) {
	var b_high = b >> 31;
	var b_low = b;
	var v = a.high - b_high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a.low,b_low);
	}
	return (a.high < 0 ? b_high < 0 ? v : -1 : b_high >= 0 ? v : 1) >= 0;
};
haxe_Int64.intGte = function(a,b) {
	var a_high = a >> 31;
	var a_low = a;
	var v = a_high - b.high | 0;
	if(v == 0) {
		v = haxe_Int32.ucompare(a_low,b.low);
	}
	return (a_high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
haxe_Int64.complement = function(a) {
	return new haxe__$Int64__$_$_$Int64(~a.high,~a.low);
};
haxe_Int64.and = function(a,b) {
	return new haxe__$Int64__$_$_$Int64(a.high & b.high,a.low & b.low);
};
haxe_Int64.or = function(a,b) {
	return new haxe__$Int64__$_$_$Int64(a.high | b.high,a.low | b.low);
};
haxe_Int64.xor = function(a,b) {
	return new haxe__$Int64__$_$_$Int64(a.high ^ b.high,a.low ^ b.low);
};
haxe_Int64.shl = function(a,b) {
	b &= 63;
	if(b == 0) {
		return new haxe__$Int64__$_$_$Int64(a.high,a.low);
	} else if(b < 32) {
		return new haxe__$Int64__$_$_$Int64(a.high << b | a.low >>> 32 - b,a.low << b);
	} else {
		return new haxe__$Int64__$_$_$Int64(a.low << b - 32,0);
	}
};
haxe_Int64.shr = function(a,b) {
	b &= 63;
	if(b == 0) {
		return new haxe__$Int64__$_$_$Int64(a.high,a.low);
	} else if(b < 32) {
		return new haxe__$Int64__$_$_$Int64(a.high >> b,a.high << 32 - b | a.low >>> b);
	} else {
		return new haxe__$Int64__$_$_$Int64(a.high >> 31,a.high >> b - 32);
	}
};
haxe_Int64.ushr = function(a,b) {
	b &= 63;
	if(b == 0) {
		return new haxe__$Int64__$_$_$Int64(a.high,a.low);
	} else if(b < 32) {
		return new haxe__$Int64__$_$_$Int64(a.high >>> b,a.high << 32 - b | a.low >>> b);
	} else {
		return new haxe__$Int64__$_$_$Int64(0,a.high >>> b - 32);
	}
};
haxe_Int64.get_high = function(this1) {
	return this1.high;
};
haxe_Int64.set_high = function(this1,x) {
	return this1.high = x;
};
haxe_Int64.get_low = function(this1) {
	return this1.low;
};
haxe_Int64.set_low = function(this1,x) {
	return this1.low = x;
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = "haxe._Int64.___Int64";
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,toString: function() {
		return haxe_Int64.toString(this);
	}
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Int64Helper = function() { };
$hxClasses["haxe.Int64Helper"] = haxe_Int64Helper;
haxe_Int64Helper.__name__ = "haxe.Int64Helper";
haxe_Int64Helper.parseString = function(sParam) {
	var base_high = 0;
	var base_low = 10;
	var current = new haxe__$Int64__$_$_$Int64(0,0);
	var multiplier = new haxe__$Int64__$_$_$Int64(0,1);
	var sIsNegative = false;
	var s = StringTools.trim(sParam);
	if(s.charAt(0) == "-") {
		sIsNegative = true;
		s = s.substring(1,s.length);
	}
	var len = s.length;
	var _g = 0;
	while(_g < len) {
		var i = _g++;
		var digitInt = HxOverrides.cca(s,len - 1 - i) - 48;
		if(digitInt < 0 || digitInt > 9) {
			throw haxe_Exception.thrown("NumberFormatError");
		}
		if(digitInt != 0) {
			var digit_high = digitInt >> 31;
			var digit_low = digitInt;
			if(sIsNegative) {
				var al = multiplier.low & 65535;
				var ah = multiplier.low >>> 16;
				var bl = digit_low & 65535;
				var bh = digit_low >>> 16;
				var p00 = haxe_Int32._mul(al,bl);
				var p10 = haxe_Int32._mul(ah,bl);
				var p01 = haxe_Int32._mul(al,bh);
				var p11 = haxe_Int32._mul(ah,bh);
				var low = p00;
				var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
				p01 <<= 16;
				low = p00 + p01 | 0;
				if(haxe_Int32.ucompare(low,p01) < 0) {
					++high;
					high = high | 0;
				}
				p10 <<= 16;
				low = low + p10 | 0;
				if(haxe_Int32.ucompare(low,p10) < 0) {
					++high;
					high = high | 0;
				}
				high = high + (haxe_Int32._mul(multiplier.low,digit_high) + haxe_Int32._mul(multiplier.high,digit_low) | 0) | 0;
				var b_high = high;
				var b_low = low;
				var high1 = current.high - b_high | 0;
				var low1 = current.low - b_low | 0;
				if(haxe_Int32.ucompare(current.low,b_low) < 0) {
					--high1;
					high1 = high1 | 0;
				}
				current = new haxe__$Int64__$_$_$Int64(high1,low1);
				if(!(current.high < 0)) {
					throw haxe_Exception.thrown("NumberFormatError: Underflow");
				}
			} else {
				var al1 = multiplier.low & 65535;
				var ah1 = multiplier.low >>> 16;
				var bl1 = digit_low & 65535;
				var bh1 = digit_low >>> 16;
				var p001 = haxe_Int32._mul(al1,bl1);
				var p101 = haxe_Int32._mul(ah1,bl1);
				var p011 = haxe_Int32._mul(al1,bh1);
				var p111 = haxe_Int32._mul(ah1,bh1);
				var low2 = p001;
				var high2 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
				p011 <<= 16;
				low2 = p001 + p011 | 0;
				if(haxe_Int32.ucompare(low2,p011) < 0) {
					++high2;
					high2 = high2 | 0;
				}
				p101 <<= 16;
				low2 = low2 + p101 | 0;
				if(haxe_Int32.ucompare(low2,p101) < 0) {
					++high2;
					high2 = high2 | 0;
				}
				high2 = high2 + (haxe_Int32._mul(multiplier.low,digit_high) + haxe_Int32._mul(multiplier.high,digit_low) | 0) | 0;
				var b_high1 = high2;
				var b_low1 = low2;
				var high3 = current.high + b_high1 | 0;
				var low3 = current.low + b_low1 | 0;
				if(haxe_Int32.ucompare(low3,current.low) < 0) {
					++high3;
					high3 = high3 | 0;
				}
				current = new haxe__$Int64__$_$_$Int64(high3,low3);
				if(current.high < 0) {
					throw haxe_Exception.thrown("NumberFormatError: Overflow");
				}
			}
		}
		var al2 = multiplier.low & 65535;
		var ah2 = multiplier.low >>> 16;
		var bl2 = base_low & 65535;
		var bh2 = base_low >>> 16;
		var p002 = haxe_Int32._mul(al2,bl2);
		var p102 = haxe_Int32._mul(ah2,bl2);
		var p012 = haxe_Int32._mul(al2,bh2);
		var p112 = haxe_Int32._mul(ah2,bh2);
		var low4 = p002;
		var high4 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
		p012 <<= 16;
		low4 = p002 + p012 | 0;
		if(haxe_Int32.ucompare(low4,p012) < 0) {
			++high4;
			high4 = high4 | 0;
		}
		p102 <<= 16;
		low4 = low4 + p102 | 0;
		if(haxe_Int32.ucompare(low4,p102) < 0) {
			++high4;
			high4 = high4 | 0;
		}
		high4 = high4 + (haxe_Int32._mul(multiplier.low,base_high) + haxe_Int32._mul(multiplier.high,base_low) | 0) | 0;
		multiplier = new haxe__$Int64__$_$_$Int64(high4,low4);
	}
	return current;
};
haxe_Int64Helper.fromFloat = function(f) {
	if(isNaN(f) || !isFinite(f)) {
		throw haxe_Exception.thrown("Number is NaN or Infinite");
	}
	var noFractions = f - f % 1;
	if(noFractions > 9007199254740991) {
		throw haxe_Exception.thrown("Conversion overflow");
	}
	if(noFractions < -9007199254740991) {
		throw haxe_Exception.thrown("Conversion underflow");
	}
	var result = new haxe__$Int64__$_$_$Int64(0,0);
	var neg = noFractions < 0;
	var rest = neg ? -noFractions : noFractions;
	var i = 0;
	while(rest >= 1) {
		var curr = rest % 2;
		rest /= 2;
		if(curr >= 1) {
			var a_high = 0;
			var a_low = 1;
			var b = i;
			b &= 63;
			var b1 = b == 0 ? new haxe__$Int64__$_$_$Int64(a_high,a_low) : b < 32 ? new haxe__$Int64__$_$_$Int64(a_high << b | a_low >>> 32 - b,a_low << b) : new haxe__$Int64__$_$_$Int64(a_low << b - 32,0);
			var high = result.high + b1.high | 0;
			var low = result.low + b1.low | 0;
			if(haxe_Int32.ucompare(low,result.low) < 0) {
				++high;
				high = high | 0;
			}
			result = new haxe__$Int64__$_$_$Int64(high,low);
		}
		++i;
	}
	if(neg) {
		var high = ~result.high;
		var low = ~result.low + 1 | 0;
		if(low == 0) {
			++high;
			high = high | 0;
		}
		result = new haxe__$Int64__$_$_$Int64(high,low);
	}
	return result;
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_NativeStackTrace = function() { };
$hxClasses["haxe.NativeStackTrace"] = haxe_NativeStackTrace;
haxe_NativeStackTrace.__name__ = "haxe.NativeStackTrace";
haxe_NativeStackTrace.lastError = null;
haxe_NativeStackTrace.wrapCallSite = null;
haxe_NativeStackTrace.saveStack = function(e) {
	haxe_NativeStackTrace.lastError = e;
};
haxe_NativeStackTrace.callStack = function() {
	var e = new Error("");
	var stack = haxe_NativeStackTrace.tryHaxeStack(e);
	if(typeof(stack) == "undefined") {
		try {
			throw e;
		} catch( _g ) {
		}
		stack = e.stack;
	}
	return haxe_NativeStackTrace.normalize(stack,2);
};
haxe_NativeStackTrace.exceptionStack = function() {
	return haxe_NativeStackTrace.normalize(haxe_NativeStackTrace.tryHaxeStack(haxe_NativeStackTrace.lastError));
};
haxe_NativeStackTrace.toHaxe = function(s,skip) {
	if(skip == null) {
		skip = 0;
	}
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var _g = 0;
		var _g1 = stack.length;
		while(_g < _g1) {
			var i = _g++;
			if(skip > i) {
				continue;
			}
			var line = stack[i];
			var matched = line.match(/^    at ([A-Za-z0-9_. ]+) \(([^)]+):([0-9]+):([0-9]+)\)$/);
			if(matched != null) {
				var path = matched[1].split(".");
				if(path[0] == "$hxClasses") {
					path.shift();
				}
				var meth = path.pop();
				var file = matched[2];
				var line1 = Std.parseInt(matched[3]);
				var column = Std.parseInt(matched[4]);
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1,column));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else if(skip > 0 && Array.isArray(s)) {
		return s.slice(skip);
	} else {
		return s;
	}
};
haxe_NativeStackTrace.tryHaxeStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = haxe_NativeStackTrace.prepareHxStackTrace;
	var stack = e.stack;
	Error.prepareStackTrace = oldValue;
	return stack;
};
haxe_NativeStackTrace.prepareHxStackTrace = function(e,callsites) {
	var stack = [];
	var _g = 0;
	while(_g < callsites.length) {
		var site = callsites[_g];
		++_g;
		if(haxe_NativeStackTrace.wrapCallSite != null) {
			site = haxe_NativeStackTrace.wrapCallSite(site);
		}
		var method = null;
		var fullName = site.getFunctionName();
		if(fullName != null) {
			var idx = fullName.lastIndexOf(".");
			if(idx >= 0) {
				var className = fullName.substring(0,idx);
				var methodName = fullName.substring(idx + 1);
				method = haxe_StackItem.Method(className,methodName);
			} else {
				method = haxe_StackItem.Method(null,fullName);
			}
		}
		var fileName = site.getFileName();
		var fileAddr = fileName == null ? -1 : fileName.indexOf("file:");
		if(haxe_NativeStackTrace.wrapCallSite != null && fileAddr > 0) {
			fileName = fileName.substring(fileAddr + 6);
		}
		stack.push(haxe_StackItem.FilePos(method,fileName,site.getLineNumber(),site.getColumnNumber()));
	}
	return stack;
};
haxe_NativeStackTrace.normalize = function(stack,skipItems) {
	if(skipItems == null) {
		skipItems = 0;
	}
	if(Array.isArray(stack) && skipItems > 0) {
		return stack.slice(skipItems);
	} else if(typeof(stack) == "string") {
		switch(stack.substring(0,6)) {
		case "Error\n":case "Error:":
			++skipItems;
			break;
		default:
		}
		return haxe_NativeStackTrace.skipLines(stack,skipItems);
	} else {
		return stack;
	}
};
haxe_NativeStackTrace.skipLines = function(stack,skip,pos) {
	if(pos == null) {
		pos = 0;
	}
	while(true) if(skip > 0) {
		pos = stack.indexOf("\n",pos);
		if(pos < 0) {
			return "";
		} else {
			skip = --skip;
			pos += 1;
			continue;
		}
	} else {
		return stack.substring(pos);
	}
};
var haxe_Rest = {};
haxe_Rest.__properties__ = {get_length:"get_length"};
haxe_Rest.get_length = function(this1) {
	return this1.length;
};
haxe_Rest.of = function(array) {
	return array;
};
haxe_Rest._new = function(array) {
	return array;
};
haxe_Rest.get = function(this1,index) {
	return this1[index];
};
haxe_Rest.toArray = function(this1) {
	return this1.slice();
};
haxe_Rest.iterator = function(this1) {
	return new haxe_iterators_RestIterator(this1);
};
haxe_Rest.keyValueIterator = function(this1) {
	return new haxe_iterators_RestKeyValueIterator(this1);
};
haxe_Rest.append = function(this1,item) {
	var result = this1.slice();
	result.push(item);
	return result;
};
haxe_Rest.prepend = function(this1,item) {
	var result = this1.slice();
	result.unshift(item);
	return result;
};
haxe_Rest.toString = function(this1) {
	return "[" + this1.toString() + "]";
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.measure = function(f,pos) {
	var hrtime = process.hrtime();
	var t0 = hrtime[0] + hrtime[1] / 1e9;
	var r = f();
	var tmp = haxe_Log.trace;
	var hrtime = process.hrtime();
	tmp(hrtime[0] + hrtime[1] / 1e9 - t0 + "s",pos);
	return r;
};
haxe_Timer.stamp = function() {
	var hrtime = process.hrtime();
	return hrtime[0] + hrtime[1] / 1e9;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
	this.__skipStack++;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	value: null
	,unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_display_FsPath = {};
haxe_display_FsPath._new = function(path) {
	return path;
};
haxe_display_FsPath.toString = function(this1) {
	return this1;
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.iteratorLoop = function(node,acc) {
	while(true) {
		if(node != null) {
			haxe_ds_BalancedTree.iteratorLoop(node.left,acc);
			acc.push(node.value);
			node = node.right;
			continue;
		}
		return;
	}
};
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( _g ) {
			if(typeof(haxe_Exception.caught(_g).unwrap()) == "string") {
				return false;
			} else {
				throw _g;
			}
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		haxe_ds_BalancedTree.iteratorLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	,keyValueIterator: function() {
		return new haxe_iterators_MapKeyValueIterator(this);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	,copy: function() {
		var copied = new haxe_ds_BalancedTree();
		copied.root = this.root;
		return copied;
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw haxe_Exception.thrown("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw haxe_Exception.thrown("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this = r.right;
			var _this1 = r.left;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,toString: function() {
		if(this.root == null) {
			return "{}";
		} else {
			return "{" + this.root.toString() + "}";
		}
	}
	,clear: function() {
		this.root = null;
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this = this.left;
			tmp = _this == null ? 0 : _this._height;
		} else {
			var _this = this.right;
			tmp = _this == null ? 0 : _this._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,toString: function() {
		return (this.left == null ? "" : this.left.toString() + ", ") + ("" + Std.string(this.key) + "=" + Std.string(this.value)) + (this.right == null ? "" : ", " + this.right.toString());
	}
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,copy: function() {
		var copied = new haxe_ds_EnumValueMap();
		copied.root = this.root;
		return copied;
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_HashMap = {};
haxe_ds_HashMap._new = function() {
	var this1 = new haxe_ds__$HashMap_HashMapData();
	return this1;
};
haxe_ds_HashMap.set = function(this1,k,v) {
	var _this = this1.keys;
	var key = k.hashCode();
	_this.h[key] = k;
	var _this = this1.values;
	var key = k.hashCode();
	_this.h[key] = v;
};
haxe_ds_HashMap.get = function(this1,k) {
	var _this = this1.values;
	var key = k.hashCode();
	return _this.h[key];
};
haxe_ds_HashMap.exists = function(this1,k) {
	var _this = this1.values;
	var key = k.hashCode();
	return _this.h.hasOwnProperty(key);
};
haxe_ds_HashMap.remove = function(this1,k) {
	this1.values.remove(k.hashCode());
	return this1.keys.remove(k.hashCode());
};
haxe_ds_HashMap.keys = function(this1) {
	return this1.keys.iterator();
};
haxe_ds_HashMap.copy = function(this1) {
	var copied = new haxe_ds__$HashMap_HashMapData();
	copied.keys = this1.keys.copy();
	copied.values = this1.values.copy();
	return copied;
};
haxe_ds_HashMap.iterator = function(this1) {
	return this1.values.iterator();
};
haxe_ds_HashMap.keyValueIterator = function(this1) {
	return new haxe_iterators_HashMapKeyValueIterator(this1);
};
haxe_ds_HashMap.clear = function(this1) {
	this1.keys.h = { };
	this1.values.h = { };
};
var haxe_ds__$HashMap_HashMapData = function() {
	this.keys = new haxe_ds_IntMap();
	this.values = new haxe_ds_IntMap();
};
$hxClasses["haxe.ds._HashMap.HashMapData"] = haxe_ds__$HashMap_HashMapData;
haxe_ds__$HashMap_HashMapData.__name__ = "haxe.ds._HashMap.HashMapData";
haxe_ds__$HashMap_HashMapData.prototype = {
	keys: null
	,values: null
	,__class__: haxe_ds__$HashMap_HashMapData
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(key | 0);
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,keyValueIterator: function() {
		return new haxe_iterators_MapKeyValueIterator(this);
	}
	,copy: function() {
		var copied = new haxe_ds_IntMap();
		var key = this.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			copied.h[key1] = this.h[key1];
		}
		return copied;
	}
	,toString: function() {
		var s_b = "";
		s_b = "{";
		var it = this.keys();
		while(it.hasNext()) {
			var i = it.next();
			s_b += i == null ? "null" : "" + i;
			s_b += " => ";
			s_b += Std.string(Std.string(this.h[i]));
			if(it.hasNext()) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,clear: function() {
		this.h = { };
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new haxe_ds__$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,first: function() {
		if(this.h == null) {
			return null;
		} else {
			return this.h.item;
		}
	}
	,last: function() {
		if(this.q == null) {
			return null;
		} else {
			return this.q.item;
		}
	}
	,pop: function() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
	,isEmpty: function() {
		return this.h == null;
	}
	,clear: function() {
		this.h = null;
		this.q = null;
		this.length = 0;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.h);
	}
	,keyValueIterator: function() {
		return new haxe_ds__$List_ListKeyValueIterator(this.h);
	}
	,toString: function() {
		var s_b = "";
		var first = true;
		var l = this.h;
		s_b = "{";
		while(l != null) {
			if(first) {
				first = false;
			} else {
				s_b += ", ";
			}
			s_b += Std.string(Std.string(l.item));
			l = l.next;
		}
		s_b += "}";
		return s_b;
	}
	,join: function(sep) {
		var s_b = "";
		var first = true;
		var l = this.h;
		while(l != null) {
			if(first) {
				first = false;
			} else {
				s_b += sep == null ? "null" : "" + sep;
			}
			s_b += Std.string(l.item);
			l = l.next;
		}
		return s_b;
	}
	,filter: function(f) {
		var l2 = new haxe_ds_List();
		var l = this.h;
		while(l != null) {
			var v = l.item;
			l = l.next;
			if(f(v)) {
				l2.add(v);
			}
		}
		return l2;
	}
	,map: function(f) {
		var b = new haxe_ds_List();
		var l = this.h;
		while(l != null) {
			var v = l.item;
			l = l.next;
			b.add(f(v));
		}
		return b;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds__$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["haxe.ds._List.ListIterator"] = haxe_ds__$List_ListIterator;
haxe_ds__$List_ListIterator.__name__ = "haxe.ds._List.ListIterator";
haxe_ds__$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: haxe_ds__$List_ListIterator
};
var haxe_ds__$List_ListKeyValueIterator = function(head) {
	this.head = head;
	this.idx = 0;
};
$hxClasses["haxe.ds._List.ListKeyValueIterator"] = haxe_ds__$List_ListKeyValueIterator;
haxe_ds__$List_ListKeyValueIterator.__name__ = "haxe.ds._List.ListKeyValueIterator";
haxe_ds__$List_ListKeyValueIterator.prototype = {
	idx: null
	,head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return { value : val, key : this.idx++};
	}
	,__class__: haxe_ds__$List_ListKeyValueIterator
};
var haxe_ds_Map = {};
haxe_ds_Map.set = function(this1,key,value) {
	this1.set(key,value);
};
haxe_ds_Map.get = function(this1,key) {
	return this1.get(key);
};
haxe_ds_Map.exists = function(this1,key) {
	return this1.exists(key);
};
haxe_ds_Map.remove = function(this1,key) {
	return this1.remove(key);
};
haxe_ds_Map.keys = function(this1) {
	return this1.keys();
};
haxe_ds_Map.iterator = function(this1) {
	return this1.iterator();
};
haxe_ds_Map.keyValueIterator = function(this1) {
	return this1.keyValueIterator();
};
haxe_ds_Map.copy = function(this1) {
	return this1.copy();
};
haxe_ds_Map.toString = function(this1) {
	return this1.toString();
};
haxe_ds_Map.clear = function(this1) {
	this1.clear();
};
haxe_ds_Map.arrayWrite = function(this1,k,v) {
	this1.set(k,v);
	return v;
};
haxe_ds_Map.toStringMap = function(t) {
	return new haxe_ds_StringMap();
};
haxe_ds_Map.toIntMap = function(t) {
	return new haxe_ds_IntMap();
};
haxe_ds_Map.toEnumValueMapMap = function(t) {
	return new haxe_ds_EnumValueMap();
};
haxe_ds_Map.toObjectMap = function(t) {
	return new haxe_ds_ObjectMap();
};
haxe_ds_Map.fromStringMap = function(map) {
	return map;
};
haxe_ds_Map.fromIntMap = function(map) {
	return map;
};
haxe_ds_Map.fromObjectMap = function(map) {
	return map;
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.count = null;
haxe_ds_ObjectMap.assignId = function(obj) {
	return (obj.__id__ = $global.$haxeUID++);
};
haxe_ds_ObjectMap.getId = function(obj) {
	return obj.__id__;
};
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,keyValueIterator: function() {
		return new haxe_iterators_MapKeyValueIterator(this);
	}
	,copy: function() {
		var copied = new haxe_ds_ObjectMap();
		var key = this.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			copied.set(key1,this.h[key1.__id__]);
		}
		return copied;
	}
	,toString: function() {
		var s_b = "";
		s_b = "{";
		var it = this.keys();
		while(it.hasNext()) {
			var i = it.next();
			s_b += Std.string(Std.string(i));
			s_b += " => ";
			s_b += Std.string(Std.string(this.h[i.__id__]));
			if(it.hasNext()) {
				s_b += ", ";
			}
		}
		s_b += "}";
		return s_b;
	}
	,clear: function() {
		this.h = { __keys__ : { }};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__:"haxe.ds.Option",__constructs__:null
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_._hx_name="Some",$_.__params__ = ["v"],$_)
	,None: {_hx_name:"None",_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
haxe_ds_Option.__constructs__ = [haxe_ds_Option.Some,haxe_ds_Option.None];
haxe_ds_Option.__empty_constructs__ = [haxe_ds_Option.None];
var haxe_ds_ReadOnlyArray = {};
haxe_ds_ReadOnlyArray.__properties__ = {get_length:"get_length"};
haxe_ds_ReadOnlyArray.get_length = function(this1) {
	return this1.length;
};
haxe_ds_ReadOnlyArray.get = function(this1,i) {
	return this1[i];
};
haxe_ds_ReadOnlyArray.concat = function(this1,a) {
	return this1.concat(a);
};
var haxe_ds__$StringMap_StringMapKeyIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapKeyIterator"] = haxe_ds__$StringMap_StringMapKeyIterator;
haxe_ds__$StringMap_StringMapKeyIterator.__name__ = "haxe.ds._StringMap.StringMapKeyIterator";
haxe_ds__$StringMap_StringMapKeyIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.keys[this.current++];
	}
	,__class__: haxe_ds__$StringMap_StringMapKeyIterator
};
var haxe_ds__$StringMap_StringMapValueIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapValueIterator"] = haxe_ds__$StringMap_StringMapValueIterator;
haxe_ds__$StringMap_StringMapValueIterator.__name__ = "haxe.ds._StringMap.StringMapValueIterator";
haxe_ds__$StringMap_StringMapValueIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.h[this.keys[this.current++]];
	}
	,__class__: haxe_ds__$StringMap_StringMapValueIterator
};
var haxe_ds__$StringMap_StringMapKeyValueIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapKeyValueIterator"] = haxe_ds__$StringMap_StringMapKeyValueIterator;
haxe_ds__$StringMap_StringMapKeyValueIterator.__name__ = "haxe.ds._StringMap.StringMapKeyValueIterator";
haxe_ds__$StringMap_StringMapKeyValueIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		var key = this.keys[this.current++];
		return { key : key, value : this.h[key]};
	}
	,__class__: haxe_ds__$StringMap_StringMapKeyValueIterator
};
var haxe_ds_Vector = {};
haxe_ds_Vector.__properties__ = {get_length:"get_length"};
haxe_ds_Vector._new = function(length) {
	var this1 = new Array(length);
	return this1;
};
haxe_ds_Vector.get = function(this1,index) {
	return this1[index];
};
haxe_ds_Vector.set = function(this1,index,val) {
	return this1[index] = val;
};
haxe_ds_Vector.get_length = function(this1) {
	return this1.length;
};
haxe_ds_Vector.blit = function(src,srcPos,dest,destPos,len) {
	if(src == dest) {
		if(srcPos < destPos) {
			var i = srcPos + len;
			var j = destPos + len;
			var _g = 0;
			while(_g < len) {
				++_g;
				--i;
				--j;
				src[j] = src[i];
			}
		} else if(srcPos > destPos) {
			var i = srcPos;
			var j = destPos;
			var _g = 0;
			while(_g < len) {
				++_g;
				src[j] = src[i];
				++i;
				++j;
			}
		}
	} else {
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			dest[destPos + i] = src[srcPos + i];
		}
	}
};
haxe_ds_Vector.toArray = function(this1) {
	return this1.slice(0);
};
haxe_ds_Vector.toData = function(this1) {
	return this1;
};
haxe_ds_Vector.fromData = function(data) {
	return data;
};
haxe_ds_Vector.fromArrayCopy = function(array) {
	return array.slice(0);
};
haxe_ds_Vector.copy = function(this1) {
	var this2 = new Array(this1.length);
	var r = this2;
	haxe_ds_Vector.blit(this1,0,r,0,this1.length);
	return r;
};
haxe_ds_Vector.join = function(this1,sep) {
	var b_b = "";
	var len = this1.length;
	var _g = 0;
	while(_g < len) {
		var i = _g++;
		b_b += Std.string(Std.string(this1[i]));
		if(i < len - 1) {
			b_b += sep == null ? "null" : "" + sep;
		}
	}
	return b_b;
};
haxe_ds_Vector.map = function(this1,f) {
	var length = this1.length;
	var this2 = new Array(length);
	var r = this2;
	var _g = 0;
	while(_g < length) {
		var i = _g++;
		var v = f(this1[i]);
		r[i] = v;
	}
	return r;
};
haxe_ds_Vector.sort = function(this1,f) {
	this1.sort(f);
};
var haxe_ds_WeakMap = function() {
	throw new haxe_exceptions_NotImplementedException("Not implemented for this platform",null,{ fileName : "haxe/ds/WeakMap.hx", lineNumber : 39, className : "haxe.ds.WeakMap", methodName : "new"});
};
$hxClasses["haxe.ds.WeakMap"] = haxe_ds_WeakMap;
haxe_ds_WeakMap.__name__ = "haxe.ds.WeakMap";
haxe_ds_WeakMap.__interfaces__ = [haxe_IMap];
haxe_ds_WeakMap.prototype = {
	set: function(key,value) {
	}
	,get: function(key) {
		return null;
	}
	,exists: function(key) {
		return false;
	}
	,remove: function(key) {
		return false;
	}
	,keys: function() {
		return null;
	}
	,iterator: function() {
		return null;
	}
	,keyValueIterator: function() {
		return null;
	}
	,copy: function() {
		return null;
	}
	,toString: function() {
		return null;
	}
	,clear: function() {
	}
	,__class__: haxe_ds_WeakMap
};
var haxe_exceptions_PosException = function(message,previous,pos) {
	haxe_Exception.call(this,message,previous);
	if(pos == null) {
		this.posInfos = { fileName : "(unknown)", lineNumber : 0, className : "(unknown)", methodName : "(unknown)"};
	} else {
		this.posInfos = pos;
	}
	this.__skipStack++;
};
$hxClasses["haxe.exceptions.PosException"] = haxe_exceptions_PosException;
haxe_exceptions_PosException.__name__ = "haxe.exceptions.PosException";
haxe_exceptions_PosException.__super__ = haxe_Exception;
haxe_exceptions_PosException.prototype = $extend(haxe_Exception.prototype,{
	posInfos: null
	,toString: function() {
		return "" + haxe_Exception.prototype.toString.call(this) + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" + this.posInfos.lineNumber;
	}
	,__class__: haxe_exceptions_PosException
});
var haxe_exceptions_NotImplementedException = function(message,previous,pos) {
	if(message == null) {
		message = "Not implemented";
	}
	haxe_exceptions_PosException.call(this,message,previous,pos);
	this.__skipStack++;
};
$hxClasses["haxe.exceptions.NotImplementedException"] = haxe_exceptions_NotImplementedException;
haxe_exceptions_NotImplementedException.__name__ = "haxe.exceptions.NotImplementedException";
haxe_exceptions_NotImplementedException.__super__ = haxe_exceptions_PosException;
haxe_exceptions_NotImplementedException.prototype = $extend(haxe_exceptions_PosException.prototype,{
	__class__: haxe_exceptions_NotImplementedException
});
var haxe_http_HttpBase = function(url) {
	this.url = url;
	this.headers = [];
	this.params = [];
	this.emptyOnData = $bind(this,this.onData);
};
$hxClasses["haxe.http.HttpBase"] = haxe_http_HttpBase;
haxe_http_HttpBase.__name__ = "haxe.http.HttpBase";
haxe_http_HttpBase.prototype = {
	url: null
	,responseBytes: null
	,responseAsString: null
	,postData: null
	,postBytes: null
	,headers: null
	,params: null
	,emptyOnData: null
	,setHeader: function(name,value) {
		var _g = 0;
		var _g1 = this.headers.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.headers[i].name == name) {
				this.headers[i] = { name : name, value : value};
				return;
			}
		}
		this.headers.push({ name : name, value : value});
	}
	,addHeader: function(header,value) {
		this.headers.push({ name : header, value : value});
	}
	,setParameter: function(name,value) {
		var _g = 0;
		var _g1 = this.params.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.params[i].name == name) {
				this.params[i] = { name : name, value : value};
				return;
			}
		}
		this.params.push({ name : name, value : value});
	}
	,addParameter: function(name,value) {
		this.params.push({ name : name, value : value});
	}
	,setPostData: function(data) {
		this.postData = data;
		this.postBytes = null;
	}
	,setPostBytes: function(data) {
		this.postBytes = data;
		this.postData = null;
	}
	,request: function(post) {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/http/HttpBase.hx", lineNumber : 186, className : "haxe.http.HttpBase", methodName : "request"});
	}
	,onData: function(data) {
	}
	,onBytes: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,hasOnData: function() {
		return !Reflect.compareMethods($bind(this,this.onData),this.emptyOnData);
	}
	,success: function(data) {
		this.responseBytes = data;
		this.responseAsString = null;
		if(this.hasOnData()) {
			this.onData(this.get_responseData());
		}
		this.onBytes(this.responseBytes);
	}
	,get_responseData: function() {
		if(this.responseAsString == null && this.responseBytes != null) {
			this.responseAsString = this.responseBytes.getString(0,this.responseBytes.length,haxe_io_Encoding.UTF8);
		}
		return this.responseAsString;
	}
	,__class__: haxe_http_HttpBase
	,__properties__: {get_responseData:"get_responseData"}
};
var haxe_http_HttpNodeJs = function(url) {
	haxe_http_HttpBase.call(this,url);
};
$hxClasses["haxe.http.HttpNodeJs"] = haxe_http_HttpNodeJs;
haxe_http_HttpNodeJs.__name__ = "haxe.http.HttpNodeJs";
haxe_http_HttpNodeJs.__super__ = haxe_http_HttpBase;
haxe_http_HttpNodeJs.prototype = $extend(haxe_http_HttpBase.prototype,{
	req: null
	,cancel: function() {
		if(this.req == null) {
			return;
		}
		this.req.abort();
		this.req = null;
	}
	,request: function(post) {
		var _gthis = this;
		this.responseAsString = null;
		this.responseBytes = null;
		var parsedUrl = new js_node_url_URL(this.url);
		var secure = parsedUrl.protocol == "https:";
		var host = parsedUrl.hostname;
		var path = parsedUrl.pathname;
		var port = parsedUrl.port != null ? Std.parseInt(parsedUrl.port) : secure ? 443 : 80;
		var h = { };
		var _g = 0;
		var _g1 = this.headers;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var arr = Reflect.field(h,i.name);
			if(arr == null) {
				arr = [];
				h[i.name] = arr;
			}
			arr.push(i.value);
		}
		if(this.postData != null || this.postBytes != null) {
			post = true;
		}
		var uri = null;
		var _g = 0;
		var _g1 = this.params;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			if(uri == null) {
				uri = "";
			} else {
				uri += "&";
			}
			var s = p.name;
			var uri1 = encodeURIComponent(s) + "=";
			var s1 = p.value;
			uri += uri1 + encodeURIComponent(s1);
		}
		var question = path.split("?").length <= 1;
		if(uri != null) {
			path += (question ? "?" : "&") + uri;
		}
		var opts = { protocol : parsedUrl.protocol, hostname : host, port : port, method : post ? "POST" : "GET", path : path, headers : h};
		var httpResponse = function(res) {
			res.setEncoding("binary");
			var s = res.statusCode;
			if(s != null) {
				_gthis.onStatus(s);
			}
			var data = [];
			res.on("data",function(chunk) {
				data.push(js_node_buffer_Buffer.from(chunk,"binary"));
			});
			res.on("end",function(_) {
				var buf = data.length == 1 ? data[0] : js_node_buffer_Buffer.concat(data);
				var httpResponse = buf.buffer.slice(buf.byteOffset,buf.byteOffset + buf.byteLength);
				_gthis.responseBytes = haxe_io_Bytes.ofData(httpResponse);
				_gthis.req = null;
				if(s != null && s >= 200 && s < 400) {
					_gthis.success(_gthis.responseBytes);
				} else {
					_gthis.onError("Http Error #" + s);
				}
			});
		};
		this.req = secure ? js_node_Https.request(opts,httpResponse) : js_node_Http.request(opts,httpResponse);
		if(post) {
			if(this.postData != null) {
				this.req.write(this.postData);
			} else if(this.postBytes != null) {
				this.req.setHeader("Content-Length","" + this.postBytes.length);
				this.req.write(js_node_buffer_Buffer.from(this.postBytes.b.bufferValue));
			}
		}
		this.req.end();
	}
	,__class__: haxe_http_HttpNodeJs
});
var haxe_io_ArrayBufferView = {};
haxe_io_ArrayBufferView.__properties__ = {get_byteLength:"get_byteLength",get_byteOffset:"get_byteOffset",get_buffer:"get_buffer"};
haxe_io_ArrayBufferView._new = function(size) {
	var this1 = new Uint8Array(size);
	return this1;
};
haxe_io_ArrayBufferView.get_byteOffset = function(this1) {
	return this1.byteOffset;
};
haxe_io_ArrayBufferView.get_byteLength = function(this1) {
	return this1.byteLength;
};
haxe_io_ArrayBufferView.get_buffer = function(this1) {
	return haxe_io_Bytes.ofData(this1.buffer);
};
haxe_io_ArrayBufferView.sub = function(this1,begin,length) {
	return new Uint8Array(this1.buffer,begin,length == null ? this1.buffer.byteLength - begin : length);
};
haxe_io_ArrayBufferView.getData = function(this1) {
	return this1;
};
haxe_io_ArrayBufferView.fromData = function(a) {
	return a;
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.ofHex = function(s) {
	if((s.length & 1) != 0) {
		throw haxe_Exception.thrown("Not a hex string (odd number of digits)");
	}
	var a = [];
	var i = 0;
	var len = s.length >> 1;
	while(i < len) {
		var high = s.charCodeAt(i * 2);
		var low = s.charCodeAt(i * 2 + 1);
		high = (high & 15) + ((high & 64) >> 6) * 9;
		low = (low & 15) + ((low & 64) >> 6) * 9;
		a.push((high << 4 | low) & 255);
		++i;
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,get: function(pos) {
		return this.b[pos];
	}
	,set: function(pos,v) {
		this.b[pos] = v;
	}
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,fill: function(pos,len,value) {
		var _g = 0;
		while(_g < len) {
			++_g;
			this.b[pos++] = value;
		}
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,compare: function(other) {
		var b1 = this.b;
		var b2 = other.b;
		var len = this.length < other.length ? this.length : other.length;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			if(b1[i] != b2[i]) {
				return b1[i] - b2[i];
			}
		}
		return this.length - other.length;
	}
	,initData: function() {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
	}
	,getDouble: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat64(pos,true);
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setDouble: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat64(pos,v,true);
	}
	,setFloat: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat32(pos,v,true);
	}
	,getUInt16: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getUint16(pos,true);
	}
	,setUInt16: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setUint16(pos,v,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getInt64: function(pos) {
		return new haxe__$Int64__$_$_$Int64(this.getInt32(pos + 4),this.getInt32(pos));
	}
	,setInt64: function(pos,v) {
		this.setInt32(pos,v.low);
		this.setInt32(pos + 4,v.high);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,readString: function(pos,len) {
		return this.getString(pos,len);
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,toHex: function() {
		var s_b = "";
		var chars = [];
		var str = "0123456789abcdef";
		var _g = 0;
		var _g1 = str.length;
		while(_g < _g1) {
			var i = _g++;
			chars.push(HxOverrides.cca(str,i));
		}
		var _g = 0;
		var _g1 = this.length;
		while(_g < _g1) {
			var i = _g++;
			var c = this.b[i];
			s_b += String.fromCodePoint(chars[c >> 4]);
			s_b += String.fromCodePoint(chars[c & 15]);
		}
		return s_b;
	}
	,getData: function() {
		return this.b.bufferValue;
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
	,get_length: function() {
		return this.pos;
	}
	,addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,add: function(src) {
		if(this.pos + src.length > this.size) {
			this.grow(src.length);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset,src.length);
		this.u8.set(sub,this.pos);
		this.pos += src.length;
	}
	,addString: function(v,encoding) {
		this.add(haxe_io_Bytes.ofString(v,encoding));
	}
	,addInt32: function(v) {
		if(this.pos + 4 > this.size) {
			this.grow(4);
		}
		this.view.setInt32(this.pos,v,true);
		this.pos += 4;
	}
	,addInt64: function(v) {
		if(this.pos + 8 > this.size) {
			this.grow(8);
		}
		this.view.setInt32(this.pos,v.low,true);
		this.view.setInt32(this.pos + 4,v.high,true);
		this.pos += 8;
	}
	,addFloat: function(v) {
		if(this.pos + 4 > this.size) {
			this.grow(4);
		}
		this.view.setFloat32(this.pos,v,true);
		this.pos += 4;
	}
	,addDouble: function(v) {
		if(this.pos + 8 > this.size) {
			this.grow(8);
		}
		this.view.setFloat64(this.pos,v,true);
		this.pos += 8;
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
	,__properties__: {get_length:"get_length"}
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:"haxe.io.Encoding",__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
haxe_io_Encoding.__empty_constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:"haxe.io.Error",__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
haxe_io_Error.__empty_constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds];
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = "haxe.io.FPHelper";
haxe_io_FPHelper._i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var e = i >> 23 & 255;
	if(e == 255) {
		if((i & 8388607) == 0) {
			if(sign > 0) {
				return Infinity;
			} else {
				return -Infinity;
			}
		} else {
			return NaN;
		}
	}
	var m = e == 0 ? (i & 8388607) << 1 : i & 8388607 | 8388608;
	return sign * m * Math.pow(2,e - 150);
};
haxe_io_FPHelper._i64ToDouble = function(lo,hi) {
	var sign = 1 - (hi >>> 31 << 1);
	var e = hi >> 20 & 2047;
	if(e == 2047) {
		if(lo == 0 && (hi & 1048575) == 0) {
			if(sign > 0) {
				return Infinity;
			} else {
				return -Infinity;
			}
		} else {
			return NaN;
		}
	}
	var m = 2.220446049250313e-16 * ((hi & 1048575) * 4294967296. + (lo >>> 31) * 2147483648. + (lo & 2147483647));
	if(e == 0) {
		m *= 2.0;
	} else {
		m += 1.0;
	}
	return sign * m * Math.pow(2,e - 1023);
};
haxe_io_FPHelper._floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0 ? -f : f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp > 127) {
		return 2139095040;
	} else {
		if(exp <= -127) {
			exp = -127;
			af *= 7.1362384635298e+44;
		} else {
			af = (af / Math.pow(2,exp) - 1.0) * 8388608;
		}
		return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | Math.round(af);
	}
};
haxe_io_FPHelper._doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else if(!isFinite(v)) {
		i64.low = 0;
		i64.high = v > 0 ? 2146435072 : -1048576;
	} else {
		var av = v < 0 ? -v : v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		if(exp > 1023) {
			i64.low = -1;
			i64.high = 2146435071;
		} else {
			if(exp <= -1023) {
				exp = -1023;
				av /= 2.2250738585072014e-308;
			} else {
				av = av / Math.pow(2,exp) - 1.0;
			}
			var sig = Math.round(av * 4503599627370496.);
			var sig_l = sig | 0;
			var sig_h = sig / 4294967296.0 | 0;
			i64.low = sig_l;
			i64.high = (v < 0 ? -2147483648 : 0) | exp + 1023 << 20 | sig_h;
		}
	}
	return i64;
};
haxe_io_FPHelper.i32ToFloat = function(i) {
	haxe_io_FPHelper.helper.setInt32(0,i,true);
	return haxe_io_FPHelper.helper.getFloat32(0,true);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	haxe_io_FPHelper.helper.setFloat32(0,f,true);
	return haxe_io_FPHelper.helper.getInt32(0,true);
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	haxe_io_FPHelper.helper.setInt32(0,low,true);
	haxe_io_FPHelper.helper.setInt32(4,high,true);
	return haxe_io_FPHelper.helper.getFloat64(0,true);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	haxe_io_FPHelper.helper.setFloat64(0,v,true);
	i64.low = haxe_io_FPHelper.helper.getInt32(0,true);
	i64.high = haxe_io_FPHelper.helper.getInt32(4,true);
	return i64;
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
haxe_io_Input.prototype = {
	bigEndian: null
	,readByte: function() {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Input.hx", lineNumber : 53, className : "haxe.io.Input", methodName : "readByte"});
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( _g ) {
			if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				throw _g;
			}
		}
		return len - k;
	}
	,close: function() {
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,readAll: function(bufsize) {
		if(bufsize == null) {
			bufsize = 16384;
		}
		var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
		var total = new haxe_io_BytesBuffer();
		try {
			while(true) {
				var len = this.readBytes(buf,0,bufsize);
				if(len == 0) {
					throw haxe_Exception.thrown(haxe_io_Error.Blocked);
				}
				total.addBytes(buf,0,len);
			}
		} catch( _g ) {
			if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				throw _g;
			}
		}
		return total.getBytes();
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readUntil: function(end) {
		var buf = new haxe_io_BytesBuffer();
		var last;
		while(true) {
			last = this.readByte();
			if(!(last != end)) {
				break;
			}
			buf.addByte(last);
		}
		return buf.getBytes().toString();
	}
	,readLine: function() {
		var buf = new haxe_io_BytesBuffer();
		var last;
		var s;
		try {
			while(true) {
				last = this.readByte();
				if(!(last != 10)) {
					break;
				}
				buf.addByte(last);
			}
			s = buf.getBytes().toString();
			if(HxOverrides.cca(s,s.length - 1) == 13) {
				s = HxOverrides.substr(s,0,-1);
			}
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(((_g1) instanceof haxe_io_Eof)) {
				var e = _g1;
				s = buf.getBytes().toString();
				if(s.length == 0) {
					throw haxe_Exception.thrown(e);
				}
			} else {
				throw _g;
			}
		}
		return s;
	}
	,readFloat: function() {
		return haxe_io_FPHelper.i32ToFloat(this.readInt32());
	}
	,readDouble: function() {
		var i1 = this.readInt32();
		var i2 = this.readInt32();
		if(this.bigEndian) {
			return haxe_io_FPHelper.i64ToDouble(i2,i1);
		} else {
			return haxe_io_FPHelper.i64ToDouble(i1,i2);
		}
	}
	,readInt8: function() {
		var n = this.readByte();
		if(n >= 128) {
			return n - 256;
		}
		return n;
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian ? ch2 | ch1 << 8 : ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readInt24: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var n = this.bigEndian ? ch3 | ch2 << 8 | ch1 << 16 : ch1 | ch2 << 8 | ch3 << 16;
		if((n & 8388608) != 0) {
			return n - 16777216;
		}
		return n;
	}
	,readUInt24: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		if(this.bigEndian) {
			return ch3 | ch2 << 8 | ch1 << 16;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len,encoding) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
	,getDoubleSig: function(bytes) {
		return ((bytes[1] & 15) << 16 | bytes[2] << 8 | bytes[3]) * 4294967296. + (bytes[4] >> 7) * 2147483648 + ((bytes[4] & 127) << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7]);
	}
	,__class__: haxe_io_Input
	,__properties__: {set_bigEndian:"set_bigEndian"}
};
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = "haxe.io.Output";
haxe_io_Output.prototype = {
	bigEndian: null
	,writeByte: function(c) {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Output.hx", lineNumber : 47, className : "haxe.io.Output", methodName : "writeByte"});
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,flush: function() {
	}
	,close: function() {
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,writeFloat: function(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	,writeDouble: function(x) {
		var i64 = haxe_io_FPHelper.doubleToI64(x);
		if(this.bigEndian) {
			this.writeInt32(i64.high);
			this.writeInt32(i64.low);
		} else {
			this.writeInt32(i64.low);
			this.writeInt32(i64.high);
		}
	}
	,writeInt8: function(x) {
		if(x < -128 || x >= 128) {
			throw haxe_Exception.thrown(haxe_io_Error.Overflow);
		}
		this.writeByte(x & 255);
	}
	,writeInt16: function(x) {
		if(x < -32768 || x >= 32768) {
			throw haxe_Exception.thrown(haxe_io_Error.Overflow);
		}
		this.writeUInt16(x & 65535);
	}
	,writeUInt16: function(x) {
		if(x < 0 || x >= 65536) {
			throw haxe_Exception.thrown(haxe_io_Error.Overflow);
		}
		if(this.bigEndian) {
			this.writeByte(x >> 8);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8);
		}
	}
	,writeInt24: function(x) {
		if(x < -8388608 || x >= 8388608) {
			throw haxe_Exception.thrown(haxe_io_Error.Overflow);
		}
		this.writeUInt24(x & 16777215);
	}
	,writeUInt24: function(x) {
		if(x < 0 || x >= 16777216) {
			throw haxe_Exception.thrown(haxe_io_Error.Overflow);
		}
		if(this.bigEndian) {
			this.writeByte(x >> 16);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16);
		}
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,prepare: function(nbytes) {
	}
	,writeInput: function(i,bufsize) {
		if(bufsize == null) {
			bufsize = 4096;
		}
		var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
		try {
			while(true) {
				var len = i.readBytes(buf,0,bufsize);
				if(len == 0) {
					throw haxe_Exception.thrown(haxe_io_Error.Blocked);
				}
				var p = 0;
				while(len > 0) {
					var k = this.writeBytes(buf,p,len);
					if(k == 0) {
						throw haxe_Exception.thrown(haxe_io_Error.Blocked);
					}
					p += k;
					len -= k;
				}
			}
		} catch( _g ) {
			if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				throw _g;
			}
		}
	}
	,writeString: function(s,encoding) {
		var b = haxe_io_Bytes.ofString(s,encoding);
		this.writeFullBytes(b,0,b.length);
	}
	,__class__: haxe_io_Output
	,__properties__: {set_bigEndian:"set_bigEndian"}
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = "haxe.io.Path";
haxe_io_Path.withoutExtension = function(path) {
	var s = new haxe_io_Path(path);
	s.ext = null;
	return s.toString();
};
haxe_io_Path.withoutDirectory = function(path) {
	var s = new haxe_io_Path(path);
	s.dir = null;
	return s.toString();
};
haxe_io_Path.directory = function(path) {
	var s = new haxe_io_Path(path);
	if(s.dir == null) {
		return "";
	}
	return s.dir;
};
haxe_io_Path.extension = function(path) {
	var s = new haxe_io_Path(path);
	if(s.ext == null) {
		return "";
	}
	return s.ext;
};
haxe_io_Path.withExtension = function(path,ext) {
	var s = new haxe_io_Path(path);
	s.ext = ext;
	return s.toString();
};
haxe_io_Path.join = function(paths) {
	var _g = [];
	var _g1 = 0;
	while(_g1 < paths.length) {
		var v = paths[_g1];
		++_g1;
		if(v != null && v != "") {
			_g.push(v);
		}
	}
	if(_g.length == 0) {
		return "";
	}
	var path = _g[0];
	var _g1 = 1;
	var _g2 = _g.length;
	while(_g1 < _g2) {
		var i = _g1++;
		path = haxe_io_Path.addTrailingSlash(path);
		path += _g[i];
	}
	return haxe_io_Path.normalize(path);
};
haxe_io_Path.normalize = function(path) {
	var slash = "/";
	path = path.split("\\").join(slash);
	if(path == slash) {
		return slash;
	}
	var target = [];
	var _g = 0;
	var _g1 = path.split(slash);
	while(_g < _g1.length) {
		var token = _g1[_g];
		++_g;
		if(token == ".." && target.length > 0 && target[target.length - 1] != "..") {
			target.pop();
		} else if(token == "") {
			if(target.length > 0 || HxOverrides.cca(path,0) == 47) {
				target.push(token);
			}
		} else if(token != ".") {
			target.push(token);
		}
	}
	var tmp = target.join(slash);
	var acc_b = "";
	var colon = false;
	var slashes = false;
	var _g2_offset = 0;
	var _g2_s = tmp;
	while(_g2_offset < _g2_s.length) {
		var s = _g2_s;
		var index = _g2_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g2_offset;
		}
		var c2 = c1;
		switch(c2) {
		case 47:
			if(!colon) {
				slashes = true;
			} else {
				var i = c2;
				colon = false;
				if(slashes) {
					acc_b += "/";
					slashes = false;
				}
				acc_b += String.fromCodePoint(i);
			}
			break;
		case 58:
			acc_b += ":";
			colon = true;
			break;
		default:
			var i1 = c2;
			colon = false;
			if(slashes) {
				acc_b += "/";
				slashes = false;
			}
			acc_b += String.fromCodePoint(i1);
		}
	}
	return acc_b;
};
haxe_io_Path.addTrailingSlash = function(path) {
	if(path.length == 0) {
		return "/";
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		if(c2 != path.length - 1) {
			return path + "\\";
		} else {
			return path;
		}
	} else if(c1 != path.length - 1) {
		return path + "/";
	} else {
		return path;
	}
};
haxe_io_Path.removeTrailingSlashes = function(path) {
	_hx_loop1: while(true) {
		var _g = HxOverrides.cca(path,path.length - 1);
		if(_g == null) {
			break;
		} else {
			switch(_g) {
			case 47:case 92:
				path = HxOverrides.substr(path,0,-1);
				break;
			default:
				break _hx_loop1;
			}
		}
	}
	return path;
};
haxe_io_Path.isAbsolute = function(path) {
	if(StringTools.startsWith(path,"/")) {
		return true;
	}
	if(path.charAt(1) == ":") {
		return true;
	}
	if(StringTools.startsWith(path,"\\\\")) {
		return true;
	}
	return false;
};
haxe_io_Path.unescape = function(path) {
	var regex = new EReg("-x([0-9][0-9])","g");
	return regex.map(path,function(regex) {
		var code = Std.parseInt(regex.matched(1));
		return String.fromCodePoint(code);
	});
};
haxe_io_Path.escape = function(path,allowSlashes) {
	if(allowSlashes == null) {
		allowSlashes = false;
	}
	var regex = allowSlashes ? new EReg("[^A-Za-z0-9_/\\\\\\.]","g") : new EReg("[^A-Za-z0-9_\\.]","g");
	return regex.map(path,function(v) {
		return "-x" + HxOverrides.cca(v.matched(0),0);
	});
};
haxe_io_Path.prototype = {
	dir: null
	,file: null
	,ext: null
	,backslash: null
	,toString: function() {
		return (this.dir == null ? "" : this.dir + (this.backslash ? "\\" : "/")) + this.file + (this.ext == null ? "" : "." + this.ext);
	}
	,__class__: haxe_io_Path
};
var haxe_io_UInt8Array = {};
haxe_io_UInt8Array.__properties__ = {get_view:"get_view",get_length:"get_length"};
haxe_io_UInt8Array._new = function(elements) {
	var this1 = new Uint8Array(elements);
	return this1;
};
haxe_io_UInt8Array.get_length = function(this1) {
	return this1.length;
};
haxe_io_UInt8Array.get_view = function(this1) {
	return this1;
};
haxe_io_UInt8Array.get = function(this1,index) {
	return this1[index];
};
haxe_io_UInt8Array.set = function(this1,index,value) {
	return this1[index] = value;
};
haxe_io_UInt8Array.sub = function(this1,begin,length) {
	return this1.subarray(begin,length == null ? this1.length : begin + length);
};
haxe_io_UInt8Array.subarray = function(this1,begin,end) {
	return this1.subarray(begin,end);
};
haxe_io_UInt8Array.getData = function(this1) {
	return this1;
};
haxe_io_UInt8Array.fromData = function(d) {
	return d;
};
haxe_io_UInt8Array.fromArray = function(a,pos,length) {
	if(pos == null) {
		pos = 0;
	}
	if(length == null) {
		length = a.length - pos;
	}
	if(pos < 0 || length < 0 || pos + length > a.length) {
		throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
	}
	if(pos == 0 && length == a.length) {
		return new Uint8Array(a);
	}
	var this1 = new Uint8Array(a.length);
	var i = this1;
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var idx = _g++;
		i[idx] = a[idx + pos];
	}
	return i;
};
haxe_io_UInt8Array.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos;
	}
	return new Uint8Array(bytes.b.bufferValue,bytePos,length);
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	array: null
	,current: null
	,hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var haxe_iterators_ArrayKeyValueIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayKeyValueIterator"] = haxe_iterators_ArrayKeyValueIterator;
haxe_iterators_ArrayKeyValueIterator.__name__ = "haxe.iterators.ArrayKeyValueIterator";
haxe_iterators_ArrayKeyValueIterator.prototype = {
	current: null
	,array: null
	,hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return { value : this.array[this.current], key : this.current++};
	}
	,__class__: haxe_iterators_ArrayKeyValueIterator
};
var haxe_iterators_DynamicAccessIterator = function(access) {
	this.access = access;
	this.keys = Reflect.fields(access);
	this.index = 0;
};
$hxClasses["haxe.iterators.DynamicAccessIterator"] = haxe_iterators_DynamicAccessIterator;
haxe_iterators_DynamicAccessIterator.__name__ = "haxe.iterators.DynamicAccessIterator";
haxe_iterators_DynamicAccessIterator.prototype = {
	access: null
	,keys: null
	,index: null
	,hasNext: function() {
		return this.index < this.keys.length;
	}
	,next: function() {
		return this.access[this.keys[this.index++]];
	}
	,__class__: haxe_iterators_DynamicAccessIterator
};
var haxe_iterators_DynamicAccessKeyValueIterator = function(access) {
	this.access = access;
	this.keys = Reflect.fields(access);
	this.index = 0;
};
$hxClasses["haxe.iterators.DynamicAccessKeyValueIterator"] = haxe_iterators_DynamicAccessKeyValueIterator;
haxe_iterators_DynamicAccessKeyValueIterator.__name__ = "haxe.iterators.DynamicAccessKeyValueIterator";
haxe_iterators_DynamicAccessKeyValueIterator.prototype = {
	access: null
	,keys: null
	,index: null
	,hasNext: function() {
		return this.index < this.keys.length;
	}
	,next: function() {
		var key = this.keys[this.index++];
		return { value : this.access[key], key : key};
	}
	,__class__: haxe_iterators_DynamicAccessKeyValueIterator
};
var haxe_iterators_HashMapKeyValueIterator = function(map) {
	this.map = map;
	this.keys = map.keys.iterator();
};
$hxClasses["haxe.iterators.HashMapKeyValueIterator"] = haxe_iterators_HashMapKeyValueIterator;
haxe_iterators_HashMapKeyValueIterator.__name__ = "haxe.iterators.HashMapKeyValueIterator";
haxe_iterators_HashMapKeyValueIterator.prototype = {
	map: null
	,keys: null
	,hasNext: function() {
		return this.keys.hasNext();
	}
	,next: function() {
		var key = this.keys.next();
		var _this = this.map.values;
		var key1 = key.hashCode();
		return { value : _this.h[key1], key : key};
	}
	,__class__: haxe_iterators_HashMapKeyValueIterator
};
var haxe_iterators_MapKeyValueIterator = function(map) {
	this.map = map;
	this.keys = map.keys();
};
$hxClasses["haxe.iterators.MapKeyValueIterator"] = haxe_iterators_MapKeyValueIterator;
haxe_iterators_MapKeyValueIterator.__name__ = "haxe.iterators.MapKeyValueIterator";
haxe_iterators_MapKeyValueIterator.prototype = {
	map: null
	,keys: null
	,hasNext: function() {
		return this.keys.hasNext();
	}
	,next: function() {
		var key = this.keys.next();
		return { value : this.map.get(key), key : key};
	}
	,__class__: haxe_iterators_MapKeyValueIterator
};
var haxe_iterators_RestIterator = function(args) {
	this.current = 0;
	this.args = args;
};
$hxClasses["haxe.iterators.RestIterator"] = haxe_iterators_RestIterator;
haxe_iterators_RestIterator.__name__ = "haxe.iterators.RestIterator";
haxe_iterators_RestIterator.prototype = {
	args: null
	,current: null
	,hasNext: function() {
		return this.current < this.args.length;
	}
	,next: function() {
		return this.args[this.current++];
	}
	,__class__: haxe_iterators_RestIterator
};
var haxe_iterators_RestKeyValueIterator = function(args) {
	this.current = 0;
	this.args = args;
};
$hxClasses["haxe.iterators.RestKeyValueIterator"] = haxe_iterators_RestKeyValueIterator;
haxe_iterators_RestKeyValueIterator.__name__ = "haxe.iterators.RestKeyValueIterator";
haxe_iterators_RestKeyValueIterator.prototype = {
	args: null
	,current: null
	,hasNext: function() {
		return this.current < this.args.length;
	}
	,next: function() {
		return { key : this.current, value : this.args[this.current++]};
	}
	,__class__: haxe_iterators_RestKeyValueIterator
};
var haxe_iterators_StringIterator = function(s) {
	this.offset = 0;
	this.s = s;
};
$hxClasses["haxe.iterators.StringIterator"] = haxe_iterators_StringIterator;
haxe_iterators_StringIterator.__name__ = "haxe.iterators.StringIterator";
haxe_iterators_StringIterator.prototype = {
	offset: null
	,s: null
	,hasNext: function() {
		return this.offset < this.s.length;
	}
	,next: function() {
		return this.s.charCodeAt(this.offset++);
	}
	,__class__: haxe_iterators_StringIterator
};
var haxe_iterators_StringIteratorUnicode = function(s) {
	this.offset = 0;
	this.s = s;
};
$hxClasses["haxe.iterators.StringIteratorUnicode"] = haxe_iterators_StringIteratorUnicode;
haxe_iterators_StringIteratorUnicode.__name__ = "haxe.iterators.StringIteratorUnicode";
haxe_iterators_StringIteratorUnicode.unicodeIterator = function(s) {
	return new haxe_iterators_StringIteratorUnicode(s);
};
haxe_iterators_StringIteratorUnicode.prototype = {
	offset: null
	,s: null
	,hasNext: function() {
		return this.offset < this.s.length;
	}
	,next: function() {
		var s = this.s;
		var index = this.offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			this.offset++;
		}
		return c1;
	}
	,__class__: haxe_iterators_StringIteratorUnicode
};
var haxe_iterators_StringKeyValueIterator = function(s) {
	this.offset = 0;
	this.s = s;
};
$hxClasses["haxe.iterators.StringKeyValueIterator"] = haxe_iterators_StringKeyValueIterator;
haxe_iterators_StringKeyValueIterator.__name__ = "haxe.iterators.StringKeyValueIterator";
haxe_iterators_StringKeyValueIterator.prototype = {
	offset: null
	,s: null
	,hasNext: function() {
		return this.offset < this.s.length;
	}
	,next: function() {
		return { key : this.offset, value : this.s.charCodeAt(this.offset++)};
	}
	,__class__: haxe_iterators_StringKeyValueIterator
};
var haxe_macro_ComplexTypeTools = function() { };
$hxClasses["haxe.macro.ComplexTypeTools"] = haxe_macro_ComplexTypeTools;
haxe_macro_ComplexTypeTools.__name__ = "haxe.macro.ComplexTypeTools";
haxe_macro_ComplexTypeTools.toString = function(c) {
	return new haxe_macro_Printer().printComplexType(c);
};
var haxe_macro_Message = $hxEnums["haxe.macro.Message"] = { __ename__:"haxe.macro.Message",__constructs__:null
	,Info: ($_=function(msg,pos) { return {_hx_index:0,msg:msg,pos:pos,__enum__:"haxe.macro.Message",toString:$estr}; },$_._hx_name="Info",$_.__params__ = ["msg","pos"],$_)
	,Warning: ($_=function(msg,pos) { return {_hx_index:1,msg:msg,pos:pos,__enum__:"haxe.macro.Message",toString:$estr}; },$_._hx_name="Warning",$_.__params__ = ["msg","pos"],$_)
};
haxe_macro_Message.__constructs__ = [haxe_macro_Message.Info,haxe_macro_Message.Warning];
haxe_macro_Message.__empty_constructs__ = [];
var haxe_macro_Context = function() { };
$hxClasses["haxe.macro.Context"] = haxe_macro_Context;
haxe_macro_Context.__name__ = "haxe.macro.Context";
var haxe_macro_StringLiteralKind = $hxEnums["haxe.macro.StringLiteralKind"] = { __ename__:"haxe.macro.StringLiteralKind",__constructs__:null
	,DoubleQuotes: {_hx_name:"DoubleQuotes",_hx_index:0,__enum__:"haxe.macro.StringLiteralKind",toString:$estr}
	,SingleQuotes: {_hx_name:"SingleQuotes",_hx_index:1,__enum__:"haxe.macro.StringLiteralKind",toString:$estr}
};
haxe_macro_StringLiteralKind.__constructs__ = [haxe_macro_StringLiteralKind.DoubleQuotes,haxe_macro_StringLiteralKind.SingleQuotes];
haxe_macro_StringLiteralKind.__empty_constructs__ = [haxe_macro_StringLiteralKind.DoubleQuotes,haxe_macro_StringLiteralKind.SingleQuotes];
var haxe_macro_Constant = $hxEnums["haxe.macro.Constant"] = { __ename__:"haxe.macro.Constant",__constructs__:null
	,CInt: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CInt",$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CFloat",$_.__params__ = ["f"],$_)
	,CString: ($_=function(s,kind) { return {_hx_index:2,s:s,kind:kind,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CString",$_.__params__ = ["s","kind"],$_)
	,CIdent: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CIdent",$_.__params__ = ["s"],$_)
	,CRegexp: ($_=function(r,opt) { return {_hx_index:4,r:r,opt:opt,__enum__:"haxe.macro.Constant",toString:$estr}; },$_._hx_name="CRegexp",$_.__params__ = ["r","opt"],$_)
};
haxe_macro_Constant.__constructs__ = [haxe_macro_Constant.CInt,haxe_macro_Constant.CFloat,haxe_macro_Constant.CString,haxe_macro_Constant.CIdent,haxe_macro_Constant.CRegexp];
haxe_macro_Constant.__empty_constructs__ = [];
var haxe_macro_Binop = $hxEnums["haxe.macro.Binop"] = { __ename__:"haxe.macro.Binop",__constructs__:null
	,OpAdd: {_hx_name:"OpAdd",_hx_index:0,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpMult: {_hx_name:"OpMult",_hx_index:1,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpDiv: {_hx_name:"OpDiv",_hx_index:2,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpSub: {_hx_name:"OpSub",_hx_index:3,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAssign: {_hx_name:"OpAssign",_hx_index:4,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpEq: {_hx_name:"OpEq",_hx_index:5,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpNotEq: {_hx_name:"OpNotEq",_hx_index:6,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpGt: {_hx_name:"OpGt",_hx_index:7,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpGte: {_hx_name:"OpGte",_hx_index:8,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpLt: {_hx_name:"OpLt",_hx_index:9,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpLte: {_hx_name:"OpLte",_hx_index:10,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAnd: {_hx_name:"OpAnd",_hx_index:11,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpOr: {_hx_name:"OpOr",_hx_index:12,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpXor: {_hx_name:"OpXor",_hx_index:13,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpBoolAnd: {_hx_name:"OpBoolAnd",_hx_index:14,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpBoolOr: {_hx_name:"OpBoolOr",_hx_index:15,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpShl: {_hx_name:"OpShl",_hx_index:16,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpShr: {_hx_name:"OpShr",_hx_index:17,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpUShr: {_hx_name:"OpUShr",_hx_index:18,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpMod: {_hx_name:"OpMod",_hx_index:19,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAssignOp: ($_=function(op) { return {_hx_index:20,op:op,__enum__:"haxe.macro.Binop",toString:$estr}; },$_._hx_name="OpAssignOp",$_.__params__ = ["op"],$_)
	,OpInterval: {_hx_name:"OpInterval",_hx_index:21,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpArrow: {_hx_name:"OpArrow",_hx_index:22,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpIn: {_hx_name:"OpIn",_hx_index:23,__enum__:"haxe.macro.Binop",toString:$estr}
};
haxe_macro_Binop.__constructs__ = [haxe_macro_Binop.OpAdd,haxe_macro_Binop.OpMult,haxe_macro_Binop.OpDiv,haxe_macro_Binop.OpSub,haxe_macro_Binop.OpAssign,haxe_macro_Binop.OpEq,haxe_macro_Binop.OpNotEq,haxe_macro_Binop.OpGt,haxe_macro_Binop.OpGte,haxe_macro_Binop.OpLt,haxe_macro_Binop.OpLte,haxe_macro_Binop.OpAnd,haxe_macro_Binop.OpOr,haxe_macro_Binop.OpXor,haxe_macro_Binop.OpBoolAnd,haxe_macro_Binop.OpBoolOr,haxe_macro_Binop.OpShl,haxe_macro_Binop.OpShr,haxe_macro_Binop.OpUShr,haxe_macro_Binop.OpMod,haxe_macro_Binop.OpAssignOp,haxe_macro_Binop.OpInterval,haxe_macro_Binop.OpArrow,haxe_macro_Binop.OpIn];
haxe_macro_Binop.__empty_constructs__ = [haxe_macro_Binop.OpAdd,haxe_macro_Binop.OpMult,haxe_macro_Binop.OpDiv,haxe_macro_Binop.OpSub,haxe_macro_Binop.OpAssign,haxe_macro_Binop.OpEq,haxe_macro_Binop.OpNotEq,haxe_macro_Binop.OpGt,haxe_macro_Binop.OpGte,haxe_macro_Binop.OpLt,haxe_macro_Binop.OpLte,haxe_macro_Binop.OpAnd,haxe_macro_Binop.OpOr,haxe_macro_Binop.OpXor,haxe_macro_Binop.OpBoolAnd,haxe_macro_Binop.OpBoolOr,haxe_macro_Binop.OpShl,haxe_macro_Binop.OpShr,haxe_macro_Binop.OpUShr,haxe_macro_Binop.OpMod,haxe_macro_Binop.OpInterval,haxe_macro_Binop.OpArrow,haxe_macro_Binop.OpIn];
var haxe_macro_Unop = $hxEnums["haxe.macro.Unop"] = { __ename__:"haxe.macro.Unop",__constructs__:null
	,OpIncrement: {_hx_name:"OpIncrement",_hx_index:0,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpDecrement: {_hx_name:"OpDecrement",_hx_index:1,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNot: {_hx_name:"OpNot",_hx_index:2,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNeg: {_hx_name:"OpNeg",_hx_index:3,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNegBits: {_hx_name:"OpNegBits",_hx_index:4,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpSpread: {_hx_name:"OpSpread",_hx_index:5,__enum__:"haxe.macro.Unop",toString:$estr}
};
haxe_macro_Unop.__constructs__ = [haxe_macro_Unop.OpIncrement,haxe_macro_Unop.OpDecrement,haxe_macro_Unop.OpNot,haxe_macro_Unop.OpNeg,haxe_macro_Unop.OpNegBits,haxe_macro_Unop.OpSpread];
haxe_macro_Unop.__empty_constructs__ = [haxe_macro_Unop.OpIncrement,haxe_macro_Unop.OpDecrement,haxe_macro_Unop.OpNot,haxe_macro_Unop.OpNeg,haxe_macro_Unop.OpNegBits,haxe_macro_Unop.OpSpread];
var haxe_macro_QuoteStatus = $hxEnums["haxe.macro.QuoteStatus"] = { __ename__:"haxe.macro.QuoteStatus",__constructs__:null
	,Unquoted: {_hx_name:"Unquoted",_hx_index:0,__enum__:"haxe.macro.QuoteStatus",toString:$estr}
	,Quoted: {_hx_name:"Quoted",_hx_index:1,__enum__:"haxe.macro.QuoteStatus",toString:$estr}
};
haxe_macro_QuoteStatus.__constructs__ = [haxe_macro_QuoteStatus.Unquoted,haxe_macro_QuoteStatus.Quoted];
haxe_macro_QuoteStatus.__empty_constructs__ = [haxe_macro_QuoteStatus.Unquoted,haxe_macro_QuoteStatus.Quoted];
var haxe_macro_FunctionKind = $hxEnums["haxe.macro.FunctionKind"] = { __ename__:"haxe.macro.FunctionKind",__constructs__:null
	,FAnonymous: {_hx_name:"FAnonymous",_hx_index:0,__enum__:"haxe.macro.FunctionKind",toString:$estr}
	,FNamed: ($_=function(name,inlined) { return {_hx_index:1,name:name,inlined:inlined,__enum__:"haxe.macro.FunctionKind",toString:$estr}; },$_._hx_name="FNamed",$_.__params__ = ["name","inlined"],$_)
	,FArrow: {_hx_name:"FArrow",_hx_index:2,__enum__:"haxe.macro.FunctionKind",toString:$estr}
};
haxe_macro_FunctionKind.__constructs__ = [haxe_macro_FunctionKind.FAnonymous,haxe_macro_FunctionKind.FNamed,haxe_macro_FunctionKind.FArrow];
haxe_macro_FunctionKind.__empty_constructs__ = [haxe_macro_FunctionKind.FAnonymous,haxe_macro_FunctionKind.FArrow];
var haxe_macro_ExprDef = $hxEnums["haxe.macro.ExprDef"] = { __ename__:"haxe.macro.ExprDef",__constructs__:null
	,EConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EConst",$_.__params__ = ["c"],$_)
	,EArray: ($_=function(e1,e2) { return {_hx_index:1,e1:e1,e2:e2,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EArray",$_.__params__ = ["e1","e2"],$_)
	,EBinop: ($_=function(op,e1,e2) { return {_hx_index:2,op:op,e1:e1,e2:e2,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EBinop",$_.__params__ = ["op","e1","e2"],$_)
	,EField: ($_=function(e,field) { return {_hx_index:3,e:e,field:field,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EField",$_.__params__ = ["e","field"],$_)
	,EParenthesis: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EParenthesis",$_.__params__ = ["e"],$_)
	,EObjectDecl: ($_=function(fields) { return {_hx_index:5,fields:fields,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EObjectDecl",$_.__params__ = ["fields"],$_)
	,EArrayDecl: ($_=function(values) { return {_hx_index:6,values:values,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EArrayDecl",$_.__params__ = ["values"],$_)
	,ECall: ($_=function(e,params) { return {_hx_index:7,e:e,params:params,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ECall",$_.__params__ = ["e","params"],$_)
	,ENew: ($_=function(t,params) { return {_hx_index:8,t:t,params:params,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ENew",$_.__params__ = ["t","params"],$_)
	,EUnop: ($_=function(op,postFix,e) { return {_hx_index:9,op:op,postFix:postFix,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EUnop",$_.__params__ = ["op","postFix","e"],$_)
	,EVars: ($_=function(vars) { return {_hx_index:10,vars:vars,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EVars",$_.__params__ = ["vars"],$_)
	,EFunction: ($_=function(kind,f) { return {_hx_index:11,kind:kind,f:f,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EFunction",$_.__params__ = ["kind","f"],$_)
	,EBlock: ($_=function(exprs) { return {_hx_index:12,exprs:exprs,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EBlock",$_.__params__ = ["exprs"],$_)
	,EFor: ($_=function(it,expr) { return {_hx_index:13,it:it,expr:expr,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EFor",$_.__params__ = ["it","expr"],$_)
	,EIf: ($_=function(econd,eif,eelse) { return {_hx_index:14,econd:econd,eif:eif,eelse:eelse,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EIf",$_.__params__ = ["econd","eif","eelse"],$_)
	,EWhile: ($_=function(econd,e,normalWhile) { return {_hx_index:15,econd:econd,e:e,normalWhile:normalWhile,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EWhile",$_.__params__ = ["econd","e","normalWhile"],$_)
	,ESwitch: ($_=function(e,cases,edef) { return {_hx_index:16,e:e,cases:cases,edef:edef,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ESwitch",$_.__params__ = ["e","cases","edef"],$_)
	,ETry: ($_=function(e,catches) { return {_hx_index:17,e:e,catches:catches,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ETry",$_.__params__ = ["e","catches"],$_)
	,EReturn: ($_=function(e) { return {_hx_index:18,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EReturn",$_.__params__ = ["e"],$_)
	,EBreak: {_hx_name:"EBreak",_hx_index:19,__enum__:"haxe.macro.ExprDef",toString:$estr}
	,EContinue: {_hx_name:"EContinue",_hx_index:20,__enum__:"haxe.macro.ExprDef",toString:$estr}
	,EUntyped: ($_=function(e) { return {_hx_index:21,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EUntyped",$_.__params__ = ["e"],$_)
	,EThrow: ($_=function(e) { return {_hx_index:22,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EThrow",$_.__params__ = ["e"],$_)
	,ECast: ($_=function(e,t) { return {_hx_index:23,e:e,t:t,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ECast",$_.__params__ = ["e","t"],$_)
	,EDisplay: ($_=function(e,displayKind) { return {_hx_index:24,e:e,displayKind:displayKind,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EDisplay",$_.__params__ = ["e","displayKind"],$_)
	,EDisplayNew: ($_=function(t) { return {_hx_index:25,t:t,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EDisplayNew",$_.__params__ = ["t"],$_)
	,ETernary: ($_=function(econd,eif,eelse) { return {_hx_index:26,econd:econd,eif:eif,eelse:eelse,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ETernary",$_.__params__ = ["econd","eif","eelse"],$_)
	,ECheckType: ($_=function(e,t) { return {_hx_index:27,e:e,t:t,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="ECheckType",$_.__params__ = ["e","t"],$_)
	,EMeta: ($_=function(s,e) { return {_hx_index:28,s:s,e:e,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EMeta",$_.__params__ = ["s","e"],$_)
	,EIs: ($_=function(e,t) { return {_hx_index:29,e:e,t:t,__enum__:"haxe.macro.ExprDef",toString:$estr}; },$_._hx_name="EIs",$_.__params__ = ["e","t"],$_)
};
haxe_macro_ExprDef.__constructs__ = [haxe_macro_ExprDef.EConst,haxe_macro_ExprDef.EArray,haxe_macro_ExprDef.EBinop,haxe_macro_ExprDef.EField,haxe_macro_ExprDef.EParenthesis,haxe_macro_ExprDef.EObjectDecl,haxe_macro_ExprDef.EArrayDecl,haxe_macro_ExprDef.ECall,haxe_macro_ExprDef.ENew,haxe_macro_ExprDef.EUnop,haxe_macro_ExprDef.EVars,haxe_macro_ExprDef.EFunction,haxe_macro_ExprDef.EBlock,haxe_macro_ExprDef.EFor,haxe_macro_ExprDef.EIf,haxe_macro_ExprDef.EWhile,haxe_macro_ExprDef.ESwitch,haxe_macro_ExprDef.ETry,haxe_macro_ExprDef.EReturn,haxe_macro_ExprDef.EBreak,haxe_macro_ExprDef.EContinue,haxe_macro_ExprDef.EUntyped,haxe_macro_ExprDef.EThrow,haxe_macro_ExprDef.ECast,haxe_macro_ExprDef.EDisplay,haxe_macro_ExprDef.EDisplayNew,haxe_macro_ExprDef.ETernary,haxe_macro_ExprDef.ECheckType,haxe_macro_ExprDef.EMeta,haxe_macro_ExprDef.EIs];
haxe_macro_ExprDef.__empty_constructs__ = [haxe_macro_ExprDef.EBreak,haxe_macro_ExprDef.EContinue];
var haxe_macro_DisplayKind = $hxEnums["haxe.macro.DisplayKind"] = { __ename__:"haxe.macro.DisplayKind",__constructs__:null
	,DKCall: {_hx_name:"DKCall",_hx_index:0,__enum__:"haxe.macro.DisplayKind",toString:$estr}
	,DKDot: {_hx_name:"DKDot",_hx_index:1,__enum__:"haxe.macro.DisplayKind",toString:$estr}
	,DKStructure: {_hx_name:"DKStructure",_hx_index:2,__enum__:"haxe.macro.DisplayKind",toString:$estr}
	,DKMarked: {_hx_name:"DKMarked",_hx_index:3,__enum__:"haxe.macro.DisplayKind",toString:$estr}
	,DKPattern: ($_=function(outermost) { return {_hx_index:4,outermost:outermost,__enum__:"haxe.macro.DisplayKind",toString:$estr}; },$_._hx_name="DKPattern",$_.__params__ = ["outermost"],$_)
};
haxe_macro_DisplayKind.__constructs__ = [haxe_macro_DisplayKind.DKCall,haxe_macro_DisplayKind.DKDot,haxe_macro_DisplayKind.DKStructure,haxe_macro_DisplayKind.DKMarked,haxe_macro_DisplayKind.DKPattern];
haxe_macro_DisplayKind.__empty_constructs__ = [haxe_macro_DisplayKind.DKCall,haxe_macro_DisplayKind.DKDot,haxe_macro_DisplayKind.DKStructure,haxe_macro_DisplayKind.DKMarked];
var haxe_macro_ComplexType = $hxEnums["haxe.macro.ComplexType"] = { __ename__:"haxe.macro.ComplexType",__constructs__:null
	,TPath: ($_=function(p) { return {_hx_index:0,p:p,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TPath",$_.__params__ = ["p"],$_)
	,TFunction: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TFunction",$_.__params__ = ["args","ret"],$_)
	,TAnonymous: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TAnonymous",$_.__params__ = ["fields"],$_)
	,TParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TParent",$_.__params__ = ["t"],$_)
	,TExtend: ($_=function(p,fields) { return {_hx_index:4,p:p,fields:fields,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TExtend",$_.__params__ = ["p","fields"],$_)
	,TOptional: ($_=function(t) { return {_hx_index:5,t:t,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TOptional",$_.__params__ = ["t"],$_)
	,TNamed: ($_=function(n,t) { return {_hx_index:6,n:n,t:t,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TNamed",$_.__params__ = ["n","t"],$_)
	,TIntersection: ($_=function(tl) { return {_hx_index:7,tl:tl,__enum__:"haxe.macro.ComplexType",toString:$estr}; },$_._hx_name="TIntersection",$_.__params__ = ["tl"],$_)
};
haxe_macro_ComplexType.__constructs__ = [haxe_macro_ComplexType.TPath,haxe_macro_ComplexType.TFunction,haxe_macro_ComplexType.TAnonymous,haxe_macro_ComplexType.TParent,haxe_macro_ComplexType.TExtend,haxe_macro_ComplexType.TOptional,haxe_macro_ComplexType.TNamed,haxe_macro_ComplexType.TIntersection];
haxe_macro_ComplexType.__empty_constructs__ = [];
var haxe_macro_TypeParam = $hxEnums["haxe.macro.TypeParam"] = { __ename__:"haxe.macro.TypeParam",__constructs__:null
	,TPType: ($_=function(t) { return {_hx_index:0,t:t,__enum__:"haxe.macro.TypeParam",toString:$estr}; },$_._hx_name="TPType",$_.__params__ = ["t"],$_)
	,TPExpr: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"haxe.macro.TypeParam",toString:$estr}; },$_._hx_name="TPExpr",$_.__params__ = ["e"],$_)
};
haxe_macro_TypeParam.__constructs__ = [haxe_macro_TypeParam.TPType,haxe_macro_TypeParam.TPExpr];
haxe_macro_TypeParam.__empty_constructs__ = [];
var haxe_macro_Access = $hxEnums["haxe.macro.Access"] = { __ename__:"haxe.macro.Access",__constructs__:null
	,APublic: {_hx_name:"APublic",_hx_index:0,__enum__:"haxe.macro.Access",toString:$estr}
	,APrivate: {_hx_name:"APrivate",_hx_index:1,__enum__:"haxe.macro.Access",toString:$estr}
	,AStatic: {_hx_name:"AStatic",_hx_index:2,__enum__:"haxe.macro.Access",toString:$estr}
	,AOverride: {_hx_name:"AOverride",_hx_index:3,__enum__:"haxe.macro.Access",toString:$estr}
	,ADynamic: {_hx_name:"ADynamic",_hx_index:4,__enum__:"haxe.macro.Access",toString:$estr}
	,AInline: {_hx_name:"AInline",_hx_index:5,__enum__:"haxe.macro.Access",toString:$estr}
	,AMacro: {_hx_name:"AMacro",_hx_index:6,__enum__:"haxe.macro.Access",toString:$estr}
	,AFinal: {_hx_name:"AFinal",_hx_index:7,__enum__:"haxe.macro.Access",toString:$estr}
	,AExtern: {_hx_name:"AExtern",_hx_index:8,__enum__:"haxe.macro.Access",toString:$estr}
	,AAbstract: {_hx_name:"AAbstract",_hx_index:9,__enum__:"haxe.macro.Access",toString:$estr}
	,AOverload: {_hx_name:"AOverload",_hx_index:10,__enum__:"haxe.macro.Access",toString:$estr}
};
haxe_macro_Access.__constructs__ = [haxe_macro_Access.APublic,haxe_macro_Access.APrivate,haxe_macro_Access.AStatic,haxe_macro_Access.AOverride,haxe_macro_Access.ADynamic,haxe_macro_Access.AInline,haxe_macro_Access.AMacro,haxe_macro_Access.AFinal,haxe_macro_Access.AExtern,haxe_macro_Access.AAbstract,haxe_macro_Access.AOverload];
haxe_macro_Access.__empty_constructs__ = [haxe_macro_Access.APublic,haxe_macro_Access.APrivate,haxe_macro_Access.AStatic,haxe_macro_Access.AOverride,haxe_macro_Access.ADynamic,haxe_macro_Access.AInline,haxe_macro_Access.AMacro,haxe_macro_Access.AFinal,haxe_macro_Access.AExtern,haxe_macro_Access.AAbstract,haxe_macro_Access.AOverload];
var haxe_macro_FieldType = $hxEnums["haxe.macro.FieldType"] = { __ename__:"haxe.macro.FieldType",__constructs__:null
	,FVar: ($_=function(t,e) { return {_hx_index:0,t:t,e:e,__enum__:"haxe.macro.FieldType",toString:$estr}; },$_._hx_name="FVar",$_.__params__ = ["t","e"],$_)
	,FFun: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"haxe.macro.FieldType",toString:$estr}; },$_._hx_name="FFun",$_.__params__ = ["f"],$_)
	,FProp: ($_=function(get,set,t,e) { return {_hx_index:2,get:get,set:set,t:t,e:e,__enum__:"haxe.macro.FieldType",toString:$estr}; },$_._hx_name="FProp",$_.__params__ = ["get","set","t","e"],$_)
};
haxe_macro_FieldType.__constructs__ = [haxe_macro_FieldType.FVar,haxe_macro_FieldType.FFun,haxe_macro_FieldType.FProp];
haxe_macro_FieldType.__empty_constructs__ = [];
var haxe_macro_TypeDefKind = $hxEnums["haxe.macro.TypeDefKind"] = { __ename__:"haxe.macro.TypeDefKind",__constructs__:null
	,TDEnum: {_hx_name:"TDEnum",_hx_index:0,__enum__:"haxe.macro.TypeDefKind",toString:$estr}
	,TDStructure: {_hx_name:"TDStructure",_hx_index:1,__enum__:"haxe.macro.TypeDefKind",toString:$estr}
	,TDClass: ($_=function(superClass,interfaces,isInterface,isFinal,isAbstract) { return {_hx_index:2,superClass:superClass,interfaces:interfaces,isInterface:isInterface,isFinal:isFinal,isAbstract:isAbstract,__enum__:"haxe.macro.TypeDefKind",toString:$estr}; },$_._hx_name="TDClass",$_.__params__ = ["superClass","interfaces","isInterface","isFinal","isAbstract"],$_)
	,TDAlias: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"haxe.macro.TypeDefKind",toString:$estr}; },$_._hx_name="TDAlias",$_.__params__ = ["t"],$_)
	,TDAbstract: ($_=function(tthis,from,to) { return {_hx_index:4,tthis:tthis,from:from,to:to,__enum__:"haxe.macro.TypeDefKind",toString:$estr}; },$_._hx_name="TDAbstract",$_.__params__ = ["tthis","from","to"],$_)
	,TDField: ($_=function(kind,access) { return {_hx_index:5,kind:kind,access:access,__enum__:"haxe.macro.TypeDefKind",toString:$estr}; },$_._hx_name="TDField",$_.__params__ = ["kind","access"],$_)
};
haxe_macro_TypeDefKind.__constructs__ = [haxe_macro_TypeDefKind.TDEnum,haxe_macro_TypeDefKind.TDStructure,haxe_macro_TypeDefKind.TDClass,haxe_macro_TypeDefKind.TDAlias,haxe_macro_TypeDefKind.TDAbstract,haxe_macro_TypeDefKind.TDField];
haxe_macro_TypeDefKind.__empty_constructs__ = [haxe_macro_TypeDefKind.TDEnum,haxe_macro_TypeDefKind.TDStructure];
var haxe_macro_Error = function(message,pos,previous) {
	haxe_Exception.call(this,message,previous);
	this.pos = pos;
	this.__skipStack++;
};
$hxClasses["haxe.macro.Error"] = haxe_macro_Error;
haxe_macro_Error.__name__ = "haxe.macro.Error";
haxe_macro_Error.__super__ = haxe_Exception;
haxe_macro_Error.prototype = $extend(haxe_Exception.prototype,{
	pos: null
	,__class__: haxe_macro_Error
});
var haxe_macro_ImportMode = $hxEnums["haxe.macro.ImportMode"] = { __ename__:"haxe.macro.ImportMode",__constructs__:null
	,INormal: {_hx_name:"INormal",_hx_index:0,__enum__:"haxe.macro.ImportMode",toString:$estr}
	,IAsName: ($_=function(alias) { return {_hx_index:1,alias:alias,__enum__:"haxe.macro.ImportMode",toString:$estr}; },$_._hx_name="IAsName",$_.__params__ = ["alias"],$_)
	,IAll: {_hx_name:"IAll",_hx_index:2,__enum__:"haxe.macro.ImportMode",toString:$estr}
};
haxe_macro_ImportMode.__constructs__ = [haxe_macro_ImportMode.INormal,haxe_macro_ImportMode.IAsName,haxe_macro_ImportMode.IAll];
haxe_macro_ImportMode.__empty_constructs__ = [haxe_macro_ImportMode.INormal,haxe_macro_ImportMode.IAll];
var haxe_macro_ExprTools = function() { };
$hxClasses["haxe.macro.ExprTools"] = haxe_macro_ExprTools;
haxe_macro_ExprTools.__name__ = "haxe.macro.ExprTools";
haxe_macro_ExprTools.toString = function(e) {
	return new haxe_macro_Printer().printExpr(e);
};
haxe_macro_ExprTools.iter = function(e,f) {
	var _g = e.expr;
	switch(_g._hx_index) {
	case 0:
		break;
	case 1:
		f(_g.e1);
		f(_g.e2);
		break;
	case 2:
		f(_g.e1);
		f(_g.e2);
		break;
	case 3:
		f(_g.e);
		break;
	case 4:
		f(_g.e);
		break;
	case 5:
		var _g1 = _g.fields;
		var _g2 = 0;
		while(_g2 < _g1.length) {
			var fd = _g1[_g2];
			++_g2;
			f(fd.expr);
		}
		break;
	case 6:
		haxe_macro_ExprArrayTools.iter(_g.values,f);
		break;
	case 7:
		f(_g.e);
		haxe_macro_ExprArrayTools.iter(_g.params,f);
		break;
	case 8:
		haxe_macro_ExprArrayTools.iter(_g.params,f);
		break;
	case 9:
		f(_g.e);
		break;
	case 10:
		var _g1 = _g.vars;
		var _g2 = 0;
		while(_g2 < _g1.length) {
			var v = _g1[_g2];
			++_g2;
			var e = v.expr;
			if(e != null) {
				f(e);
			}
		}
		break;
	case 11:
		var _g1 = _g.f;
		var _g2 = 0;
		var _g3 = _g1.args;
		while(_g2 < _g3.length) {
			var arg = _g3[_g2];
			++_g2;
			var e = arg.value;
			if(e != null) {
				f(e);
			}
		}
		var e = _g1.expr;
		if(e != null) {
			f(e);
		}
		break;
	case 12:
		haxe_macro_ExprArrayTools.iter(_g.exprs,f);
		break;
	case 13:
		f(_g.it);
		f(_g.expr);
		break;
	case 14:
		var _g1 = _g.eelse;
		f(_g.econd);
		f(_g.eif);
		if(_g1 != null) {
			f(_g1);
		}
		break;
	case 15:
		f(_g.econd);
		f(_g.e);
		break;
	case 16:
		var _g1 = _g.cases;
		var _g2 = _g.edef;
		f(_g.e);
		var _g3 = 0;
		while(_g3 < _g1.length) {
			var c = _g1[_g3];
			++_g3;
			haxe_macro_ExprArrayTools.iter(c.values,f);
			var e = c.guard;
			if(e != null) {
				f(e);
			}
			var e1 = c.expr;
			if(e1 != null) {
				f(e1);
			}
		}
		if(_g2 != null && _g2.expr != null) {
			f(_g2);
		}
		break;
	case 17:
		var _g1 = _g.catches;
		f(_g.e);
		var _g2 = 0;
		while(_g2 < _g1.length) {
			var c = _g1[_g2];
			++_g2;
			f(c.expr);
		}
		break;
	case 18:
		var _g1 = _g.e;
		if(_g1 != null) {
			f(_g1);
		}
		break;
	case 19:case 20:
		break;
	case 21:
		f(_g.e);
		break;
	case 22:
		f(_g.e);
		break;
	case 23:
		f(_g.e);
		break;
	case 24:
		f(_g.e);
		break;
	case 25:
		break;
	case 26:
		var _g1 = _g.eelse;
		f(_g.econd);
		f(_g.eif);
		if(_g1 != null) {
			f(_g1);
		}
		break;
	case 27:
		f(_g.e);
		break;
	case 28:
		f(_g.e);
		break;
	case 29:
		f(_g.e);
		break;
	}
};
haxe_macro_ExprTools.map = function(e,f) {
	var e1 = e.pos;
	var _g = e.expr;
	var tmp;
	switch(_g._hx_index) {
	case 0:
		tmp = e.expr;
		break;
	case 1:
		tmp = haxe_macro_ExprDef.EArray(f(_g.e1),f(_g.e2));
		break;
	case 2:
		tmp = haxe_macro_ExprDef.EBinop(_g.op,f(_g.e1),f(_g.e2));
		break;
	case 3:
		tmp = haxe_macro_ExprDef.EField(f(_g.e),_g.field);
		break;
	case 4:
		tmp = haxe_macro_ExprDef.EParenthesis(f(_g.e));
		break;
	case 5:
		var _g1 = _g.fields;
		var ret = [];
		var _g2 = 0;
		while(_g2 < _g1.length) {
			var field = _g1[_g2];
			++_g2;
			ret.push({ field : field.field, expr : f(field.expr), quotes : field.quotes});
		}
		tmp = haxe_macro_ExprDef.EObjectDecl(ret);
		break;
	case 6:
		tmp = haxe_macro_ExprDef.EArrayDecl(haxe_macro_ExprArrayTools.map(_g.values,f));
		break;
	case 7:
		tmp = haxe_macro_ExprDef.ECall(f(_g.e),haxe_macro_ExprArrayTools.map(_g.params,f));
		break;
	case 8:
		tmp = haxe_macro_ExprDef.ENew(_g.t,haxe_macro_ExprArrayTools.map(_g.params,f));
		break;
	case 9:
		tmp = haxe_macro_ExprDef.EUnop(_g.op,_g.postFix,f(_g.e));
		break;
	case 10:
		var _g1 = _g.vars;
		var ret = [];
		var _g2 = 0;
		while(_g2 < _g1.length) {
			var v = _g1[_g2];
			++_g2;
			var e2 = v.expr;
			var v2 = { name : v.name, type : v.type, expr : e2 == null ? null : f(e2)};
			if(v.isFinal != null) {
				v2.isFinal = v.isFinal;
			}
			ret.push(v2);
		}
		tmp = haxe_macro_ExprDef.EVars(ret);
		break;
	case 11:
		var _g1 = _g.kind;
		var _g2 = _g.f;
		var ret = [];
		var _g3 = 0;
		var _g4 = _g2.args;
		while(_g3 < _g4.length) {
			var arg = _g4[_g3];
			++_g3;
			var e2 = arg.value;
			ret.push({ name : arg.name, opt : arg.opt, type : arg.type, value : e2 == null ? null : f(e2)});
		}
		tmp = haxe_macro_ExprDef.EFunction(_g1,{ args : ret, ret : _g2.ret, params : _g2.params, expr : f(_g2.expr)});
		break;
	case 12:
		tmp = haxe_macro_ExprDef.EBlock(haxe_macro_ExprArrayTools.map(_g.exprs,f));
		break;
	case 13:
		tmp = haxe_macro_ExprDef.EFor(f(_g.it),f(_g.expr));
		break;
	case 14:
		var _g1 = _g.eelse;
		tmp = haxe_macro_ExprDef.EIf(f(_g.econd),f(_g.eif),_g1 == null ? null : f(_g1));
		break;
	case 15:
		tmp = haxe_macro_ExprDef.EWhile(f(_g.econd),f(_g.e),_g.normalWhile);
		break;
	case 16:
		var _g1 = _g.e;
		var _g2 = _g.cases;
		var _g3 = _g.edef;
		var ret = [];
		var _g4 = 0;
		while(_g4 < _g2.length) {
			var c = _g2[_g4];
			++_g4;
			var e2 = c.expr;
			var tmp1 = e2 == null ? null : f(e2);
			var e3 = c.guard;
			ret.push({ expr : tmp1, guard : e3 == null ? null : f(e3), values : haxe_macro_ExprArrayTools.map(c.values,f)});
		}
		tmp = haxe_macro_ExprDef.ESwitch(f(_g1),ret,_g3 == null || _g3.expr == null ? _g3 : f(_g3));
		break;
	case 17:
		var _g1 = _g.e;
		var _g2 = _g.catches;
		var ret = [];
		var _g3 = 0;
		while(_g3 < _g2.length) {
			var c = _g2[_g3];
			++_g3;
			ret.push({ name : c.name, type : c.type, expr : f(c.expr)});
		}
		tmp = haxe_macro_ExprDef.ETry(f(_g1),ret);
		break;
	case 18:
		var _g1 = _g.e;
		tmp = haxe_macro_ExprDef.EReturn(_g1 == null ? null : f(_g1));
		break;
	case 19:case 20:
		tmp = e.expr;
		break;
	case 21:
		tmp = haxe_macro_ExprDef.EUntyped(f(_g.e));
		break;
	case 22:
		tmp = haxe_macro_ExprDef.EThrow(f(_g.e));
		break;
	case 23:
		tmp = haxe_macro_ExprDef.ECast(f(_g.e),_g.t);
		break;
	case 24:
		tmp = haxe_macro_ExprDef.EDisplay(f(_g.e),_g.displayKind);
		break;
	case 25:
		tmp = e.expr;
		break;
	case 26:
		tmp = haxe_macro_ExprDef.ETernary(f(_g.econd),f(_g.eif),f(_g.eelse));
		break;
	case 27:
		tmp = haxe_macro_ExprDef.ECheckType(f(_g.e),_g.t);
		break;
	case 28:
		tmp = haxe_macro_ExprDef.EMeta(_g.s,f(_g.e));
		break;
	case 29:
		tmp = haxe_macro_ExprDef.EIs(f(_g.e),_g.t);
		break;
	}
	return { pos : e1, expr : tmp};
};
haxe_macro_ExprTools.getValue = function(e) {
	while(true) {
		var _g = e.expr;
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.c;
			switch(_g1._hx_index) {
			case 0:
				return Std.parseInt(_g1.v);
			case 1:
				return parseFloat(_g1.f);
			case 2:
				return _g1.s;
			case 3:
				switch(_g1.s) {
				case "false":
					return false;
				case "null":
					return null;
				case "true":
					return true;
				default:
					throw haxe_Exception.thrown("Unsupported expression: " + Std.string(e));
				}
				break;
			default:
				throw haxe_Exception.thrown("Unsupported expression: " + Std.string(e));
			}
			break;
		case 2:
			var e1 = haxe_macro_ExprTools.getValue(_g.e1);
			var e2 = haxe_macro_ExprTools.getValue(_g.e2);
			switch(_g.op._hx_index) {
			case 0:
				return e1 + e2;
			case 1:
				return e1 * e2;
			case 2:
				return e1 / e2;
			case 3:
				return e1 - e2;
			case 5:
				return e1 == e2;
			case 6:
				return e1 != e2;
			case 7:
				return e1 > e2;
			case 8:
				return e1 >= e2;
			case 9:
				return e1 < e2;
			case 10:
				return e1 <= e2;
			case 11:
				return e1 & e2;
			case 12:
				return e1 | e2;
			case 13:
				return e1 ^ e2;
			case 14:
				if(e1) {
					return e2;
				} else {
					return false;
				}
				break;
			case 15:
				if(!e1) {
					return e2;
				} else {
					return true;
				}
				break;
			case 16:
				return e1 << e2;
			case 17:
				return e1 >> e2;
			case 18:
				return e1 >>> e2;
			case 19:
				return e1 % e2;
			default:
				throw haxe_Exception.thrown("Unsupported expression: " + Std.string(e));
			}
			break;
		case 4:
			e = _g.e;
			continue;
		case 5:
			var _g2 = _g.fields;
			var obj = { };
			var _g3 = 0;
			while(_g3 < _g2.length) {
				var field = _g2[_g3];
				++_g3;
				obj[field.field] = haxe_macro_ExprTools.getValue(field.expr);
			}
			return obj;
		case 6:
			var _g4 = _g.values;
			var f = haxe_macro_ExprTools.getValue;
			var result = new Array(_g4.length);
			var _g5 = 0;
			var _g6 = _g4.length;
			while(_g5 < _g6) {
				var i = _g5++;
				result[i] = f(_g4[i]);
			}
			return result;
		case 9:
			if(_g.postFix == false) {
				var e11 = haxe_macro_ExprTools.getValue(_g.e);
				switch(_g.op._hx_index) {
				case 2:
					return !e11;
				case 3:
					return -e11;
				case 4:
					return ~e11;
				default:
					throw haxe_Exception.thrown("Unsupported expression: " + Std.string(e));
				}
			} else {
				throw haxe_Exception.thrown("Unsupported expression: " + Std.string(e));
			}
			break;
		case 14:
			var _g7 = _g.eelse;
			if(_g7 == null) {
				throw haxe_Exception.thrown("If statements only have a value if the else clause is defined");
			} else {
				var econd = haxe_macro_ExprTools.getValue(_g.econd);
				if(econd) {
					e = _g.eif;
					continue;
				} else {
					e = _g7;
					continue;
				}
			}
			break;
		case 21:
			e = _g.e;
			continue;
		case 26:
			var _g8 = _g.eelse;
			if(_g8 == null) {
				throw haxe_Exception.thrown("If statements only have a value if the else clause is defined");
			} else {
				var econd1 = haxe_macro_ExprTools.getValue(_g.econd);
				if(econd1) {
					e = _g.eif;
					continue;
				} else {
					e = _g8;
					continue;
				}
			}
			break;
		case 28:
			e = _g.e;
			continue;
		default:
			throw haxe_Exception.thrown("Unsupported expression: " + Std.string(e));
		}
	}
};
haxe_macro_ExprTools.opt = function(e,f) {
	if(e == null) {
		return null;
	} else {
		return f(e);
	}
};
haxe_macro_ExprTools.opt2 = function(e,f) {
	if(e != null) {
		f(e);
	}
};
var haxe_macro_ExprArrayTools = function() { };
$hxClasses["haxe.macro.ExprArrayTools"] = haxe_macro_ExprArrayTools;
haxe_macro_ExprArrayTools.__name__ = "haxe.macro.ExprArrayTools";
haxe_macro_ExprArrayTools.map = function(el,f) {
	var ret = [];
	var _g = 0;
	while(_g < el.length) {
		var e = el[_g];
		++_g;
		ret.push(f(e));
	}
	return ret;
};
haxe_macro_ExprArrayTools.iter = function(el,f) {
	var _g = 0;
	while(_g < el.length) {
		var e = el[_g];
		++_g;
		f(e);
	}
};
var haxe_macro_MacroStringTools = function() { };
$hxClasses["haxe.macro.MacroStringTools"] = haxe_macro_MacroStringTools;
haxe_macro_MacroStringTools.__name__ = "haxe.macro.MacroStringTools";
haxe_macro_MacroStringTools.toFieldExpr = function(sl,pos) {
	if(pos == null) {
		return Lambda.fold(sl,function(s,e) {
			if(e == null) {
				return { expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent(s)), pos : { file : "C:\\Development\\HaxeToolkit\\haxe\\std/haxe/macro/MacroStringTools.hx", min : 2376, max : 2379}};
			} else {
				return { expr : haxe_macro_ExprDef.EField(e,s), pos : { file : "C:\\Development\\HaxeToolkit\\haxe\\std/haxe/macro/MacroStringTools.hx", min : 2390, max : 2395}};
			}
		},null);
	}
	var e = null;
	var _g = 0;
	while(_g < sl.length) {
		var v = sl[_g];
		++_g;
		if(e == null) {
			e = { expr : haxe_macro_ExprDef.EConst(haxe_macro_Constant.CIdent(v)), pos : pos};
		} else {
			e = { expr : haxe_macro_ExprDef.EField(e,v), pos : pos};
		}
	}
	return e;
};
haxe_macro_MacroStringTools.toDotPath = function(pack,name) {
	if(pack.length == 0) {
		return name;
	} else {
		return pack.join(".") + "." + name;
	}
};
haxe_macro_MacroStringTools.toComplex = function(path) {
	var pack = path.split(".");
	return haxe_macro_ComplexType.TPath({ pack : pack, name : pack.pop(), params : []});
};
var haxe_macro_PositionTools = function() { };
$hxClasses["haxe.macro.PositionTools"] = haxe_macro_PositionTools;
haxe_macro_PositionTools.__name__ = "haxe.macro.PositionTools";
haxe_macro_PositionTools.getInfos = function(p) {
	return p;
};
haxe_macro_PositionTools.make = function(inf) {
	return inf;
};
var haxe_macro_Printer = function(tabString) {
	if(tabString == null) {
		tabString = "\t";
	}
	this.tabs = "";
	this.tabString = tabString;
};
$hxClasses["haxe.macro.Printer"] = haxe_macro_Printer;
haxe_macro_Printer.__name__ = "haxe.macro.Printer";
haxe_macro_Printer.prototype = {
	tabs: null
	,tabString: null
	,printUnop: function(op) {
		switch(op._hx_index) {
		case 0:
			return "++";
		case 1:
			return "--";
		case 2:
			return "!";
		case 3:
			return "-";
		case 4:
			return "~";
		case 5:
			return "...";
		}
	}
	,printBinop: function(op) {
		switch(op._hx_index) {
		case 0:
			return "+";
		case 1:
			return "*";
		case 2:
			return "/";
		case 3:
			return "-";
		case 4:
			return "=";
		case 5:
			return "==";
		case 6:
			return "!=";
		case 7:
			return ">";
		case 8:
			return ">=";
		case 9:
			return "<";
		case 10:
			return "<=";
		case 11:
			return "&";
		case 12:
			return "|";
		case 13:
			return "^";
		case 14:
			return "&&";
		case 15:
			return "||";
		case 16:
			return "<<";
		case 17:
			return ">>";
		case 18:
			return ">>>";
		case 19:
			return "%";
		case 20:
			return this.printBinop(op.op) + "=";
		case 21:
			return "...";
		case 22:
			return "=>";
		case 23:
			return "in";
		}
	}
	,escapeString: function(s,delim) {
		return delim + StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(s,"\n","\\n"),"\t","\\t"),"\r","\\r"),"'","\\'"),"\"","\\\"") + delim;
	}
	,printFormatString: function(s) {
		return this.escapeString(s,"'");
	}
	,printString: function(s) {
		return this.escapeString(s,"\"");
	}
	,printConstant: function(c) {
		switch(c._hx_index) {
		case 0:
			return c.v;
		case 1:
			return c.f;
		case 2:
			var _g = c.s;
			var _g1 = c.kind;
			if(_g1 == null) {
				return this.printString(_g);
			} else if(_g1._hx_index == 1) {
				return this.printFormatString(_g);
			} else {
				return this.printString(_g);
			}
			break;
		case 3:
			return c.s;
		case 4:
			return "~/" + c.r + "/" + c.opt;
		}
	}
	,printTypeParam: function(param) {
		switch(param._hx_index) {
		case 0:
			return this.printComplexType(param.t);
		case 1:
			return this.printExpr(param.e);
		}
	}
	,printTypePath: function(tp) {
		var tmp = (tp.pack.length > 0 ? tp.pack.join(".") + "." : "") + tp.name + (tp.sub != null ? "." + tp.sub : "");
		var tmp1;
		if(tp.params == null) {
			tmp1 = "";
		} else if(tp.params.length > 0) {
			var _this = tp.params;
			var f = $bind(this,this.printTypeParam);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp1 = "<" + result.join(", ") + ">";
		} else {
			tmp1 = "";
		}
		return tmp + tmp1;
	}
	,printComplexType: function(ct) {
		switch(ct._hx_index) {
		case 0:
			return this.printTypePath(ct.p);
		case 1:
			var _g = ct.args;
			var _g1 = ct.ret;
			var wrapArgumentsInParentheses;
			if(_g.length == 1) {
				var _g2 = _g[0];
				switch(_g2._hx_index) {
				case 0:
					wrapArgumentsInParentheses = false;
					break;
				case 3:
					wrapArgumentsInParentheses = false;
					break;
				case 5:
					wrapArgumentsInParentheses = _g2.t._hx_index == 0 ? false : true;
					break;
				default:
					wrapArgumentsInParentheses = true;
				}
			} else {
				wrapArgumentsInParentheses = true;
			}
			var f = $bind(this,this.printComplexType);
			var result = new Array(_g.length);
			var _g2 = 0;
			var _g3 = _g.length;
			while(_g2 < _g3) {
				var i = _g2++;
				result[i] = f(_g[i]);
			}
			var argStr = result.join(", ");
			var tmp = _g1._hx_index == 1 ? "(" + this.printComplexType(_g1) + ")" : this.printComplexType(_g1);
			return (wrapArgumentsInParentheses ? "(" + argStr + ")" : argStr) + " -> " + tmp;
		case 2:
			var _g = ct.fields;
			var _g1 = [];
			var _g2 = 0;
			while(_g2 < _g.length) {
				var f = _g[_g2];
				++_g2;
				_g1.push(this.printField(f) + "; ");
			}
			return "{ " + _g1.join("") + "}";
		case 3:
			return "(" + this.printComplexType(ct.t) + ")";
		case 4:
			var _g = ct.p;
			var _g1 = ct.fields;
			var _g2 = [];
			var _g3 = 0;
			while(_g3 < _g.length) {
				var t = _g[_g3];
				++_g3;
				_g2.push("> " + this.printTypePath(t) + ", ");
			}
			var types = _g2.join("");
			var _g = [];
			var _g2 = 0;
			while(_g2 < _g1.length) {
				var f = _g1[_g2];
				++_g2;
				_g.push(this.printField(f) + "; ");
			}
			var fields = _g.join("");
			return "{" + types + fields + "}";
		case 5:
			return "?" + this.printComplexType(ct.t);
		case 6:
			return ct.n + ":" + this.printComplexType(ct.t);
		case 7:
			var _g = ct.tl;
			var f = $bind(this,this.printComplexType);
			var result = new Array(_g.length);
			var _g1 = 0;
			var _g2 = _g.length;
			while(_g1 < _g2) {
				var i = _g1++;
				result[i] = f(_g[i]);
			}
			return result.join(" & ");
		}
	}
	,printMetadata: function(meta) {
		return "@" + meta.name + (meta.params != null && meta.params.length > 0 ? "(" + this.printExprs(meta.params,", ") + ")" : "");
	}
	,printAccess: function(access) {
		switch(access._hx_index) {
		case 0:
			return "public";
		case 1:
			return "private";
		case 2:
			return "static";
		case 3:
			return "override";
		case 4:
			return "dynamic";
		case 5:
			return "inline";
		case 6:
			return "macro";
		case 7:
			return "final";
		case 8:
			return "extern";
		case 9:
			return "abstract";
		case 10:
			return "overload";
		}
	}
	,printField: function(field) {
		var tmp = field.doc != null && field.doc != "" ? "/**\n" + this.tabs + this.tabString + StringTools.replace(field.doc,"\n","\n" + this.tabs + this.tabString) + "\n" + this.tabs + "**/\n" + this.tabs : "";
		var tmp1;
		if(field.meta != null && field.meta.length > 0) {
			var _this = field.meta;
			var f = $bind(this,this.printMetadata);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp1 = result.join("\n" + this.tabs) + ("\n" + this.tabs);
		} else {
			tmp1 = "";
		}
		var tmp2 = tmp + tmp1;
		var tmp;
		if(field.access != null && field.access.length > 0) {
			var access = field.access;
			var _this;
			if(Lambda.has(access,haxe_macro_Access.AFinal)) {
				var _g = [];
				var _g1 = 0;
				while(_g1 < access.length) {
					var v = access[_g1];
					++_g1;
					if(v._hx_index != 7) {
						_g.push(v);
					}
				}
				_this = _g.concat([haxe_macro_Access.AFinal]);
			} else {
				_this = access;
			}
			var f = $bind(this,this.printAccess);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp = result.join(" ") + " ";
		} else {
			tmp = "";
		}
		var tmp1 = tmp2 + tmp;
		var _g = field.kind;
		var tmp;
		switch(_g._hx_index) {
		case 0:
			tmp = (field.access != null && Lambda.has(field.access,haxe_macro_Access.AFinal) ? "" : "var ") + ("" + field.name) + this.opt(_g.t,$bind(this,this.printComplexType)," : ") + this.opt(_g.e,$bind(this,this.printExpr)," = ");
			break;
		case 1:
			tmp = "function " + field.name + this.printFunction(_g.f);
			break;
		case 2:
			tmp = "var " + field.name + "(" + _g.get + ", " + _g.set + ")" + this.opt(_g.t,$bind(this,this.printComplexType)," : ") + this.opt(_g.e,$bind(this,this.printExpr)," = ");
			break;
		}
		return tmp1 + tmp;
	}
	,printTypeParamDecl: function(tpd) {
		var tmp;
		if(tpd.meta != null && tpd.meta.length > 0) {
			var _this = tpd.meta;
			var f = $bind(this,this.printMetadata);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp = result.join(" ") + " ";
		} else {
			tmp = "";
		}
		var tmp1 = tmp + tpd.name;
		var tmp;
		if(tpd.params != null && tpd.params.length > 0) {
			var _this = tpd.params;
			var f = $bind(this,this.printTypeParamDecl);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp = "<" + result.join(", ") + ">";
		} else {
			tmp = "";
		}
		var tmp2 = tmp1 + tmp;
		var tmp;
		if(tpd.constraints != null && tpd.constraints.length > 0) {
			var _this = tpd.constraints;
			var f = $bind(this,this.printComplexType);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp = ":(" + result.join(", ") + ")";
		} else {
			tmp = "";
		}
		return tmp2 + tmp;
	}
	,printFunctionArg: function(arg) {
		return (arg.opt ? "?" : "") + arg.name + this.opt(arg.type,$bind(this,this.printComplexType),":") + this.opt(arg.value,$bind(this,this.printExpr)," = ");
	}
	,printFunction: function(func,kind) {
		var _g = func.args;
		var skipParentheses = _g.length == 1 && (_g[0].type == null && kind == haxe_macro_FunctionKind.FArrow);
		var tmp;
		if(func.params == null) {
			tmp = "";
		} else if(func.params.length > 0) {
			var _this = func.params;
			var f = $bind(this,this.printTypeParamDecl);
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(_this[i]);
			}
			tmp = "<" + result.join(", ") + ">";
		} else {
			tmp = "";
		}
		var tmp1 = tmp + (skipParentheses ? "" : "(");
		var _this = func.args;
		var f = $bind(this,this.printFunctionArg);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(_this[i]);
		}
		return tmp1 + result.join(", ") + (skipParentheses ? "" : ")") + (kind == haxe_macro_FunctionKind.FArrow ? " ->" : "") + this.opt(func.ret,$bind(this,this.printComplexType),":") + this.opt(func.expr,$bind(this,this.printExpr)," ");
	}
	,printVar: function(v) {
		var s = v.name + this.opt(v.type,$bind(this,this.printComplexType),":") + this.opt(v.expr,$bind(this,this.printExpr)," = ");
		var _g = v.meta;
		if(_g == null) {
			return s;
		} else if(_g.length == 0) {
			return s;
		} else {
			var f = $bind(this,this.printMetadata);
			var result = new Array(_g.length);
			var _g1 = 0;
			var _g2 = _g.length;
			while(_g1 < _g2) {
				var i = _g1++;
				result[i] = f(_g[i]);
			}
			return result.join(" ") + " " + s;
		}
	}
	,printObjectFieldKey: function(of) {
		var _g = of.quotes;
		if(_g == null) {
			return of.field;
		} else {
			switch(_g._hx_index) {
			case 0:
				return of.field;
			case 1:
				return "\"" + of.field + "\"";
			}
		}
	}
	,printObjectField: function(of) {
		return "" + this.printObjectFieldKey(of) + " : " + this.printExpr(of.expr);
	}
	,printExpr: function(e) {
		if(e == null) {
			return "#NULL";
		} else {
			var _g = e.expr;
			switch(_g._hx_index) {
			case 0:
				return this.printConstant(_g.c);
			case 1:
				return "" + this.printExpr(_g.e1) + "[" + this.printExpr(_g.e2) + "]";
			case 2:
				return "" + this.printExpr(_g.e1) + " " + this.printBinop(_g.op) + " " + this.printExpr(_g.e2);
			case 3:
				return "" + this.printExpr(_g.e) + "." + _g.field;
			case 4:
				return "(" + this.printExpr(_g.e) + ")";
			case 5:
				var _g1 = _g.fields;
				var result = new Array(_g1.length);
				var _g2 = 0;
				var _g3 = _g1.length;
				while(_g2 < _g3) {
					var i = _g2++;
					result[i] = this.printObjectField(_g1[i]);
				}
				return "{ " + result.join(", ") + " }";
			case 6:
				return "[" + this.printExprs(_g.values,", ") + "]";
			case 7:
				return "" + this.printExpr(_g.e) + "(" + this.printExprs(_g.params,", ") + ")";
			case 8:
				return "new " + this.printTypePath(_g.t) + "(" + this.printExprs(_g.params,", ") + ")";
			case 9:
				var _g1 = _g.op;
				var _g2 = _g.e;
				if(_g.postFix) {
					return this.printExpr(_g2) + this.printUnop(_g1);
				} else {
					return this.printUnop(_g1) + this.printExpr(_g2);
				}
				break;
			case 10:
				var _g1 = _g.vars;
				var f = $bind(this,this.printVar);
				var result = new Array(_g1.length);
				var _g2 = 0;
				var _g3 = _g1.length;
				while(_g2 < _g3) {
					var i = _g2++;
					result[i] = f(_g1[i]);
				}
				return "var " + result.join(", ");
			case 11:
				var _g1 = _g.kind;
				var _g2 = _g.f;
				if(_g1 == null) {
					return (_g1 != haxe_macro_FunctionKind.FArrow ? "function" : "") + this.printFunction(_g2,_g1);
				} else if(_g1._hx_index == 1) {
					return (_g1.inlined ? "inline " : "") + ("function " + _g1.name) + this.printFunction(_g2);
				} else {
					return (_g1 != haxe_macro_FunctionKind.FArrow ? "function" : "") + this.printFunction(_g2,_g1);
				}
				break;
			case 12:
				var _g1 = _g.exprs;
				if(_g1.length == 0) {
					return "{ }";
				} else {
					var old = this.tabs;
					this.tabs += this.tabString;
					var s = "{\n" + this.tabs + this.printExprs(_g1,";\n" + this.tabs);
					this.tabs = old;
					return s + (";\n" + this.tabs + "}");
				}
				break;
			case 13:
				return "for (" + this.printExpr(_g.it) + ") " + this.printExpr(_g.expr);
			case 14:
				var _g1 = _g.econd;
				var _g2 = _g.eif;
				var _g3 = _g.eelse;
				if(_g3 == null) {
					return "if (" + this.printExpr(_g1) + ") " + this.printExpr(_g2);
				} else {
					return "if (" + this.printExpr(_g1) + ") " + this.printExpr(_g2) + " else " + this.printExpr(_g3);
				}
				break;
			case 15:
				var _g1 = _g.econd;
				var _g2 = _g.e;
				if(_g.normalWhile) {
					return "while (" + this.printExpr(_g1) + ") " + this.printExpr(_g2);
				} else {
					return "do " + this.printExpr(_g2) + " while (" + this.printExpr(_g1) + ")";
				}
				break;
			case 16:
				var _g1 = _g.cases;
				var _g2 = _g.edef;
				var old = this.tabs;
				this.tabs += this.tabString;
				var s = "switch " + this.printExpr(_g.e) + " {\n" + this.tabs;
				var result = new Array(_g1.length);
				var _g3 = 0;
				var _g4 = _g1.length;
				while(_g3 < _g4) {
					var i = _g3++;
					var c = _g1[i];
					result[i] = "case " + this.printExprs(c.values,", ") + (c.guard != null ? " if (" + this.printExpr(c.guard) + "):" : ":") + (c.expr != null ? this.opt(c.expr,$bind(this,this.printExpr)) + ";" : "");
				}
				var s1 = s + result.join("\n" + this.tabs);
				if(_g2 != null) {
					s1 += "\n" + this.tabs + "default:" + (_g2.expr == null ? "" : this.printExpr(_g2) + ";");
				}
				this.tabs = old;
				return s1 + ("\n" + this.tabs + "}");
			case 17:
				var _g1 = _g.catches;
				var tmp = "try " + this.printExpr(_g.e);
				var result = new Array(_g1.length);
				var _g2 = 0;
				var _g3 = _g1.length;
				while(_g2 < _g3) {
					var i = _g2++;
					var c = _g1[i];
					result[i] = " catch(" + c.name + (c.type == null ? "" : ":" + this.printComplexType(c.type)) + ") " + this.printExpr(c.expr);
				}
				return tmp + result.join("");
			case 18:
				return "return" + this.opt(_g.e,$bind(this,this.printExpr)," ");
			case 19:
				return "break";
			case 20:
				return "continue";
			case 21:
				return "untyped " + this.printExpr(_g.e);
			case 22:
				return "throw " + this.printExpr(_g.e);
			case 23:
				var _g1 = _g.e;
				var _g2 = _g.t;
				if(_g2 != null) {
					return "cast(" + this.printExpr(_g1) + ", " + this.printComplexType(_g2) + ")";
				} else {
					return "cast " + this.printExpr(_g1);
				}
				break;
			case 24:
				return "#DISPLAY(" + this.printExpr(_g.e) + ")";
			case 25:
				return "#DISPLAY(" + this.printTypePath(_g.t) + ")";
			case 26:
				return "" + this.printExpr(_g.econd) + " ? " + this.printExpr(_g.eif) + " : " + this.printExpr(_g.eelse);
			case 27:
				return "(" + this.printExpr(_g.e) + " : " + this.printComplexType(_g.t) + ")";
			case 28:
				var _g1 = _g.s;
				var _g2 = _g.e;
				if(_g1.name == ":implicitReturn") {
					var _g3 = _g2.expr;
					if(_g3._hx_index == 18) {
						return this.printExpr(_g3.e);
					} else {
						return this.printMetadata(_g1) + " " + this.printExpr(_g2);
					}
				} else {
					return this.printMetadata(_g1) + " " + this.printExpr(_g2);
				}
				break;
			case 29:
				return "" + this.printExpr(_g.e) + " is " + this.printComplexType(_g.t);
			}
		}
	}
	,printExprs: function(el,sep) {
		var f = $bind(this,this.printExpr);
		var result = new Array(el.length);
		var _g = 0;
		var _g1 = el.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(el[i]);
		}
		return result.join(sep);
	}
	,printExtension: function(tpl,fields) {
		var tmp = "{\n" + this.tabs + ">";
		var f = $bind(this,this.printTypePath);
		var result = new Array(tpl.length);
		var _g = 0;
		var _g1 = tpl.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(tpl[i]);
		}
		var tmp1 = tmp + result.join(",\n" + this.tabs + ">") + ",";
		var tmp;
		if(fields.length > 0) {
			var tmp2 = "\n" + this.tabs;
			var f = $bind(this,this.printField);
			var result = new Array(fields.length);
			var _g = 0;
			var _g1 = fields.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(fields[i]);
			}
			tmp = tmp2 + result.join(";\n" + this.tabs) + ";\n}";
		} else {
			tmp = "\n}";
		}
		return tmp1 + tmp;
	}
	,printStructure: function(fields) {
		if(fields.length == 0) {
			return "{ }";
		} else {
			var tmp = "{\n" + this.tabs;
			var f = $bind(this,this.printField);
			var result = new Array(fields.length);
			var _g = 0;
			var _g1 = fields.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = f(fields[i]);
			}
			return tmp + result.join(";\n" + this.tabs) + ";\n}";
		}
	}
	,printTypeDefinition: function(t,printPackage) {
		if(printPackage == null) {
			printPackage = true;
		}
		var old = this.tabs;
		this.tabs = this.tabString;
		var str;
		if(t == null) {
			str = "#NULL";
		} else {
			var str1 = (printPackage && t.pack.length > 0 && t.pack[0] != "" ? "package " + t.pack.join(".") + ";\n" : "") + (t.doc != null && t.doc != "" ? "/**\n" + this.tabString + StringTools.replace(t.doc,"\n","\n" + this.tabString) + "\n**/\n" : "");
			var str2;
			if(t.meta != null && t.meta.length > 0) {
				var _this = t.meta;
				var f = $bind(this,this.printMetadata);
				var result = new Array(_this.length);
				var _g = 0;
				var _g1 = _this.length;
				while(_g < _g1) {
					var i = _g++;
					result[i] = f(_this[i]);
				}
				str2 = result.join(" ") + " ";
			} else {
				str2 = "";
			}
			var str3 = str1 + str2 + (t.isExtern ? "extern " : "");
			var _g = t.kind;
			var str1;
			switch(_g._hx_index) {
			case 0:
				var str2 = "enum " + t.name;
				var str4;
				if(t.params != null && t.params.length > 0) {
					var _this = t.params;
					var f = $bind(this,this.printTypeParamDecl);
					var result = new Array(_this.length);
					var _g1 = 0;
					var _g2 = _this.length;
					while(_g1 < _g2) {
						var i = _g1++;
						result[i] = f(_this[i]);
					}
					str4 = "<" + result.join(", ") + ">";
				} else {
					str4 = "";
				}
				var str5 = str2 + str4 + " {\n";
				var _g1 = [];
				var _g2 = 0;
				var _g3 = t.fields;
				while(_g2 < _g3.length) {
					var field = _g3[_g2];
					++_g2;
					var str2 = this.tabs + (field.doc != null && field.doc != "" ? "/**\n" + this.tabs + this.tabString + StringTools.replace(field.doc,"\n","\n" + this.tabs + this.tabString) + "\n" + this.tabs + "**/\n" + this.tabs : "");
					var str4;
					if(field.meta != null && field.meta.length > 0) {
						var _this = field.meta;
						var f = $bind(this,this.printMetadata);
						var result = new Array(_this.length);
						var _g4 = 0;
						var _g5 = _this.length;
						while(_g4 < _g5) {
							var i = _g4++;
							result[i] = f(_this[i]);
						}
						str4 = result.join(" ") + " ";
					} else {
						str4 = "";
					}
					var str6 = str2 + str4;
					var _g6 = field.kind;
					var str7;
					switch(_g6._hx_index) {
					case 0:
						str7 = field.name + this.opt(_g6.t,$bind(this,this.printComplexType),":");
						break;
					case 1:
						str7 = field.name + this.printFunction(_g6.f);
						break;
					case 2:
						throw haxe_Exception.thrown("FProp is invalid for TDEnum.");
					}
					_g1.push(str6 + str7 + ";");
				}
				str1 = str5 + _g1.join("\n") + "\n}";
				break;
			case 1:
				var str2 = "typedef " + t.name;
				var str4;
				if(t.params != null && t.params.length > 0) {
					var _this = t.params;
					var f = $bind(this,this.printTypeParamDecl);
					var result = new Array(_this.length);
					var _g1 = 0;
					var _g2 = _this.length;
					while(_g1 < _g2) {
						var i = _g1++;
						result[i] = f(_this[i]);
					}
					str4 = "<" + result.join(", ") + ">";
				} else {
					str4 = "";
				}
				var str5 = str2 + str4 + " = {\n";
				var _g1 = [];
				var _g2 = 0;
				var _g3 = t.fields;
				while(_g2 < _g3.length) {
					var f = _g3[_g2];
					++_g2;
					_g1.push(this.tabs + this.printField(f) + ";");
				}
				str1 = str5 + _g1.join("\n") + "\n}";
				break;
			case 2:
				var _g1 = _g.superClass;
				var _g2 = _g.interfaces;
				var _g3 = _g.isInterface;
				var str2 = (_g.isFinal ? "final " : "") + (_g.isAbstract ? "abstract " : "") + (_g3 ? "interface " : "class ") + t.name;
				var str4;
				if(t.params != null && t.params.length > 0) {
					var _this = t.params;
					var f = $bind(this,this.printTypeParamDecl);
					var result = new Array(_this.length);
					var _g4 = 0;
					var _g5 = _this.length;
					while(_g4 < _g5) {
						var i = _g4++;
						result[i] = f(_this[i]);
					}
					str4 = "<" + result.join(", ") + ">";
				} else {
					str4 = "";
				}
				var str5 = str2 + str4 + (_g1 != null ? " extends " + this.printTypePath(_g1) : "");
				var str2;
				if(_g2 != null) {
					var str4;
					if(_g3) {
						var _g1 = [];
						var _g3 = 0;
						while(_g3 < _g2.length) {
							var tp = _g2[_g3];
							++_g3;
							_g1.push(" extends " + this.printTypePath(tp));
						}
						str4 = _g1;
					} else {
						var _g1 = [];
						var _g3 = 0;
						while(_g3 < _g2.length) {
							var tp = _g2[_g3];
							++_g3;
							_g1.push(" implements " + this.printTypePath(tp));
						}
						str4 = _g1;
					}
					str2 = str4.join("");
				} else {
					str2 = "";
				}
				var str4 = str5 + str2 + " {\n";
				var _g1 = [];
				var _g2 = 0;
				var _g3 = t.fields;
				while(_g2 < _g3.length) {
					var f = _g3[_g2];
					++_g2;
					_g1.push(this.tabs + this.printFieldWithDelimiter(f));
				}
				str1 = str4 + _g1.join("\n") + "\n}";
				break;
			case 3:
				var _g1 = _g.t;
				var str2 = "typedef " + t.name;
				var str4;
				if(t.params != null && t.params.length > 0) {
					var _this = t.params;
					var f = $bind(this,this.printTypeParamDecl);
					var result = new Array(_this.length);
					var _g2 = 0;
					var _g3 = _this.length;
					while(_g2 < _g3) {
						var i = _g2++;
						result[i] = f(_this[i]);
					}
					str4 = "<" + result.join(", ") + ">";
				} else {
					str4 = "";
				}
				var str5 = str2 + str4 + " = ";
				var str2;
				switch(_g1._hx_index) {
				case 2:
					str2 = this.printStructure(_g1.fields);
					break;
				case 4:
					str2 = this.printExtension(_g1.p,_g1.fields);
					break;
				default:
					str2 = this.printComplexType(_g1);
				}
				str1 = str5 + str2 + ";";
				break;
			case 4:
				var _g1 = _g.tthis;
				var _g2 = _g.from;
				var _g3 = _g.to;
				var str2 = "abstract " + t.name;
				var str4;
				if(t.params != null && t.params.length > 0) {
					var _this = t.params;
					var f = $bind(this,this.printTypeParamDecl);
					var result = new Array(_this.length);
					var _g4 = 0;
					var _g5 = _this.length;
					while(_g4 < _g5) {
						var i = _g4++;
						result[i] = f(_this[i]);
					}
					str4 = "<" + result.join(", ") + ">";
				} else {
					str4 = "";
				}
				var str5 = str2 + str4 + (_g1 == null ? "" : "(" + this.printComplexType(_g1) + ")");
				var str2;
				if(_g2 == null) {
					str2 = "";
				} else {
					var _g1 = [];
					var _g4 = 0;
					while(_g4 < _g2.length) {
						var f = _g2[_g4];
						++_g4;
						_g1.push(" from " + this.printComplexType(f));
					}
					str2 = _g1.join("");
				}
				var str4 = str5 + str2;
				var str2;
				if(_g3 == null) {
					str2 = "";
				} else {
					var _g1 = [];
					var _g2 = 0;
					while(_g2 < _g3.length) {
						var t1 = _g3[_g2];
						++_g2;
						_g1.push(" to " + this.printComplexType(t1));
					}
					str2 = _g1.join("");
				}
				var str5 = str4 + str2 + " {\n";
				var _g1 = [];
				var _g2 = 0;
				var _g3 = t.fields;
				while(_g2 < _g3.length) {
					var f = _g3[_g2];
					++_g2;
					_g1.push(this.tabs + this.printFieldWithDelimiter(f));
				}
				str1 = str5 + _g1.join("\n") + "\n}";
				break;
			case 5:
				var _g1 = _g.kind;
				var _g2 = _g.access;
				this.tabs = old;
				var str2;
				if(_g2 != null && _g2.length > 0) {
					var f = $bind(this,this.printAccess);
					var result = new Array(_g2.length);
					var _g = 0;
					var _g3 = _g2.length;
					while(_g < _g3) {
						var i = _g++;
						result[i] = f(_g2[i]);
					}
					str2 = result.join(" ") + " ";
				} else {
					str2 = "";
				}
				var str4;
				switch(_g1._hx_index) {
				case 0:
					str4 = (_g2 != null && Lambda.has(_g2,haxe_macro_Access.AFinal) ? "" : "var ") + ("" + t.name) + this.opt(_g1.t,$bind(this,this.printComplexType)," : ") + this.opt(_g1.e,$bind(this,this.printExpr)," = ") + ";";
					break;
				case 1:
					var _g = _g1.f;
					var str5 = "function " + t.name + this.printFunction(_g);
					var _g2 = _g.expr;
					str4 = str5 + (_g2 == null ? ";" : _g2.expr._hx_index == 12 ? "" : ";");
					break;
				case 2:
					str4 = "var " + t.name + "(" + _g1.get + ", " + _g1.set + ")" + this.opt(_g1.t,$bind(this,this.printComplexType)," : ") + this.opt(_g1.e,$bind(this,this.printExpr)," = ") + ";";
					break;
				}
				str1 = str2 + str4;
				break;
			}
			str = str3 + str1;
		}
		this.tabs = old;
		return str;
	}
	,printFieldWithDelimiter: function(f) {
		var tmp = this.printField(f);
		var _g = f.kind;
		var tmp1;
		switch(_g._hx_index) {
		case 0:
			tmp1 = ";";
			break;
		case 1:
			var _g1 = _g.f.expr;
			tmp1 = _g1 == null ? ";" : _g1.expr._hx_index == 12 ? "" : ";";
			break;
		case 2:
			tmp1 = ";";
			break;
		}
		return tmp + tmp1;
	}
	,opt: function(v,f,prefix) {
		if(prefix == null) {
			prefix = "";
		}
		if(v == null) {
			return "";
		} else {
			return prefix + f(v);
		}
	}
	,printExprWithPositions: function(e) {
		var _gthis = this;
		var buffer_b = "";
		var format4 = function(i) {
			return StringTools.lpad(i == null ? "null" : "" + i," ",4);
		};
		var loop = null;
		loop = function(tabs,e) {
			while(true) {
				var _ge = [e];
				var _gtabs = [tabs];
				var add = (function(_ge,_gtabs) {
					return function(s,p) {
						if(p == null) {
							p = _ge[0].pos;
						}
						var p = _ge[0].pos;
						buffer_b += Std.string("" + format4(p.min) + "-" + format4(p.max) + " " + _gtabs[0] + s + "\n");
					};
				})(_ge,_gtabs);
				var loopI = (function(_gtabs) {
					return function(e) {
						loop(_gtabs[0] + _gthis.tabString,e);
					};
				})(_gtabs);
				var _g = _ge[0].expr;
				switch(_g._hx_index) {
				case 0:
					add(_gthis.printConstant(_g.c));
					break;
				case 1:
					add("EArray");
					loopI(_g.e1);
					loopI(_g.e2);
					break;
				case 2:
					add("EBinop " + _gthis.printBinop(_g.op));
					loopI(_g.e1);
					loopI(_g.e2);
					break;
				case 3:
					add("EField " + _g.field);
					loopI(_g.e);
					break;
				case 4:
					add("EParenthesis");
					loopI(_g.e);
					break;
				case 5:
					var _g1 = _g.fields;
					add("EObjectDecl");
					var _g2 = 0;
					while(_g2 < _g1.length) {
						var field = _g1[_g2];
						++_g2;
						add(field.field);
						loopI(field.expr);
					}
					break;
				case 6:
					add("EArrayDecl");
					Lambda.iter(_g.values,loopI);
					break;
				case 7:
					add("ECall");
					loopI(_g.e);
					Lambda.iter(_g.params,loopI);
					break;
				case 8:
					add("ENew " + _gthis.printTypePath(_g.t));
					Lambda.iter(_g.params,loopI);
					break;
				case 9:
					add("EUnop " + _gthis.printUnop(_g.op));
					loopI(_g.e);
					break;
				case 10:
					var _g3 = _g.vars;
					add("EVars");
					var _g4 = 0;
					while(_g4 < _g3.length) {
						var v = _g3[_g4];
						++_g4;
						if(v.expr != null) {
							add(v.name);
							loopI(v.expr);
						}
					}
					break;
				case 11:
					var _g5 = _g.f;
					add("EFunction");
					if(_g5.expr != null) {
						loopI(_g5.expr);
					}
					break;
				case 12:
					add("EBlock");
					Lambda.iter(_g.exprs,loopI);
					break;
				case 13:
					add("EFor");
					loopI(_g.it);
					loopI(_g.expr);
					break;
				case 14:
					var _g6 = _g.eelse;
					add("EIf");
					loopI(_g.econd);
					loopI(_g.eif);
					if(_g6 != null) {
						loopI(_g6);
					}
					break;
				case 15:
					add("EWhile");
					loopI(_g.econd);
					loopI(_g.e);
					break;
				case 16:
					var _g7 = _g.cases;
					var _g8 = _g.edef;
					add("ESwitch");
					loopI(_g.e);
					var _g9 = 0;
					while(_g9 < _g7.length) {
						var c = _g7[_g9];
						++_g9;
						var _g10 = 0;
						var _g11 = c.values;
						while(_g10 < _g11.length) {
							var pat = _g11[_g10];
							++_g10;
							loop(_gtabs[0] + _gthis.tabString + _gthis.tabString,pat);
						}
						if(c.expr != null) {
							loop(_gtabs[0] + _gthis.tabString + _gthis.tabString + _gthis.tabString,c.expr);
						}
					}
					if(_g8 != null) {
						tabs = _gtabs[0] + _gthis.tabString + _gthis.tabString + _gthis.tabString;
						e = _g8;
						continue;
					}
					break;
				case 17:
					var _g12 = _g.catches;
					add("ETry");
					loopI(_g.e);
					var _g13 = 0;
					while(_g13 < _g12.length) {
						var c1 = _g12[_g13];
						++_g13;
						loop(_gtabs[0] + _gthis.tabString + _gthis.tabString,c1.expr);
					}
					break;
				case 18:
					var _g14 = _g.e;
					add("EReturn");
					if(_g14 != null) {
						loopI(_g14);
					}
					break;
				case 19:
					add("EBreak");
					break;
				case 20:
					add("EContinue");
					break;
				case 21:
					add("EUntyped");
					loopI(_g.e);
					break;
				case 22:
					add("EThrow");
					loopI(_g.e);
					break;
				case 23:
					add("ECast");
					loopI(_g.e);
					break;
				case 24:
					add("EDisplay");
					loopI(_g.e);
					break;
				case 25:
					add("EDisplayNew");
					break;
				case 26:
					add("ETernary");
					loopI(_g.econd);
					loopI(_g.eif);
					loopI(_g.eelse);
					break;
				case 27:
					add("ECheckType");
					loopI(_g.e);
					break;
				case 28:
					add("EMeta " + _gthis.printMetadata(_g.s));
					loopI(_g.e);
					break;
				case 29:
					add("EIs");
					loopI(_g.e);
					break;
				}
				return;
			}
		};
		loop("",e);
		return buffer_b;
	}
	,__class__: haxe_macro_Printer
};
var haxe_macro_Type = $hxEnums["haxe.macro.Type"] = { __ename__:"haxe.macro.Type",__constructs__:null
	,TMono: ($_=function(t) { return {_hx_index:0,t:t,__enum__:"haxe.macro.Type",toString:$estr}; },$_._hx_name="TMono",$_.__params__ = ["t"],$_)
	,TEnum: ($_=function(t,params) { return {_hx_index:1,t:t,params:params,__enum__:"haxe.macro.Type",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["t","params"],$_)
	,TInst: ($_=function(t,params) { return {_hx_index:2,t:t,params:params,__enum__:"haxe.macro.Type",toString:$estr}; },$_._hx_name="TInst",$_.__params__ = ["t","params"],$_)
	,TType: ($_=function(t,params) { return {_hx_index:3,t:t,params:params,__enum__:"haxe.macro.Type",toString:$estr}; },$_._hx_name="TType",$_.__params__ = ["t","params"],$_)
	,TFun: ($_=function(args,ret) { return {_hx_index:4,args:args,ret:ret,__enum__:"haxe.macro.Type",toString:$estr}; },$_._hx_name="TFun",$_.__params__ = ["args","ret"],$_)
	,TAnonymous: ($_=function(a) { return {_hx_index:5,a:a,__enum__:"haxe.macro.Type",toString:$estr}; },$_._hx_name="TAnonymous",$_.__params__ = ["a"],$_)
	,TDynamic: ($_=function(t) { return {_hx_index:6,t:t,__enum__:"haxe.macro.Type",toString:$estr}; },$_._hx_name="TDynamic",$_.__params__ = ["t"],$_)
	,TLazy: ($_=function(f) { return {_hx_index:7,f:f,__enum__:"haxe.macro.Type",toString:$estr}; },$_._hx_name="TLazy",$_.__params__ = ["f"],$_)
	,TAbstract: ($_=function(t,params) { return {_hx_index:8,t:t,params:params,__enum__:"haxe.macro.Type",toString:$estr}; },$_._hx_name="TAbstract",$_.__params__ = ["t","params"],$_)
};
haxe_macro_Type.__constructs__ = [haxe_macro_Type.TMono,haxe_macro_Type.TEnum,haxe_macro_Type.TInst,haxe_macro_Type.TType,haxe_macro_Type.TFun,haxe_macro_Type.TAnonymous,haxe_macro_Type.TDynamic,haxe_macro_Type.TLazy,haxe_macro_Type.TAbstract];
haxe_macro_Type.__empty_constructs__ = [];
var haxe_macro_AnonStatus = $hxEnums["haxe.macro.AnonStatus"] = { __ename__:"haxe.macro.AnonStatus",__constructs__:null
	,AClosed: {_hx_name:"AClosed",_hx_index:0,__enum__:"haxe.macro.AnonStatus",toString:$estr}
	,AOpened: {_hx_name:"AOpened",_hx_index:1,__enum__:"haxe.macro.AnonStatus",toString:$estr}
	,AConst: {_hx_name:"AConst",_hx_index:2,__enum__:"haxe.macro.AnonStatus",toString:$estr}
	,AExtend: ($_=function(tl) { return {_hx_index:3,tl:tl,__enum__:"haxe.macro.AnonStatus",toString:$estr}; },$_._hx_name="AExtend",$_.__params__ = ["tl"],$_)
	,AClassStatics: ($_=function(t) { return {_hx_index:4,t:t,__enum__:"haxe.macro.AnonStatus",toString:$estr}; },$_._hx_name="AClassStatics",$_.__params__ = ["t"],$_)
	,AEnumStatics: ($_=function(t) { return {_hx_index:5,t:t,__enum__:"haxe.macro.AnonStatus",toString:$estr}; },$_._hx_name="AEnumStatics",$_.__params__ = ["t"],$_)
	,AAbstractStatics: ($_=function(t) { return {_hx_index:6,t:t,__enum__:"haxe.macro.AnonStatus",toString:$estr}; },$_._hx_name="AAbstractStatics",$_.__params__ = ["t"],$_)
};
haxe_macro_AnonStatus.__constructs__ = [haxe_macro_AnonStatus.AClosed,haxe_macro_AnonStatus.AOpened,haxe_macro_AnonStatus.AConst,haxe_macro_AnonStatus.AExtend,haxe_macro_AnonStatus.AClassStatics,haxe_macro_AnonStatus.AEnumStatics,haxe_macro_AnonStatus.AAbstractStatics];
haxe_macro_AnonStatus.__empty_constructs__ = [haxe_macro_AnonStatus.AClosed,haxe_macro_AnonStatus.AOpened,haxe_macro_AnonStatus.AConst];
var haxe_macro_ClassKind = $hxEnums["haxe.macro.ClassKind"] = { __ename__:"haxe.macro.ClassKind",__constructs__:null
	,KNormal: {_hx_name:"KNormal",_hx_index:0,__enum__:"haxe.macro.ClassKind",toString:$estr}
	,KTypeParameter: ($_=function(constraints) { return {_hx_index:1,constraints:constraints,__enum__:"haxe.macro.ClassKind",toString:$estr}; },$_._hx_name="KTypeParameter",$_.__params__ = ["constraints"],$_)
	,KModuleFields: ($_=function(module) { return {_hx_index:2,module:module,__enum__:"haxe.macro.ClassKind",toString:$estr}; },$_._hx_name="KModuleFields",$_.__params__ = ["module"],$_)
	,KExpr: ($_=function(expr) { return {_hx_index:3,expr:expr,__enum__:"haxe.macro.ClassKind",toString:$estr}; },$_._hx_name="KExpr",$_.__params__ = ["expr"],$_)
	,KGeneric: {_hx_name:"KGeneric",_hx_index:4,__enum__:"haxe.macro.ClassKind",toString:$estr}
	,KGenericInstance: ($_=function(cl,params) { return {_hx_index:5,cl:cl,params:params,__enum__:"haxe.macro.ClassKind",toString:$estr}; },$_._hx_name="KGenericInstance",$_.__params__ = ["cl","params"],$_)
	,KMacroType: {_hx_name:"KMacroType",_hx_index:6,__enum__:"haxe.macro.ClassKind",toString:$estr}
	,KAbstractImpl: ($_=function(a) { return {_hx_index:7,a:a,__enum__:"haxe.macro.ClassKind",toString:$estr}; },$_._hx_name="KAbstractImpl",$_.__params__ = ["a"],$_)
	,KGenericBuild: {_hx_name:"KGenericBuild",_hx_index:8,__enum__:"haxe.macro.ClassKind",toString:$estr}
};
haxe_macro_ClassKind.__constructs__ = [haxe_macro_ClassKind.KNormal,haxe_macro_ClassKind.KTypeParameter,haxe_macro_ClassKind.KModuleFields,haxe_macro_ClassKind.KExpr,haxe_macro_ClassKind.KGeneric,haxe_macro_ClassKind.KGenericInstance,haxe_macro_ClassKind.KMacroType,haxe_macro_ClassKind.KAbstractImpl,haxe_macro_ClassKind.KGenericBuild];
haxe_macro_ClassKind.__empty_constructs__ = [haxe_macro_ClassKind.KNormal,haxe_macro_ClassKind.KGeneric,haxe_macro_ClassKind.KMacroType,haxe_macro_ClassKind.KGenericBuild];
var haxe_macro_FieldKind = $hxEnums["haxe.macro.FieldKind"] = { __ename__:"haxe.macro.FieldKind",__constructs__:null
	,FVar: ($_=function(read,write) { return {_hx_index:0,read:read,write:write,__enum__:"haxe.macro.FieldKind",toString:$estr}; },$_._hx_name="FVar",$_.__params__ = ["read","write"],$_)
	,FMethod: ($_=function(k) { return {_hx_index:1,k:k,__enum__:"haxe.macro.FieldKind",toString:$estr}; },$_._hx_name="FMethod",$_.__params__ = ["k"],$_)
};
haxe_macro_FieldKind.__constructs__ = [haxe_macro_FieldKind.FVar,haxe_macro_FieldKind.FMethod];
haxe_macro_FieldKind.__empty_constructs__ = [];
var haxe_macro_VarAccess = $hxEnums["haxe.macro.VarAccess"] = { __ename__:"haxe.macro.VarAccess",__constructs__:null
	,AccNormal: {_hx_name:"AccNormal",_hx_index:0,__enum__:"haxe.macro.VarAccess",toString:$estr}
	,AccNo: {_hx_name:"AccNo",_hx_index:1,__enum__:"haxe.macro.VarAccess",toString:$estr}
	,AccNever: {_hx_name:"AccNever",_hx_index:2,__enum__:"haxe.macro.VarAccess",toString:$estr}
	,AccResolve: {_hx_name:"AccResolve",_hx_index:3,__enum__:"haxe.macro.VarAccess",toString:$estr}
	,AccCall: {_hx_name:"AccCall",_hx_index:4,__enum__:"haxe.macro.VarAccess",toString:$estr}
	,AccInline: {_hx_name:"AccInline",_hx_index:5,__enum__:"haxe.macro.VarAccess",toString:$estr}
	,AccRequire: ($_=function(r,msg) { return {_hx_index:6,r:r,msg:msg,__enum__:"haxe.macro.VarAccess",toString:$estr}; },$_._hx_name="AccRequire",$_.__params__ = ["r","msg"],$_)
	,AccCtor: {_hx_name:"AccCtor",_hx_index:7,__enum__:"haxe.macro.VarAccess",toString:$estr}
};
haxe_macro_VarAccess.__constructs__ = [haxe_macro_VarAccess.AccNormal,haxe_macro_VarAccess.AccNo,haxe_macro_VarAccess.AccNever,haxe_macro_VarAccess.AccResolve,haxe_macro_VarAccess.AccCall,haxe_macro_VarAccess.AccInline,haxe_macro_VarAccess.AccRequire,haxe_macro_VarAccess.AccCtor];
haxe_macro_VarAccess.__empty_constructs__ = [haxe_macro_VarAccess.AccNormal,haxe_macro_VarAccess.AccNo,haxe_macro_VarAccess.AccNever,haxe_macro_VarAccess.AccResolve,haxe_macro_VarAccess.AccCall,haxe_macro_VarAccess.AccInline,haxe_macro_VarAccess.AccCtor];
var haxe_macro_MethodKind = $hxEnums["haxe.macro.MethodKind"] = { __ename__:"haxe.macro.MethodKind",__constructs__:null
	,MethNormal: {_hx_name:"MethNormal",_hx_index:0,__enum__:"haxe.macro.MethodKind",toString:$estr}
	,MethInline: {_hx_name:"MethInline",_hx_index:1,__enum__:"haxe.macro.MethodKind",toString:$estr}
	,MethDynamic: {_hx_name:"MethDynamic",_hx_index:2,__enum__:"haxe.macro.MethodKind",toString:$estr}
	,MethMacro: {_hx_name:"MethMacro",_hx_index:3,__enum__:"haxe.macro.MethodKind",toString:$estr}
};
haxe_macro_MethodKind.__constructs__ = [haxe_macro_MethodKind.MethNormal,haxe_macro_MethodKind.MethInline,haxe_macro_MethodKind.MethDynamic,haxe_macro_MethodKind.MethMacro];
haxe_macro_MethodKind.__empty_constructs__ = [haxe_macro_MethodKind.MethNormal,haxe_macro_MethodKind.MethInline,haxe_macro_MethodKind.MethDynamic,haxe_macro_MethodKind.MethMacro];
var haxe_macro_TConstant = $hxEnums["haxe.macro.TConstant"] = { __ename__:"haxe.macro.TConstant",__constructs__:null
	,TInt: ($_=function(i) { return {_hx_index:0,i:i,__enum__:"haxe.macro.TConstant",toString:$estr}; },$_._hx_name="TInt",$_.__params__ = ["i"],$_)
	,TFloat: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"haxe.macro.TConstant",toString:$estr}; },$_._hx_name="TFloat",$_.__params__ = ["s"],$_)
	,TString: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"haxe.macro.TConstant",toString:$estr}; },$_._hx_name="TString",$_.__params__ = ["s"],$_)
	,TBool: ($_=function(b) { return {_hx_index:3,b:b,__enum__:"haxe.macro.TConstant",toString:$estr}; },$_._hx_name="TBool",$_.__params__ = ["b"],$_)
	,TNull: {_hx_name:"TNull",_hx_index:4,__enum__:"haxe.macro.TConstant",toString:$estr}
	,TThis: {_hx_name:"TThis",_hx_index:5,__enum__:"haxe.macro.TConstant",toString:$estr}
	,TSuper: {_hx_name:"TSuper",_hx_index:6,__enum__:"haxe.macro.TConstant",toString:$estr}
};
haxe_macro_TConstant.__constructs__ = [haxe_macro_TConstant.TInt,haxe_macro_TConstant.TFloat,haxe_macro_TConstant.TString,haxe_macro_TConstant.TBool,haxe_macro_TConstant.TNull,haxe_macro_TConstant.TThis,haxe_macro_TConstant.TSuper];
haxe_macro_TConstant.__empty_constructs__ = [haxe_macro_TConstant.TNull,haxe_macro_TConstant.TThis,haxe_macro_TConstant.TSuper];
var haxe_macro_ModuleType = $hxEnums["haxe.macro.ModuleType"] = { __ename__:"haxe.macro.ModuleType",__constructs__:null
	,TClassDecl: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"haxe.macro.ModuleType",toString:$estr}; },$_._hx_name="TClassDecl",$_.__params__ = ["c"],$_)
	,TEnumDecl: ($_=function(e) { return {_hx_index:1,e:e,__enum__:"haxe.macro.ModuleType",toString:$estr}; },$_._hx_name="TEnumDecl",$_.__params__ = ["e"],$_)
	,TTypeDecl: ($_=function(t) { return {_hx_index:2,t:t,__enum__:"haxe.macro.ModuleType",toString:$estr}; },$_._hx_name="TTypeDecl",$_.__params__ = ["t"],$_)
	,TAbstract: ($_=function(a) { return {_hx_index:3,a:a,__enum__:"haxe.macro.ModuleType",toString:$estr}; },$_._hx_name="TAbstract",$_.__params__ = ["a"],$_)
};
haxe_macro_ModuleType.__constructs__ = [haxe_macro_ModuleType.TClassDecl,haxe_macro_ModuleType.TEnumDecl,haxe_macro_ModuleType.TTypeDecl,haxe_macro_ModuleType.TAbstract];
haxe_macro_ModuleType.__empty_constructs__ = [];
var haxe_macro_FieldAccess = $hxEnums["haxe.macro.FieldAccess"] = { __ename__:"haxe.macro.FieldAccess",__constructs__:null
	,FInstance: ($_=function(c,params,cf) { return {_hx_index:0,c:c,params:params,cf:cf,__enum__:"haxe.macro.FieldAccess",toString:$estr}; },$_._hx_name="FInstance",$_.__params__ = ["c","params","cf"],$_)
	,FStatic: ($_=function(c,cf) { return {_hx_index:1,c:c,cf:cf,__enum__:"haxe.macro.FieldAccess",toString:$estr}; },$_._hx_name="FStatic",$_.__params__ = ["c","cf"],$_)
	,FAnon: ($_=function(cf) { return {_hx_index:2,cf:cf,__enum__:"haxe.macro.FieldAccess",toString:$estr}; },$_._hx_name="FAnon",$_.__params__ = ["cf"],$_)
	,FDynamic: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"haxe.macro.FieldAccess",toString:$estr}; },$_._hx_name="FDynamic",$_.__params__ = ["s"],$_)
	,FClosure: ($_=function(c,cf) { return {_hx_index:4,c:c,cf:cf,__enum__:"haxe.macro.FieldAccess",toString:$estr}; },$_._hx_name="FClosure",$_.__params__ = ["c","cf"],$_)
	,FEnum: ($_=function(e,ef) { return {_hx_index:5,e:e,ef:ef,__enum__:"haxe.macro.FieldAccess",toString:$estr}; },$_._hx_name="FEnum",$_.__params__ = ["e","ef"],$_)
};
haxe_macro_FieldAccess.__constructs__ = [haxe_macro_FieldAccess.FInstance,haxe_macro_FieldAccess.FStatic,haxe_macro_FieldAccess.FAnon,haxe_macro_FieldAccess.FDynamic,haxe_macro_FieldAccess.FClosure,haxe_macro_FieldAccess.FEnum];
haxe_macro_FieldAccess.__empty_constructs__ = [];
var haxe_macro_TypedExprDef = $hxEnums["haxe.macro.TypedExprDef"] = { __ename__:"haxe.macro.TypedExprDef",__constructs__:null
	,TConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TConst",$_.__params__ = ["c"],$_)
	,TLocal: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TLocal",$_.__params__ = ["v"],$_)
	,TArray: ($_=function(e1,e2) { return {_hx_index:2,e1:e1,e2:e2,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TArray",$_.__params__ = ["e1","e2"],$_)
	,TBinop: ($_=function(op,e1,e2) { return {_hx_index:3,op:op,e1:e1,e2:e2,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TBinop",$_.__params__ = ["op","e1","e2"],$_)
	,TField: ($_=function(e,fa) { return {_hx_index:4,e:e,fa:fa,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TField",$_.__params__ = ["e","fa"],$_)
	,TTypeExpr: ($_=function(m) { return {_hx_index:5,m:m,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TTypeExpr",$_.__params__ = ["m"],$_)
	,TParenthesis: ($_=function(e) { return {_hx_index:6,e:e,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TParenthesis",$_.__params__ = ["e"],$_)
	,TObjectDecl: ($_=function(fields) { return {_hx_index:7,fields:fields,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TObjectDecl",$_.__params__ = ["fields"],$_)
	,TArrayDecl: ($_=function(el) { return {_hx_index:8,el:el,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TArrayDecl",$_.__params__ = ["el"],$_)
	,TCall: ($_=function(e,el) { return {_hx_index:9,e:e,el:el,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TCall",$_.__params__ = ["e","el"],$_)
	,TNew: ($_=function(c,params,el) { return {_hx_index:10,c:c,params:params,el:el,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TNew",$_.__params__ = ["c","params","el"],$_)
	,TUnop: ($_=function(op,postFix,e) { return {_hx_index:11,op:op,postFix:postFix,e:e,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TUnop",$_.__params__ = ["op","postFix","e"],$_)
	,TFunction: ($_=function(tfunc) { return {_hx_index:12,tfunc:tfunc,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TFunction",$_.__params__ = ["tfunc"],$_)
	,TVar: ($_=function(v,expr) { return {_hx_index:13,v:v,expr:expr,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TVar",$_.__params__ = ["v","expr"],$_)
	,TBlock: ($_=function(el) { return {_hx_index:14,el:el,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TBlock",$_.__params__ = ["el"],$_)
	,TFor: ($_=function(v,e1,e2) { return {_hx_index:15,v:v,e1:e1,e2:e2,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TFor",$_.__params__ = ["v","e1","e2"],$_)
	,TIf: ($_=function(econd,eif,eelse) { return {_hx_index:16,econd:econd,eif:eif,eelse:eelse,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TIf",$_.__params__ = ["econd","eif","eelse"],$_)
	,TWhile: ($_=function(econd,e,normalWhile) { return {_hx_index:17,econd:econd,e:e,normalWhile:normalWhile,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TWhile",$_.__params__ = ["econd","e","normalWhile"],$_)
	,TSwitch: ($_=function(e,cases,edef) { return {_hx_index:18,e:e,cases:cases,edef:edef,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TSwitch",$_.__params__ = ["e","cases","edef"],$_)
	,TTry: ($_=function(e,catches) { return {_hx_index:19,e:e,catches:catches,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TTry",$_.__params__ = ["e","catches"],$_)
	,TReturn: ($_=function(e) { return {_hx_index:20,e:e,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TReturn",$_.__params__ = ["e"],$_)
	,TBreak: {_hx_name:"TBreak",_hx_index:21,__enum__:"haxe.macro.TypedExprDef",toString:$estr}
	,TContinue: {_hx_name:"TContinue",_hx_index:22,__enum__:"haxe.macro.TypedExprDef",toString:$estr}
	,TThrow: ($_=function(e) { return {_hx_index:23,e:e,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TThrow",$_.__params__ = ["e"],$_)
	,TCast: ($_=function(e,m) { return {_hx_index:24,e:e,m:m,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TCast",$_.__params__ = ["e","m"],$_)
	,TMeta: ($_=function(m,e1) { return {_hx_index:25,m:m,e1:e1,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TMeta",$_.__params__ = ["m","e1"],$_)
	,TEnumParameter: ($_=function(e1,ef,index) { return {_hx_index:26,e1:e1,ef:ef,index:index,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TEnumParameter",$_.__params__ = ["e1","ef","index"],$_)
	,TEnumIndex: ($_=function(e1) { return {_hx_index:27,e1:e1,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TEnumIndex",$_.__params__ = ["e1"],$_)
	,TIdent: ($_=function(s) { return {_hx_index:28,s:s,__enum__:"haxe.macro.TypedExprDef",toString:$estr}; },$_._hx_name="TIdent",$_.__params__ = ["s"],$_)
};
haxe_macro_TypedExprDef.__constructs__ = [haxe_macro_TypedExprDef.TConst,haxe_macro_TypedExprDef.TLocal,haxe_macro_TypedExprDef.TArray,haxe_macro_TypedExprDef.TBinop,haxe_macro_TypedExprDef.TField,haxe_macro_TypedExprDef.TTypeExpr,haxe_macro_TypedExprDef.TParenthesis,haxe_macro_TypedExprDef.TObjectDecl,haxe_macro_TypedExprDef.TArrayDecl,haxe_macro_TypedExprDef.TCall,haxe_macro_TypedExprDef.TNew,haxe_macro_TypedExprDef.TUnop,haxe_macro_TypedExprDef.TFunction,haxe_macro_TypedExprDef.TVar,haxe_macro_TypedExprDef.TBlock,haxe_macro_TypedExprDef.TFor,haxe_macro_TypedExprDef.TIf,haxe_macro_TypedExprDef.TWhile,haxe_macro_TypedExprDef.TSwitch,haxe_macro_TypedExprDef.TTry,haxe_macro_TypedExprDef.TReturn,haxe_macro_TypedExprDef.TBreak,haxe_macro_TypedExprDef.TContinue,haxe_macro_TypedExprDef.TThrow,haxe_macro_TypedExprDef.TCast,haxe_macro_TypedExprDef.TMeta,haxe_macro_TypedExprDef.TEnumParameter,haxe_macro_TypedExprDef.TEnumIndex,haxe_macro_TypedExprDef.TIdent];
haxe_macro_TypedExprDef.__empty_constructs__ = [haxe_macro_TypedExprDef.TBreak,haxe_macro_TypedExprDef.TContinue];
var haxe_macro_TypeTools = function() { };
$hxClasses["haxe.macro.TypeTools"] = haxe_macro_TypeTools;
haxe_macro_TypeTools.__name__ = "haxe.macro.TypeTools";
haxe_macro_TypeTools.nullable = function(complexType) {
	return haxe_macro_ComplexType.TPath({ pack : [], name : "Null", params : [haxe_macro_TypeParam.TPType(complexType)]});
};
haxe_macro_TypeTools.toField = function(cf) {
	var varAccessToString = function(va,getOrSet) {
		switch(va._hx_index) {
		case 0:case 7:
			return "default";
		case 1:
			return "null";
		case 2:
			return "never";
		case 3:
			throw haxe_Exception.thrown("Invalid TAnonymous");
		case 4:
			return getOrSet;
		case 5:
			return "default";
		case 6:
			return "default";
		}
	};
	var access = cf.isPublic ? [haxe_macro_Access.APublic] : [haxe_macro_Access.APrivate];
	if(cf.meta.has(":final")) {
		access.push(haxe_macro_Access.AFinal);
	}
	if(cf.params.length == 0) {
		var cf1 = cf.name;
		var cf2 = cf.doc;
		var tmp;
		var _g = cf.kind;
		var _g1 = cf.type;
		switch(_g._hx_index) {
		case 0:
			tmp = haxe_macro_FieldType.FProp(varAccessToString(_g.read,"get"),varAccessToString(_g.write,"set"),haxe_macro_TypeTools.toComplexType(_g1),null);
			break;
		case 1:
			if(_g1._hx_index == 4) {
				var _g = _g1.args;
				var _g2 = _g1.ret;
				var _g1 = [];
				var _g3 = 0;
				while(_g3 < _g.length) {
					var a = _g[_g3];
					++_g3;
					_g1.push({ name : a.name, opt : a.opt, type : haxe_macro_TypeTools.toComplexType(a.t)});
				}
				tmp = haxe_macro_FieldType.FFun({ args : _g1, ret : haxe_macro_TypeTools.toComplexType(_g2), expr : null});
			} else {
				throw haxe_Exception.thrown("Invalid TAnonymous");
			}
			break;
		}
		return { name : cf1, doc : cf2, access : access, kind : tmp, pos : cf.pos, meta : cf.meta.get()};
	} else {
		throw haxe_Exception.thrown("Invalid TAnonymous");
	}
};
haxe_macro_TypeTools.toComplexType = function(type) {
	while(true) if(type == null) {
		return null;
	} else {
		switch(type._hx_index) {
		case 0:
			var _hx_tmp = type.t.get();
			if(_hx_tmp == null) {
				return null;
			} else {
				type = _hx_tmp;
				continue;
			}
			break;
		case 1:
			return haxe_macro_ComplexType.TPath(haxe_macro_TypeTools.toTypePath(type.t.get(),type.params));
		case 2:
			var _hx_tmp1 = type.t.get();
			if(_hx_tmp1.kind._hx_index == 1) {
				return haxe_macro_ComplexType.TPath({ name : _hx_tmp1.name, pack : []});
			} else {
				return haxe_macro_ComplexType.TPath(haxe_macro_TypeTools.toTypePath(_hx_tmp1,type.params));
			}
			break;
		case 3:
			return haxe_macro_ComplexType.TPath(haxe_macro_TypeTools.toTypePath(type.t.get(),type.params));
		case 4:
			var _g = type.args;
			var _g1 = type.ret;
			var _g2 = [];
			var _g3 = 0;
			while(_g3 < _g.length) {
				var a = _g[_g3];
				++_g3;
				_g2.push(a.opt ? haxe_macro_TypeTools.nullable(haxe_macro_TypeTools.toComplexType(a.t)) : haxe_macro_TypeTools.toComplexType(a.t));
			}
			return haxe_macro_ComplexType.TFunction(_g2,haxe_macro_TypeTools.toComplexType(_g1));
		case 5:
			var _g4 = type.a.get().fields;
			var _g5 = [];
			var _g6 = 0;
			while(_g6 < _g4.length) {
				var cf = _g4[_g6];
				++_g6;
				_g5.push(haxe_macro_TypeTools.toField(cf));
			}
			return haxe_macro_ComplexType.TAnonymous(_g5);
		case 6:
			var _g7 = type.t;
			if(_g7 == null) {
				return haxe_macro_ComplexType.TPath({ pack : [], name : "Dynamic", params : []});
			} else {
				var ct = haxe_macro_TypeTools.toComplexType(_g7);
				return haxe_macro_ComplexType.TPath({ pack : [], name : "Dynamic", params : [haxe_macro_TypeParam.TPType(ct)]});
			}
			break;
		case 7:
			type = type.f();
			continue;
		case 8:
			return haxe_macro_ComplexType.TPath(haxe_macro_TypeTools.toTypePath(type.t.get(),type.params));
		}
	}
};
haxe_macro_TypeTools.toTypeParam = function(type) {
	if(type._hx_index == 2) {
		var _g = type.t.get().kind;
		if(_g._hx_index == 3) {
			return haxe_macro_TypeParam.TPExpr(_g.expr);
		} else {
			return haxe_macro_TypeParam.TPType(haxe_macro_TypeTools.toComplexType(type));
		}
	} else {
		return haxe_macro_TypeParam.TPType(haxe_macro_TypeTools.toComplexType(type));
	}
};
haxe_macro_TypeTools.toTypePath = function(baseType,params) {
	var $module = baseType.module;
	var baseType1 = baseType.pack;
	var tmp = $module.substring($module.lastIndexOf(".") + 1);
	var baseType2 = baseType.name;
	var _g = [];
	var _g1 = 0;
	while(_g1 < params.length) {
		var t = params[_g1];
		++_g1;
		_g.push(haxe_macro_TypeTools.toTypeParam(t));
	}
	return { pack : baseType1, name : tmp, sub : baseType2, params : _g};
};
haxe_macro_TypeTools.findField = function(c,name,isStatic) {
	if(isStatic == null) {
		isStatic = false;
	}
	while(true) {
		var _gname = [name];
		var field = Lambda.find((isStatic ? c.statics : c.fields).get(),(function(_gname) {
			return function(field) {
				return field.name == _gname[0];
			};
		})(_gname));
		if(field != null) {
			return field;
		} else if(c.superClass != null) {
			c = c.superClass.t.get();
			name = _gname[0];
			continue;
		} else {
			return null;
		}
	}
};
var haxe_macro_TypedExprTools = function() { };
$hxClasses["haxe.macro.TypedExprTools"] = haxe_macro_TypedExprTools;
haxe_macro_TypedExprTools.__name__ = "haxe.macro.TypedExprTools";
haxe_macro_TypedExprTools.with = function(e,edef,t) {
	return { expr : edef == null ? e.expr : edef, pos : e.pos, t : t == null ? e.t : t};
};
haxe_macro_TypedExprTools.map = function(e,f) {
	var _g = e.expr;
	switch(_g._hx_index) {
	case 0:
		return e;
	case 1:
		return e;
	case 2:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TArray(f(_g.e1),f(_g.e2)));
	case 3:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TBinop(_g.op,f(_g.e1),f(_g.e2)));
	case 4:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TField(f(_g.e),_g.fa));
	case 5:
		return e;
	case 6:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TParenthesis(f(_g.e)));
	case 7:
		var _g1 = _g.fields;
		var result = new Array(_g1.length);
		var _g2 = 0;
		var _g3 = _g1.length;
		while(_g2 < _g3) {
			var i = _g2++;
			var field = _g1[i];
			result[i] = { name : field.name, expr : f(field.expr)};
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TObjectDecl(result));
	case 8:
		var _g1 = _g.el;
		var result = new Array(_g1.length);
		var _g2 = 0;
		var _g3 = _g1.length;
		while(_g2 < _g3) {
			var i = _g2++;
			result[i] = f(_g1[i]);
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TArrayDecl(result));
	case 9:
		var _g1 = _g.el;
		var tmp = f(_g.e);
		var result = new Array(_g1.length);
		var _g2 = 0;
		var _g3 = _g1.length;
		while(_g2 < _g3) {
			var i = _g2++;
			result[i] = f(_g1[i]);
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TCall(tmp,result));
	case 10:
		var _g1 = _g.c;
		var _g2 = _g.params;
		var _g3 = _g.el;
		var result = new Array(_g3.length);
		var _g4 = 0;
		var _g5 = _g3.length;
		while(_g4 < _g5) {
			var i = _g4++;
			result[i] = f(_g3[i]);
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TNew(_g1,_g2,result));
	case 11:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TUnop(_g.op,_g.postFix,f(_g.e)));
	case 12:
		var _g1 = _g.tfunc;
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TFunction({ t : _g1.t, args : _g1.args, expr : f(_g1.expr)}));
	case 13:
		var _g1 = _g.expr;
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TVar(_g.v,_g1 == null ? null : f(_g1)));
	case 14:
		var _g1 = _g.el;
		var result = new Array(_g1.length);
		var _g2 = 0;
		var _g3 = _g1.length;
		while(_g2 < _g3) {
			var i = _g2++;
			result[i] = f(_g1[i]);
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TBlock(result));
	case 15:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TFor(_g.v,f(_g.e1),f(_g.e2)));
	case 16:
		var _g1 = _g.eelse;
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TIf(f(_g.econd),f(_g.eif),_g1 == null ? null : f(_g1)));
	case 17:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TWhile(f(_g.econd),f(_g.e),_g.normalWhile));
	case 18:
		var _g1 = _g.cases;
		var _g2 = _g.edef;
		var tmp = f(_g.e);
		var result = new Array(_g1.length);
		var _g3 = 0;
		var _g4 = _g1.length;
		while(_g3 < _g4) {
			var i = _g3++;
			var c = _g1[i];
			var _this = c.values;
			var result1 = new Array(_this.length);
			var _g5 = 0;
			var _g6 = _this.length;
			while(_g5 < _g6) {
				var i1 = _g5++;
				result1[i1] = f(_this[i1]);
			}
			result[i] = { values : result1, expr : f(c.expr)};
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TSwitch(tmp,result,_g2 == null ? null : f(_g2)));
	case 19:
		var _g1 = _g.catches;
		var tmp = f(_g.e);
		var result = new Array(_g1.length);
		var _g2 = 0;
		var _g3 = _g1.length;
		while(_g2 < _g3) {
			var i = _g2++;
			var c = _g1[i];
			result[i] = { v : c.v, expr : f(c.expr)};
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TTry(tmp,result));
	case 20:
		var _g1 = _g.e;
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TReturn(_g1 == null ? null : f(_g1)));
	case 21:case 22:
		return e;
	case 23:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TThrow(f(_g.e)));
	case 24:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TCast(f(_g.e),_g.m));
	case 25:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TMeta(_g.m,f(_g.e1)));
	case 26:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TEnumParameter(f(_g.e1),_g.ef,_g.index));
	case 27:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TEnumIndex(f(_g.e1)));
	case 28:
		return e;
	}
};
haxe_macro_TypedExprTools.iter = function(e,f) {
	var _g = e.expr;
	switch(_g._hx_index) {
	case 0:
		break;
	case 1:
		break;
	case 2:
		f(_g.e1);
		f(_g.e2);
		break;
	case 3:
		f(_g.e1);
		f(_g.e2);
		break;
	case 4:
		f(_g.e);
		break;
	case 5:
		break;
	case 6:
		f(_g.e);
		break;
	case 7:
		var _g1 = _g.fields;
		var _g2 = 0;
		while(_g2 < _g1.length) {
			var field = _g1[_g2];
			++_g2;
			f(field.expr);
		}
		break;
	case 8:
		var _g1 = _g.el;
		var _g2 = 0;
		while(_g2 < _g1.length) {
			var e = _g1[_g2];
			++_g2;
			f(e);
		}
		break;
	case 9:
		var _g1 = _g.el;
		f(_g.e);
		var _g2 = 0;
		while(_g2 < _g1.length) {
			var e = _g1[_g2];
			++_g2;
			f(e);
		}
		break;
	case 10:
		var _g1 = _g.el;
		var _g2 = 0;
		while(_g2 < _g1.length) {
			var e = _g1[_g2];
			++_g2;
			f(e);
		}
		break;
	case 11:
		f(_g.e);
		break;
	case 12:
		f(_g.tfunc.expr);
		break;
	case 13:
		var _g1 = _g.expr;
		if(_g1 != null) {
			f(_g1);
		}
		break;
	case 14:
		var _g1 = _g.el;
		var _g2 = 0;
		while(_g2 < _g1.length) {
			var e = _g1[_g2];
			++_g2;
			f(e);
		}
		break;
	case 15:
		f(_g.e1);
		f(_g.e2);
		break;
	case 16:
		var _g1 = _g.eelse;
		f(_g.econd);
		f(_g.eif);
		if(_g1 != null) {
			f(_g1);
		}
		break;
	case 17:
		f(_g.econd);
		f(_g.e);
		break;
	case 18:
		var _g1 = _g.cases;
		var _g2 = _g.edef;
		f(_g.e);
		var _g3 = 0;
		while(_g3 < _g1.length) {
			var c = _g1[_g3];
			++_g3;
			var _g4 = 0;
			var _g5 = c.values;
			while(_g4 < _g5.length) {
				var v = _g5[_g4];
				++_g4;
				f(v);
			}
			f(c.expr);
		}
		if(_g2 != null) {
			f(_g2);
		}
		break;
	case 19:
		var _g1 = _g.catches;
		f(_g.e);
		var _g2 = 0;
		while(_g2 < _g1.length) {
			var c = _g1[_g2];
			++_g2;
			f(c.expr);
		}
		break;
	case 20:
		var _g1 = _g.e;
		if(_g1 != null) {
			f(_g1);
		}
		break;
	case 21:case 22:
		break;
	case 23:
		f(_g.e);
		break;
	case 24:
		f(_g.e);
		break;
	case 25:
		f(_g.e1);
		break;
	case 26:
		f(_g.e1);
		break;
	case 27:
		f(_g.e1);
		break;
	case 28:
		break;
	}
};
haxe_macro_TypedExprTools.mapWithType = function(e,f,ft,fv) {
	var _g = e.expr;
	switch(_g._hx_index) {
	case 0:
		return haxe_macro_TypedExprTools.with(e,null,ft(e.t));
	case 1:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TLocal(fv(_g.v)),ft(e.t));
	case 2:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TArray(f(_g.e1),f(_g.e2)),ft(e.t));
	case 3:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TBinop(_g.op,f(_g.e1),f(_g.e2)),ft(e.t));
	case 4:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TField(f(_g.e),_g.fa),ft(e.t));
	case 5:
		return haxe_macro_TypedExprTools.with(e,null,ft(e.t));
	case 6:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TParenthesis(_g.e),ft(e.t));
	case 7:
		var _g1 = _g.fields;
		var result = new Array(_g1.length);
		var _g2 = 0;
		var _g3 = _g1.length;
		while(_g2 < _g3) {
			var i = _g2++;
			var field = _g1[i];
			result[i] = { name : field.name, expr : f(field.expr)};
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TObjectDecl(result),ft(e.t));
	case 8:
		var _g1 = _g.el;
		var result = new Array(_g1.length);
		var _g2 = 0;
		var _g3 = _g1.length;
		while(_g2 < _g3) {
			var i = _g2++;
			result[i] = f(_g1[i]);
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TArrayDecl(result),ft(e.t));
	case 9:
		var _g1 = _g.el;
		var tmp = f(_g.e);
		var result = new Array(_g1.length);
		var _g2 = 0;
		var _g3 = _g1.length;
		while(_g2 < _g3) {
			var i = _g2++;
			result[i] = f(_g1[i]);
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TCall(tmp,result),ft(e.t));
	case 10:
		var _g1 = _g.c;
		var _g2 = _g.params;
		var _g3 = _g.el;
		var result = new Array(_g3.length);
		var _g4 = 0;
		var _g5 = _g3.length;
		while(_g4 < _g5) {
			var i = _g4++;
			result[i] = f(_g3[i]);
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TNew(_g1,_g2,result),ft(e.t));
	case 11:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TUnop(_g.op,_g.postFix,f(_g.e)),ft(e.t));
	case 12:
		var _g1 = _g.tfunc;
		var tmp = ft(_g1.t);
		var _this = _g1.args;
		var result = new Array(_this.length);
		var _g2 = 0;
		var _g3 = _this.length;
		while(_g2 < _g3) {
			var i = _g2++;
			var arg = _this[i];
			result[i] = { v : fv(arg.v), value : arg.value};
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TFunction({ t : tmp, args : result, expr : f(_g1.expr)}),ft(e.t));
	case 13:
		var _g1 = _g.expr;
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TVar(fv(_g.v),_g1 == null ? null : f(_g1)),ft(e.t));
	case 14:
		var _g1 = _g.el;
		var result = new Array(_g1.length);
		var _g2 = 0;
		var _g3 = _g1.length;
		while(_g2 < _g3) {
			var i = _g2++;
			result[i] = f(_g1[i]);
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TBlock(result),ft(e.t));
	case 15:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TFor(fv(_g.v),f(_g.e1),f(_g.e2)),ft(e.t));
	case 16:
		var _g1 = _g.eelse;
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TIf(f(_g.econd),f(_g.eif),_g1 == null ? null : f(_g1)),ft(e.t));
	case 17:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TWhile(f(_g.econd),f(_g.e),_g.normalWhile),ft(e.t));
	case 18:
		var _g1 = _g.cases;
		var _g2 = _g.edef;
		var tmp = f(_g.e);
		var result = new Array(_g1.length);
		var _g3 = 0;
		var _g4 = _g1.length;
		while(_g3 < _g4) {
			var i = _g3++;
			var c = _g1[i];
			var _this = c.values;
			var result1 = new Array(_this.length);
			var _g5 = 0;
			var _g6 = _this.length;
			while(_g5 < _g6) {
				var i1 = _g5++;
				result1[i1] = f(_this[i1]);
			}
			result[i] = { values : result1, expr : f(c.expr)};
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TSwitch(tmp,result,_g2 == null ? null : f(_g2)),ft(e.t));
	case 19:
		var _g1 = _g.catches;
		var tmp = f(_g.e);
		var result = new Array(_g1.length);
		var _g2 = 0;
		var _g3 = _g1.length;
		while(_g2 < _g3) {
			var i = _g2++;
			var c = _g1[i];
			result[i] = { v : fv(c.v), expr : f(c.expr)};
		}
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TTry(tmp,result),ft(e.t));
	case 20:
		var _g1 = _g.e;
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TReturn(_g1 == null ? null : f(_g1)),ft(e.t));
	case 21:case 22:
		return haxe_macro_TypedExprTools.with(e,null,ft(e.t));
	case 23:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TThrow(f(_g.e)),ft(e.t));
	case 24:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TCast(f(_g.e),_g.m),ft(e.t));
	case 25:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TMeta(_g.m,f(_g.e1)),ft(e.t));
	case 26:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TEnumParameter(f(_g.e1),_g.ef,_g.index),ft(e.t));
	case 27:
		return haxe_macro_TypedExprTools.with(e,haxe_macro_TypedExprDef.TEnumIndex(f(_g.e1)),ft(e.t));
	case 28:
		return haxe_macro_TypedExprTools.with(e,null,ft(e.t));
	}
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.isClass = function(o) {
	return o.__name__;
};
js_Boot.isInterface = function(o) {
	return o.__isInterface__;
};
js_Boot.isEnum = function(e) {
	return e.__ename__;
};
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	while(true) {
		if(cc == null) {
			return false;
		}
		if(cc == cl) {
			return true;
		}
		var intf = cc.__interfaces__;
		if(intf != null) {
			var _g = 0;
			var _g1 = intf.length;
			while(_g < _g1) {
				var i = _g++;
				var i1 = intf[i];
				if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
					return true;
				}
			}
		}
		cc = cc.__super__;
	}
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__toStr = null;
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = "js.Browser";
js_Browser.__properties__ = {get_supported:"get_supported",get_self:"get_self"};
js_Browser.get_self = function() {
	return $global;
};
js_Browser.get_supported = function() {
	if(typeof(window) != "undefined" && typeof(window.location) != "undefined") {
		return typeof(window.location.protocol) == "string";
	} else {
		return false;
	}
};
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		if(s.length == 0) {
			var key = "_hx_" + Math.random();
			s.setItem(key,key);
			s.removeItem(key);
		}
		return s;
	} catch( _g ) {
		return null;
	}
};
js_Browser.getSessionStorage = function() {
	try {
		var s = window.sessionStorage;
		s.getItem("");
		if(s.length == 0) {
			var key = "_hx_" + Math.random();
			s.setItem(key,key);
			s.removeItem(key);
		}
		return s;
	} catch( _g ) {
		return null;
	}
};
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw haxe_Exception.thrown("Unable to create XMLHttpRequest object.");
};
js_Browser.alert = function(v) {
	window.alert(Std.string(v));
};
var js_Lib = function() { };
$hxClasses["js.Lib"] = js_Lib;
js_Lib.__name__ = "js.Lib";
js_Lib.__properties__ = {get_undefined:"get_undefined"};
js_Lib.debug = function() {
	debugger;
};
js_Lib.alert = function(v) {
	alert(js_Boot.__string_rec(v,""));
};
js_Lib.eval = function(code) {
	return eval(code);
};
js_Lib.get_undefined = function() {
	return undefined;
};
js_Lib.rethrow = function() {
};
js_Lib.getOriginalException = function() {
	return null;
};
js_Lib.getNextHaxeUID = function() {
	return $global.$haxeUID++;
};
var js_html__$CanvasElement_CanvasUtil = function() { };
$hxClasses["js.html._CanvasElement.CanvasUtil"] = js_html__$CanvasElement_CanvasUtil;
js_html__$CanvasElement_CanvasUtil.__name__ = "js.html._CanvasElement.CanvasUtil";
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var ctx = canvas.getContext("webgl",attribs);
	if(ctx != null) {
		return ctx;
	}
	var ctx = canvas.getContext("experimental-webgl",attribs);
	if(ctx != null) {
		return ctx;
	}
	return null;
};
var js_lib__$ArrayBuffer_ArrayBufferCompat = function() { };
$hxClasses["js.lib._ArrayBuffer.ArrayBufferCompat"] = js_lib__$ArrayBuffer_ArrayBufferCompat;
js_lib__$ArrayBuffer_ArrayBufferCompat.__name__ = "js.lib._ArrayBuffer.ArrayBufferCompat";
js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var resultArray = new Uint8Array(u.byteLength);
	resultArray.set(u);
	return resultArray.buffer;
};
var js_lib_HaxeIterator = function(jsIterator) {
	this.jsIterator = jsIterator;
	this.lastStep = jsIterator.next();
};
$hxClasses["js.lib.HaxeIterator"] = js_lib_HaxeIterator;
js_lib_HaxeIterator.__name__ = "js.lib.HaxeIterator";
js_lib_HaxeIterator.iterator = function(jsIterator) {
	return new js_lib_HaxeIterator(jsIterator);
};
js_lib_HaxeIterator.prototype = {
	jsIterator: null
	,lastStep: null
	,hasNext: function() {
		return !this.lastStep.done;
	}
	,next: function() {
		var v = this.lastStep.value;
		this.lastStep = this.jsIterator.next();
		return v;
	}
	,__class__: js_lib_HaxeIterator
};
var js_lib_KeyValue = {};
js_lib_KeyValue.__properties__ = {get_value:"get_value",get_key:"get_key"};
js_lib_KeyValue.get_key = function(this1) {
	return this1[0];
};
js_lib_KeyValue.get_value = function(this1) {
	return this1[1];
};
var js_lib_ObjectEntry = {};
js_lib_ObjectEntry.__properties__ = {get_value:"get_value",get_key:"get_key"};
js_lib_ObjectEntry.get_key = function(this1) {
	return this1[0];
};
js_lib_ObjectEntry.get_value = function(this1) {
	return this1[1];
};
var js_lib_SetKeyValueIterator = function(set) {
	this.index = 0;
	this.set = set;
	this.values = new js_lib_HaxeIterator(set.values());
};
$hxClasses["js.lib.SetKeyValueIterator"] = js_lib_SetKeyValueIterator;
js_lib_SetKeyValueIterator.__name__ = "js.lib.SetKeyValueIterator";
js_lib_SetKeyValueIterator.prototype = {
	set: null
	,values: null
	,index: null
	,hasNext: function() {
		return !this.values.lastStep.done;
	}
	,next: function() {
		var tmp = this.index++;
		var _this = this.values;
		var v = _this.lastStep.value;
		_this.lastStep = _this.jsIterator.next();
		return { key : tmp, value : v};
	}
	,__class__: js_lib_SetKeyValueIterator
};
var js_node_ChildProcess = require("child_process");
var js_node_DnsErrorCode = require("dns");
var js_node_Dns = require("dns");
var js_node_Fs = require("fs");
var js_node_Http = require("http");
var js_node_Https = require("https");
var js_node_KeyValue = {};
js_node_KeyValue.__properties__ = {get_value:"get_value",get_key:"get_key"};
js_node_KeyValue.get_key = function(this1) {
	return this1[0];
};
js_node_KeyValue.get_value = function(this1) {
	return this1[1];
};
var js_node_Module = require("module");
var js_node_Path = require("path");
var js_node_events_EventEmitter = require("events").EventEmitter;
var js_node_Stream = require("stream");
var js_node_Tls = require("tls");
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_node_buffer__$Buffer_Helper = function() { };
$hxClasses["js.node.buffer._Buffer.Helper"] = js_node_buffer__$Buffer_Helper;
js_node_buffer__$Buffer_Helper.__name__ = "js.node.buffer._Buffer.Helper";
js_node_buffer__$Buffer_Helper.bytesOfBuffer = function(b) {
	var o = Object.create(haxe_io_Bytes.prototype);
	o.length = b.byteLength;
	o.b = b;
	b.bufferValue = b;
	b.hxBytes = o;
	b.bytes = b;
	return o;
};
var js_node_buffer__$Buffer_BufferModule = require("buffer");
var js_node_stream_Readable = require("stream").Readable;
var js_node_stream_Writable = require("stream").Writable;
var js_node_http_Agent = require("http").Agent;
var js_node_http_ClientRequest = require("http").ClientRequest;
var js_node_http_IncomingMessage = require("http").IncomingMessage;
var js_node_net_Server = require("net").Server;
var js_node_http_Server = require("http").Server;
var js_node_http_ServerResponse = require("http").ServerResponse;
var js_node_https_Agent = require("https").Agent;
var js_node_tls_Server = require("tls").Server;
var js_node_https_Server = require("https").Server;
var js_node_stream_Duplex = require("stream").Duplex;
var js_node_net_Socket = require("net").Socket;
var js_node_stream_WritableNewOptionsAdapter = {};
js_node_stream_WritableNewOptionsAdapter.from = function(options) {
	if(!Object.prototype.hasOwnProperty.call(options,"final")) {
		Object.defineProperty(options,"final",{ get : function() {
			return options.final_;
		}});
	}
	return options;
};
var js_node_tls_TLSSocket = require("tls").TLSSocket;
var js_node_url_URL = require("url").URL;
var js_node_url_URLSearchParams = require("url").URLSearchParams;
var js_node_url_URLSearchParamsEntry = {};
js_node_url_URLSearchParamsEntry.__properties__ = {get_value:"get_value",get_name:"get_name"};
js_node_url_URLSearchParamsEntry._new = function(name,value) {
	var this1 = [name,value];
	return this1;
};
js_node_url_URLSearchParamsEntry.get_name = function(this1) {
	return this1[0];
};
js_node_url_URLSearchParamsEntry.get_value = function(this1) {
	return this1[1];
};
var node_buffer_Buffer = require("buffer").Buffer;
var node_$html_$parser_Node = require("node-html-parser").Node;
var node_$html_$parser_HTMLElement = require("node-html-parser").HTMLElement;
var node_$html_$parser_NodeType = require("node-html-parser").NodeType;
var safety_SafetyException = function(message,previous,native) {
	haxe_Exception.call(this,message,previous,native);
	this.__skipStack++;
};
$hxClasses["safety.SafetyException"] = safety_SafetyException;
safety_SafetyException.__name__ = "safety.SafetyException";
safety_SafetyException.__super__ = haxe_Exception;
safety_SafetyException.prototype = $extend(haxe_Exception.prototype,{
	__class__: safety_SafetyException
});
var safety_NullPointerException = function(message,previous,native) {
	safety_SafetyException.call(this,message,previous,native);
	this.__skipStack++;
};
$hxClasses["safety.NullPointerException"] = safety_NullPointerException;
safety_NullPointerException.__name__ = "safety.NullPointerException";
safety_NullPointerException.__super__ = safety_SafetyException;
safety_NullPointerException.prototype = $extend(safety_SafetyException.prototype,{
	__class__: safety_NullPointerException
});
var sys_FileSystem = function() { };
$hxClasses["sys.FileSystem"] = sys_FileSystem;
sys_FileSystem.__name__ = "sys.FileSystem";
sys_FileSystem.exists = function(path) {
	try {
		js_node_Fs.accessSync(path);
		return true;
	} catch( _g ) {
		return false;
	}
};
sys_FileSystem.rename = function(path,newPath) {
	js_node_Fs.renameSync(path,newPath);
};
sys_FileSystem.stat = function(path) {
	return js_node_Fs.statSync(path);
};
sys_FileSystem.fullPath = function(relPath) {
	try {
		return js_node_Fs.realpathSync(relPath);
	} catch( _g ) {
		return null;
	}
};
sys_FileSystem.absolutePath = function(relPath) {
	if(haxe_io_Path.isAbsolute(relPath)) {
		return relPath;
	}
	return js_node_Path.resolve(relPath);
};
sys_FileSystem.isDirectory = function(path) {
	try {
		return js_node_Fs.statSync(path).isDirectory();
	} catch( _g ) {
		return false;
	}
};
sys_FileSystem.createDirectory = function(path) {
	try {
		js_node_Fs.mkdirSync(path);
	} catch( _g ) {
		var _g1 = haxe_Exception.caught(_g).unwrap();
		if(_g1.code == "ENOENT") {
			sys_FileSystem.createDirectory(js_node_Path.dirname(path));
			js_node_Fs.mkdirSync(path);
		} else {
			var stat;
			try {
				stat = js_node_Fs.statSync(path);
			} catch( _g2 ) {
				throw _g1;
			}
			if(!stat.isDirectory()) {
				throw _g1;
			}
		}
	}
};
sys_FileSystem.deleteFile = function(path) {
	js_node_Fs.unlinkSync(path);
};
sys_FileSystem.deleteDirectory = function(path) {
	if(sys_FileSystem.exists(path)) {
		var _g = 0;
		var _g1 = js_node_Fs.readdirSync(path);
		while(_g < _g1.length) {
			var file = _g1[_g];
			++_g;
			var curPath = path + "/" + file;
			if(sys_FileSystem.isDirectory(curPath)) {
				sys_FileSystem.deleteDirectory(curPath);
			} else {
				js_node_Fs.unlinkSync(curPath);
			}
		}
		js_node_Fs.rmdirSync(path);
	}
};
sys_FileSystem.readDirectory = function(path) {
	return js_node_Fs.readdirSync(path);
};
var sys_io_File = function() { };
$hxClasses["sys.io.File"] = sys_io_File;
sys_io_File.__name__ = "sys.io.File";
sys_io_File.append = function(path,binary) {
	if(binary == null) {
		binary = true;
	}
	return new sys_io_FileOutput(js_node_Fs.openSync(path,"a"));
};
sys_io_File.write = function(path,binary) {
	if(binary == null) {
		binary = true;
	}
	return new sys_io_FileOutput(js_node_Fs.openSync(path,"w"));
};
sys_io_File.read = function(path,binary) {
	if(binary == null) {
		binary = true;
	}
	return new sys_io_FileInput(js_node_Fs.openSync(path,"r"));
};
sys_io_File.getContent = function(path) {
	return js_node_Fs.readFileSync(path,{ encoding : "utf8"});
};
sys_io_File.saveContent = function(path,content) {
	js_node_Fs.writeFileSync(path,content);
};
sys_io_File.getBytes = function(path) {
	return js_node_buffer__$Buffer_Helper.bytesOfBuffer(js_node_Fs.readFileSync(path));
};
sys_io_File.saveBytes = function(path,bytes) {
	var data = bytes.b;
	js_node_Fs.writeFileSync(path,js_node_buffer_Buffer.from(data.buffer,data.byteOffset,bytes.length));
};
sys_io_File.update = function(path,binary) {
	if(binary == null) {
		binary = true;
	}
	return new sys_io_FileOutput(js_node_Fs.openSync(path,"r+"));
};
sys_io_File.copy = function(srcPath,dstPath) {
	var src = js_node_Fs.openSync(srcPath,"r");
	var stat = js_node_Fs.fstatSync(src);
	var dst = js_node_Fs.openSync(dstPath,"w",stat.mode);
	var bytesRead;
	var pos = 0;
	while(true) {
		bytesRead = js_node_Fs.readSync(src,sys_io_File.copyBuf,0,65536,pos);
		if(!(bytesRead > 0)) {
			break;
		}
		js_node_Fs.writeSync(dst,sys_io_File.copyBuf,0,bytesRead);
		pos += bytesRead;
	}
	js_node_Fs.closeSync(src);
	js_node_Fs.closeSync(dst);
};
var sys_io_FileInput = function(fd) {
	this.hasReachedEof = false;
	this.fd = fd;
	this.pos = 0;
};
$hxClasses["sys.io.FileInput"] = sys_io_FileInput;
sys_io_FileInput.__name__ = "sys.io.FileInput";
sys_io_FileInput.__super__ = haxe_io_Input;
sys_io_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	fd: null
	,pos: null
	,hasReachedEof: null
	,throwEof: function() {
		this.hasReachedEof = true;
		throw haxe_Exception.thrown(new haxe_io_Eof());
	}
	,readByte: function() {
		var buf = js_node_buffer_Buffer.alloc(1);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,0,1,this.pos);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(_g1.code == "EOF") {
				this.hasReachedEof = true;
				throw haxe_Exception.thrown(new haxe_io_Eof());
			}
			throw haxe_Exception.thrown(haxe_io_Error.Custom(_g1));
		}
		if(bytesRead == 0) {
			this.hasReachedEof = true;
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.pos++;
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,pos,len,this.pos);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(_g1.code == "EOF") {
				this.hasReachedEof = true;
				throw haxe_Exception.thrown(new haxe_io_Eof());
			}
			throw haxe_Exception.thrown(haxe_io_Error.Custom(_g1));
		}
		if(bytesRead == 0) {
			this.hasReachedEof = true;
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.pos += bytesRead;
		return bytesRead;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		this.hasReachedEof = false;
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,eof: function() {
		return this.hasReachedEof;
	}
	,__class__: sys_io_FileInput
});
var sys_io_FileOutput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
$hxClasses["sys.io.FileOutput"] = sys_io_FileOutput;
sys_io_FileOutput.__name__ = "sys.io.FileOutput";
sys_io_FileOutput.__super__ = haxe_io_Output;
sys_io_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	fd: null
	,pos: null
	,writeByte: function(b) {
		var buf = js_node_buffer_Buffer.alloc(1);
		buf[0] = b;
		js_node_Fs.writeSync(this.fd,buf,0,1,this.pos);
		this.pos++;
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		var wrote = js_node_Fs.writeSync(this.fd,buf,pos,len,this.pos);
		this.pos += wrote;
		return wrote;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,__class__: sys_io_FileOutput
});
var sys_io_FileSeek = $hxEnums["sys.io.FileSeek"] = { __ename__:"sys.io.FileSeek",__constructs__:null
	,SeekBegin: {_hx_name:"SeekBegin",_hx_index:0,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekCur: {_hx_name:"SeekCur",_hx_index:1,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekEnd: {_hx_name:"SeekEnd",_hx_index:2,__enum__:"sys.io.FileSeek",toString:$estr}
};
sys_io_FileSeek.__constructs__ = [sys_io_FileSeek.SeekBegin,sys_io_FileSeek.SeekCur,sys_io_FileSeek.SeekEnd];
sys_io_FileSeek.__empty_constructs__ = [sys_io_FileSeek.SeekBegin,sys_io_FileSeek.SeekCur,sys_io_FileSeek.SeekEnd];
var systems_CommandBase = function(_universe) {
	ecs_System.call(this,_universe);
};
$hxClasses["systems.CommandBase"] = systems_CommandBase;
systems_CommandBase.__name__ = "systems.CommandBase";
systems_CommandBase.__super__ = ecs_System;
systems_CommandBase.prototype = $extend(ecs_System.prototype,{
	update: function(_) {
		if(!Main.connected) {
			return;
		}
		var _g = this.commands.iterator();
		while(_g.active && _g.idx < _g.set.size()) {
			var entity = _g.set.getDense(_g.idx++);
			var interaction = this.table29372b5f3de85aef648e8f952540e2ec.get(entity);
			var command = this.tableff7698320b2346222a0ba18495307447.get(entity);
			if(command.name == this.get_name()) {
				this.run(command,interaction);
				this.commands.remove(entity);
			}
		}
	}
	,run: null
	,get_name: null
	,onAdded: function() {
		ecs_System.prototype.onAdded.call(this);
		this.commands = this.universe.families.get(0);
		this.table29372b5f3de85aef648e8f952540e2ec = this.universe.components.getTable(0);
		this.tableff7698320b2346222a0ba18495307447 = this.universe.components.getTable(1);
	}
	,onRemoved: function() {
		ecs_System.prototype.onRemoved.call(this);
	}
	,commands: null
	,table29372b5f3de85aef648e8f952540e2ec: null
	,tableff7698320b2346222a0ba18495307447: null
	,__class__: systems_CommandBase
	,__properties__: {get_name:"get_name"}
});
var systems_commands_Api = function(_universe) {
	systems_CommandBase.call(this,_universe);
};
$hxClasses["systems.commands.Api"] = systems_commands_Api;
systems_commands_Api.__name__ = "systems.commands.Api";
systems_commands_Api.__super__ = systems_CommandBase;
systems_commands_Api.prototype = $extend(systems_CommandBase.prototype,{
	run: function(command,interaction) {
		if(command.content == null) {
			return;
		}
		var _g = command.content;
		if(_g._hx_index == 3) {
			var _g1 = _g.channel;
			var docs;
			switch(interaction.channel.id) {
			case "165234904815239168":
				docs = systems_commands_Api.flixel;
				break;
			case "501408700142059520":
				docs = systems_commands_Api.heaps;
				break;
			case "769686258049351722":
				docs = systems_commands_Api.lime;
				break;
			case "769686284318146561":
				docs = systems_commands_Api.openfl;
				break;
			default:
				docs = systems_commands_Api.haxe;
			}
			if(_g1.indexOf("Flx") != -1 || _g1.indexOf("flixel.") != -1) {
				docs = systems_commands_Api.flixel;
			}
			if(_g1.indexOf("haxe.") != -1) {
				docs = systems_commands_Api.haxe;
			}
			if(_g1.indexOf("openfl.") != -1) {
				docs = systems_commands_Api.openfl;
			}
			if(_g1.indexOf("lime.") != -1) {
				docs = systems_commands_Api.lime;
			}
			var check = ["h2d","h3d","hxd","hxsl"];
			var _g = 0;
			while(_g < check.length) {
				var item = check[_g];
				++_g;
				if(_g1.indexOf(item) == -1) {
					continue;
				}
				docs = systems_commands_Api.heaps;
				break;
			}
			var base = docs;
			var split = null;
			var _g = command.content;
			if(_g._hx_index == 3) {
				split = _g.channel.split(" ");
			}
			if(split[2] != null) {
				switch(split[2].toLowerCase()) {
				case "flixel":
					base = systems_commands_Api.flixel;
					break;
				case "haxe":
					base = systems_commands_Api.haxe;
					break;
				case "heaps":
					base = systems_commands_Api.heaps;
					break;
				case "lime":
					base = systems_commands_Api.lime;
					break;
				case "openfl":
					base = systems_commands_Api.openfl;
					break;
				default:
					base = systems_commands_Api.haxe;
				}
			}
			var url = base + StringTools.replace(split[0],".","/") + ".html";
			var this1 = { class_name : split[0].substring(split[0].lastIndexOf(".") + 1), path : split[0], identifier : split[1], page : split[1] != null ? url + ("#" + split[1]) : url};
			this.extractDoxData(this1,interaction);
		}
	}
	,extractDoxData: function(info,interaction) {
		var http = new haxe_http_HttpNodeJs(info.page);
		http.onData = function(resp) {
			var body = NodeHtmlParser.parse(resp).querySelector(".body");
			if(body == null) {
				return;
			}
			var sections = body.querySelectorAll(".section");
			var cls_desc = body.querySelector(".doc-main").innerText;
			var embed = new discord_$js_MessageEmbed();
			var identifier = info.identifier != null ? "#" + info.identifier : "";
			embed.setTitle(info.class_name + ("" + identifier));
			embed.setURL(http.url);
			var reply_body = "";
			var _this = body.querySelectorAll(".fields");
			var _g_current = 0;
			while(_g_current < _this.length) {
				var _g1_value = _this[_g_current];
				var _g1_key = _g_current++;
				var id_check = new EReg("<span class=\"identifier\">(.*?)</span","gm");
				var _g = 0;
				var _g1 = _g1_value.querySelectorAll(".field");
				while(_g < _g1.length) {
					var field = _g1[_g];
					++_g;
					if(info.identifier == null) {
						break;
					}
					if(id_check.match(field.innerHTML) && id_check.matched(1).toLowerCase() == info.identifier.toLowerCase()) {
						var del_value_meta_regx = new EReg("(@:value\\(.*?\\)+)","gmi");
						var type = StringTools.htmlUnescape(field.querySelector(">h3").innerText);
						if(del_value_meta_regx.match(type)) {
							type = StringTools.replace(type,del_value_meta_regx.matched(1),"");
						}
						type = StringTools.replace(type,"static","");
						type = StringTools.replace(type,"read only","(read only) ");
						var desc = field.querySelector(".doc").innerText;
						var section = sections[_g1_key].innerText;
						reply_body = "" + ("**" + HxOverrides.substr(section,0,section.length - 1) + "** \n```hx\n" + type + "\n```");
						if(StringTools.trim(desc).length > 0) {
							reply_body += "**Description**\n```" + desc + "```";
						}
						embed.setDescription(StringTools.htmlUnescape(reply_body));
						interaction.reply({ embeds : [embed]});
						return;
					}
				}
			}
			if(StringTools.trim(cls_desc).length > 0) {
				reply_body = "" + ("```\n" + cls_desc + "\n```");
			}
			if(reply_body.length > 0) {
				embed.setDescription(StringTools.htmlUnescape(reply_body));
				interaction.reply({ embeds : [embed]});
			}
		};
		http.onError = function(msg) {
			interaction.reply("An error occured finding the request.");
		};
		http.request();
	}
	,get_name: function() {
		return "api";
	}
	,onAdded: function() {
		systems_CommandBase.prototype.onAdded.call(this);
	}
	,onRemoved: function() {
		systems_CommandBase.prototype.onRemoved.call(this);
	}
	,__class__: systems_commands_Api
});
var systems_commands_ApiParams = {};
systems_commands_ApiParams._new = function(base,command) {
	var split = null;
	var _g = command.content;
	if(_g._hx_index == 3) {
		split = _g.channel.split(" ");
	}
	if(split[2] != null) {
		switch(split[2].toLowerCase()) {
		case "flixel":
			base = systems_commands_Api.flixel;
			break;
		case "haxe":
			base = systems_commands_Api.haxe;
			break;
		case "heaps":
			base = systems_commands_Api.heaps;
			break;
		case "lime":
			base = systems_commands_Api.lime;
			break;
		case "openfl":
			base = systems_commands_Api.openfl;
			break;
		default:
			base = systems_commands_Api.haxe;
		}
	}
	var url = base + StringTools.replace(split[0],".","/") + ".html";
	var this1 = { class_name : split[0].substring(split[0].lastIndexOf(".") + 1), path : split[0], identifier : split[1], page : split[1] != null ? url + ("#" + split[1]) : url};
	return this1;
};
var systems_commands_Haxelib = function(_universe) {
	this.message_history = new haxe_ds_StringMap();
	this.super_mod_id = "198916468312637440";
	systems_CommandBase.call(this,_universe);
};
$hxClasses["systems.commands.Haxelib"] = systems_commands_Haxelib;
systems_commands_Haxelib.__name__ = "systems.commands.Haxelib";
systems_commands_Haxelib.__super__ = systems_CommandBase;
systems_commands_Haxelib.prototype = $extend(systems_CommandBase.prototype,{
	last_interaction: null
	,super_mod_id: null
	,message_history: null
	,run: function(command,interaction) {
		var h = this.message_history.h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g1_value = h[key];
			var time = new Date().getTime();
			if(time - _g1_value.timestamp > 5000) {
				var _this = this.message_history;
				if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
					delete(_this.h[key]);
				}
			}
		}
		var role_status = Util_hasRole(this.super_mod_id,interaction);
		var _g = command.content;
		if(_g._hx_index == 7) {
			var _g1 = _g.command;
			if(_g1 != "list" && !role_status) {
				interaction.reply("Invalid Permissions.").then(null,null);
				return;
			}
			var channel = interaction.channel;
			var commands = [];
			var _g = 0;
			var _g2 = _g1.split(" ");
			while(_g < _g2.length) {
				var c = _g2[_g];
				++_g;
				commands.push(c);
			}
			var $process = "./haxe/haxelib";
			if(!sys_FileSystem.exists("./haxe/haxelib")) {
				$process = "haxelib";
			}
			var ls = js_node_ChildProcess.spawn($process,commands);
			var output = "";
			ls.stdout.on("data",function(data) {
				if(data.indexOf("KB") != -1 || data.indexOf("%") != -1) {
					return;
				}
				output += data;
			});
			ls.stdout.once("close",function(data) {
				var embed = new discord_$js_MessageEmbed().setTitle("Haxelib").setDescription(output);
				return interaction.reply({ embeds : [embed]}).then(null,function(err) {
					haxe_Log.trace(err,{ fileName : "src/systems/commands/Haxelib.hx", lineNumber : 58, className : "systems.commands.Haxelib", methodName : "run"});
				});
			});
			ls.stderr.on("data",function(data) {
				var embed = new discord_$js_MessageEmbed();
				embed.type = "article";
				embed.addField("Haxelib Error",data);
				return channel.send(embed);
			});
		}
	}
	,addHistory: function(command,embed) {
		if(Object.prototype.hasOwnProperty.call(this.message_history.h,command)) {
			return false;
		}
		this.message_history.h[command] = embed;
		return true;
	}
	,get_name: function() {
		return "haxelib";
	}
	,onAdded: function() {
		systems_CommandBase.prototype.onAdded.call(this);
	}
	,onRemoved: function() {
		systems_CommandBase.prototype.onRemoved.call(this);
	}
	,__class__: systems_commands_Haxelib
});
var systems_commands_Help = function(_universe) {
	systems_CommandBase.call(this,_universe);
};
$hxClasses["systems.commands.Help"] = systems_commands_Help;
systems_commands_Help.__name__ = "systems.commands.Help";
systems_commands_Help.__super__ = systems_CommandBase;
systems_commands_Help.prototype = $extend(systems_CommandBase.prototype,{
	data: null
	,onAdded: function() {
		systems_CommandBase.prototype.onAdded.call(this);
		this.data = Util_loadFile("help",{ fileName : "src/systems/commands/Help.hx", lineNumber : 9, className : "systems.commands.Help", methodName : "onAdded"});
	}
	,run: function(command,interaction) {
		if(this.data == null || this.data.length == 0) {
			haxe_Log.trace("no help content configured",{ fileName : "src/systems/commands/Help.hx", lineNumber : 14, className : "systems.commands.Help", methodName : "run"});
			return;
		}
		var _g = command.content;
		if(_g._hx_index == 6) {
			var _g1 = _g.category;
			var msg = "";
			var _this = this.data;
			var _g_current = 0;
			while(_g_current < _this.length) {
				var _g1_value = _this[_g_current];
				var _g1_key = _g_current++;
				if(_g1 == null) {
					if(!_g1_value.show_help) {
						continue;
					}
					if(_g1_value.type == "run") {
						msg += "- `!" + _g1_value.type + "`: " + _g1_value.content;
					} else {
						msg += "- `/" + _g1_value.type + "`: " + _g1_value.content;
					}
					if(_g1_key != this.data.length - 1) {
						msg += "\n";
					}
				} else if(_g1_value.type == _g1) {
					msg = "/`" + _g1_value.type + "`: " + _g1_value.content;
					break;
				}
			}
			interaction.reply(msg);
		}
	}
	,get_name: function() {
		return "help";
	}
	,onRemoved: function() {
		systems_CommandBase.prototype.onRemoved.call(this);
	}
	,__class__: systems_commands_Help
});
var systems_commands_HelpType = {};
systems_commands_HelpType.fromString = function(value) {
	switch(value.toLowerCase()) {
	case "notify":
		return "notify";
	case "rtfm":
		return "rtfm";
	case "run":
		return "run";
	default:
		return "Invalid help option.";
	}
};
var systems_commands_Hi = function(_universe) {
	systems_CommandBase.call(this,_universe);
};
$hxClasses["systems.commands.Hi"] = systems_commands_Hi;
systems_commands_Hi.__name__ = "systems.commands.Hi";
systems_commands_Hi.__super__ = systems_CommandBase;
systems_commands_Hi.prototype = $extend(systems_CommandBase.prototype,{
	run: function(command,interaction) {
		interaction.reply("Hey there");
	}
	,get_name: function() {
		return "hi";
	}
	,onAdded: function() {
		systems_CommandBase.prototype.onAdded.call(this);
	}
	,onRemoved: function() {
		systems_CommandBase.prototype.onRemoved.call(this);
	}
	,__class__: systems_commands_Hi
});
var systems_commands_Notify = function(_universe) {
	systems_CommandBase.call(this,_universe);
};
$hxClasses["systems.commands.Notify"] = systems_commands_Notify;
systems_commands_Notify.__name__ = "systems.commands.Notify";
systems_commands_Notify.__super__ = systems_CommandBase;
systems_commands_Notify.prototype = $extend(systems_CommandBase.prototype,{
	getRole: function(channel) {
		switch(channel) {
		case "<#165234904815239168>":case "flixel":
			return "761714697468248125";
		case "<#286485321925918721>":case "announcements":
			return "761714325227700225";
		case "<#501447516852715525>":case "kha":
			return "761714809179209818";
		case "<#565569107701923852>":case "haxeui":
			return "761714853403820052";
		case "<#853414608747364352>":case "ceramic":
			return "914171888748609546";
		case "<#561254298449739776>":case "dvorak":
			return "903006951896666153";
		case "<#501408700142059520>":case "heaps":
			return "761714775902126080";
		default:
			return "err";
		}
	}
	,run: function(command,interaction) {
		var _g = command.content;
		if(_g._hx_index == 4) {
			var _g1 = 0;
			var _g2 = _g.channel.split(" ");
			while(_g1 < _g2.length) {
				var channel = [_g2[_g1]];
				++_g1;
				var role = this.getRole(channel[0]);
				if(role == "err") {
					continue;
				}
				var found = false;
				var jsIterator = interaction.member.roles.cache.entries();
				var _g_lastStep = jsIterator.next();
				while(!_g_lastStep.done) {
					var v = _g_lastStep.value;
					_g_lastStep = jsIterator.next();
					var key = v[0];
					if(key == role) {
						found = true;
						break;
					}
				}
				if(found) {
					interaction.member.roles.remove(role).then((function(channel) {
						return function(success) {
							return interaction.reply("Unsubscribed from " + channel[0] + " updates");
						};
					})(channel));
				} else {
					interaction.member.roles.add(role).then((function(channel) {
						return function(success) {
							return interaction.reply("Subscribed to " + channel[0] + " updates");
						};
					})(channel));
				}
			}
		}
	}
	,get_name: function() {
		return "notify";
	}
	,onAdded: function() {
		systems_CommandBase.prototype.onAdded.call(this);
	}
	,onRemoved: function() {
		systems_CommandBase.prototype.onRemoved.call(this);
	}
	,__class__: systems_commands_Notify
});
var systems_commands_Roundup = function(_universe) {
	this.announcement_channel = "286485321925918721";
	this.news_role = "761714325227700225";
	this.super_mod_id = "198916468312637440";
	this.roundup = -1;
	this.active = false;
	this.last_checked = -1;
	systems_CommandBase.call(this,_universe);
};
$hxClasses["systems.commands.Roundup"] = systems_commands_Roundup;
systems_commands_Roundup.__name__ = "systems.commands.Roundup";
systems_commands_Roundup.__super__ = systems_CommandBase;
systems_commands_Roundup.prototype = $extend(systems_CommandBase.prototype,{
	last_checked: null
	,active: null
	,roundup: null
	,channel: null
	,super_mod_id: null
	,news_role: null
	,announcement_channel: null
	,getHaxeIoPage: function() {
		var _gthis = this;
		var data = new haxe_http_HttpNodeJs("https://raw.githubusercontent.com/skial/haxe.io/master/src/roundups/" + this.roundup + ".md");
		var embed = new discord_$js_MessageEmbed();
		data.onError = function(error) {
			haxe_Log.trace(error,{ fileName : "src/systems/commands/Roundup.hx", lineNumber : 22, className : "systems.commands.Roundup", methodName : "getHaxeIoPage"});
		};
		data.onData = function(body) {
			var regex = new EReg("### News and Articles(.*?)##### _In case you missed it_","gmis");
			if(regex.match(body)) {
				embed.setTitle("Haxe Roundup #" + _gthis.roundup);
				embed.setURL("https://haxe.io/roundups/" + _gthis.roundup + "/");
				var desc_split = StringTools.trim(regex.matched(1)).split("\n");
				var desc = "\n**News And Articles**";
				var _g = 0;
				while(_g < desc_split.length) {
					var item = desc_split[_g];
					++_g;
					if(desc.length + StringTools.trim(item).length + 3 + 22 >= 2048) {
						continue;
					}
					desc += "\n" + StringTools.trim(item);
				}
				desc += "\n...";
				embed.setDescription(desc);
				_gthis.channel.send({ content : "<@&" + _gthis.news_role + ">", allowedMentions : { roles : [_gthis.news_role]}, embeds : [embed]}).then(function(_) {
					return _gthis.roundup++;
				});
			}
		};
		data.request();
	}
	,update: function(_) {
		systems_CommandBase.prototype.update.call(this,_);
		if(!this.active || this.roundup == -1 || new Date().getTime() - this.last_checked <= 86400000) {
			return;
		}
		if(this.channel != null) {
			this.last_checked = new Date().getTime();
			this.getHaxeIoPage();
		}
	}
	,run: function(command,interaction) {
		var _gthis = this;
		if(!Util_hasRole(this.super_mod_id,interaction)) {
			interaction.reply("Invalid permissions").then(null,null);
			return;
		}
		var _g = command.content;
		if(_g._hx_index == 1) {
			var _g1 = _g.number;
			if(this.active) {
				this.active = false;
				this.last_checked = -1;
				interaction.reply("Disabled haxe roundup monitoring");
				return;
			}
			if(_g1 <= 600) {
				interaction.reply("Please enter a more recent roundup issue.");
				return;
			}
			this.active = true;
			this.roundup = _g1 | 0;
			interaction.reply("Will start watching haxe roundups from **#" + _g1 + "**.");
			interaction.client.channels.fetch(this.announcement_channel).then(function(channel) {
				_gthis.channel = channel;
			},function(error) {
				haxe_Log.trace(error,{ fileName : "src/systems/commands/Roundup.hx", lineNumber : 88, className : "systems.commands.Roundup", methodName : "run"});
			});
		}
	}
	,get_name: function() {
		return "roundup";
	}
	,onAdded: function() {
		systems_CommandBase.prototype.onAdded.call(this);
	}
	,onRemoved: function() {
		systems_CommandBase.prototype.onRemoved.call(this);
	}
	,__class__: systems_commands_Roundup
});
var systems_commands_Rtfm = function(_universe) {
	systems_CommandBase.call(this,_universe);
};
$hxClasses["systems.commands.Rtfm"] = systems_commands_Rtfm;
systems_commands_Rtfm.__name__ = "systems.commands.Rtfm";
systems_commands_Rtfm.__super__ = systems_CommandBase;
systems_commands_Rtfm.prototype = $extend(systems_CommandBase.prototype,{
	data: null
	,onAdded: function() {
		systems_CommandBase.prototype.onAdded.call(this);
		this.data = Util_loadFile("rtfm",{ fileName : "src/systems/commands/Rtfm.hx", lineNumber : 9, className : "systems.commands.Rtfm", methodName : "onAdded"});
	}
	,run: function(command,interaction) {
		if(this.data == null) {
			haxe_Log.trace("failed to read rtfm data",{ fileName : "src/systems/commands/Rtfm.hx", lineNumber : 14, className : "systems.commands.Rtfm", methodName : "run"});
			return;
		}
		var _g = command.content;
		if(_g._hx_index == 2) {
			var _g1 = _g.channel;
			var compare = _g1;
			if(_g1 == null) {
				compare = interaction.channel.name;
			}
			var _g = 0;
			var _g1 = this.data;
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				var _g2 = 0;
				var _g3 = item.keys;
				while(_g2 < _g3.length) {
					var val = _g3[_g2];
					++_g2;
					if(val == compare) {
						interaction.reply(item.content);
						return;
					}
				}
			}
			interaction.reply("No information available.");
		}
	}
	,get_name: function() {
		return "rtfm";
	}
	,onRemoved: function() {
		systems_CommandBase.prototype.onRemoved.call(this);
	}
	,__class__: systems_commands_Rtfm
});
var systems_commands_Run = function(_universe) {
	this.checked = false;
	this.code_requests = new haxe_ds_StringMap();
	this.haxe_version = null;
	ecs_System.call(this,_universe);
};
$hxClasses["systems.commands.Run"] = systems_commands_Run;
systems_commands_Run.__name__ = "systems.commands.Run";
systems_commands_Run.__super__ = ecs_System;
systems_commands_Run.prototype = $extend(ecs_System.prototype,{
	message_id: null
	,haxe_version: null
	,code_requests: null
	,channel: null
	,checked: null
	,onAdded: function() {
		ecs_System.prototype.onAdded.call(this);
		this.code_messages = this.universe.families.get(1);
		this.table6c16270644d94dba4055a067a073b12c = this.universe.components.getTable(2);
		this.table25aaa7d3f4989532034d5f61746d0948 = this.universe.components.getTable(3);
	}
	,update: function(_) {
		var _gthis = this;
		if(!Main.connected) {
			return;
		}
		if(this.channel == null && !this.checked) {
			this.checked = true;
			Main.client.channels.fetch("663246792426782730").then(function(channel) {
				return _gthis.channel = channel;
			});
			return;
		}
		var _g = this.code_messages.iterator();
		while(_g.active && _g.idx < _g.set.size()) {
			var entity = _g.set.getDense(_g.idx++);
			var response = this.table6c16270644d94dba4055a067a073b12c.get(entity);
			var message = this.table25aaa7d3f4989532034d5f61746d0948.get(entity);
			if(StringTools.startsWith(message,"!run ")) {
				this.run(message,response);
				this.code_messages.remove(entity);
			}
		}
	}
	,run: function(message,response) {
		var _gthis = this;
		if(this.haxe_version == null) {
			var $process = "./haxe/haxe";
			if(!sys_FileSystem.exists("./haxe/haxe")) {
				$process = "haxe";
			}
			var ls = js_node_ChildProcess.spawn($process,["--version"]);
			ls.stdout.once("data",function(data) {
				_gthis.haxe_version = data.toString().substring(0,5);
				ls.kill();
			});
		}
		this.extractCode(message,response);
	}
	,codeSource: function(message) {
		var remote = new EReg("^(!run #([a-zA-Z0-9]{5,8}))","gi");
		var source = "";
		if(remote.match(message)) {
			source = "https://try.haxe.org/#" + remote.matched(2);
		}
		return source;
	}
	,extractCode: function(message,response) {
		var _gthis = this;
		var check_code = new EReg("^(!run(\\s|\n| \n|)```(haxe|hx|)(.*)```)","gmisu");
		if(check_code.match(message)) {
			this.parse(check_code.matched(4),response);
			return;
		}
		check_code = new EReg("^(!run #([a-zA-Z0-9]{5,8}))","gi");
		if(check_code.match(message)) {
			var regex = new EReg("(<code class=\"prettyprint haxe\">)(.*?)(</code>)","gmius");
			var get_code = new haxe_http_HttpNodeJs("https://try.haxe.org/embed/" + check_code.matched(2));
			get_code.onData = function(data) {
				if(regex.match(data)) {
					_gthis.parse(StringTools.htmlUnescape(regex.matched(2)),response);
				}
			};
			get_code.request();
			return;
		}
		check_code = new EReg("!run (.*)","gmis");
		if(check_code.match(message)) {
			this.parse(check_code.matched(1),response);
			return;
		}
		this.parse(null,response);
	}
	,deleteFile: function(filename) {
		try {
			js_node_Fs.unlinkSync("" + this.get_base_path() + "/bin/" + filename + ".js");
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(_g1,{ fileName : "src/systems/commands/Run.hx", lineNumber : 111, className : "systems.commands.Run", methodName : "deleteFile"});
		}
	}
	,extractLibs: function(code) {
		var check_code = new EReg("(/?/?-l\\W.*)","gmiu");
		if(!check_code.match(code)) {
			return [];
		}
		var libs = [];
		while(check_code.match(code)) {
			var split = check_code.matched(1).split(" ");
			libs.push("-L");
			libs.push(split[1]);
			code = check_code.matchedRight();
		}
		return libs;
	}
	,canRequest: function(data) {
		var timings = 0.0;
		var last = 0.0;
		var count = 1;
		var _g = 0;
		var _g1 = data.length;
		while(_g < _g1) {
			var i = _g++;
			if(data.length % 2 == 1 && data.length - i == 1) {
				break;
			}
			if(i % 2 == 0) {
				last = data[i];
				continue;
			}
			timings += data[i] - last;
			++count;
		}
		if(data.length >= 6) {
			return timings / count > 2000;
		} else {
			return true;
		}
	}
	,cleanOutput: function(data,filename,class_entry) {
		data = data.toString();
		new RegExp("(\\[(.*|vm)\\].*)$","igmu".split("u").join(""));
		data = StringTools.replace(StringTools.replace(data,filename,class_entry),"\x1B","");
		data = StringTools.replace(data,this.get_base_path(),"");
		data = StringTools.replace(data,"/hx/","");
		data = StringTools.replace(data,"/bin/","");
		return data;
	}
	,getImportAndUsings: function(input,index) {
		if(index == null) {
			index = 0;
		}
		var regex = new EReg("^(import|using)(.*);$","igmu");
		var matches = [];
		while(regex.match(input)) {
			matches.push(regex.matched(index));
			input = regex.matchedRight();
		}
		return { code : input, paths : matches};
	}
	,parse: function(code,response) {
		if(code == null || code.length == 0) {
			response.reply({ content : "Your `!run` command formatting is incorrect. Check the pin in <#663246792426782730>."});
			return;
		}
		var class_exists = new EReg("(class.*({|\n{))","mgu");
		if(class_exists.match(code)) {
			var check_class = new EReg("(^class\\s(Test|Main)(\n|\\s|\\S))","mgu");
			if(!check_class.match(code)) {
				response.reply({ content : "You must have a class called `Test` or `Main`"});
				return;
			}
		}
		if(!this.isSafe(code,response)) {
			response.reply({ content : "Your code contains bad things."});
			return;
		}
		this.runCodeOnThread(code,response);
	}
	,isSafe: function(code,response) {
		var check_http = new EReg("haxe.http|haxe.Http","gmu");
		if(check_http.match(code)) {
			return false;
		}
		if(!Main.config.macros) {
			if(new EReg("@:.*[bB]uild","igmu").match(code)) {
				response.reply({ content : "Currently no build macros allowed"});
				return false;
			}
		} else if(code.indexOf("macro") != -1 || new EReg("macro|@:.*[bB]uild","igmu").match(code)) {
			return false;
		}
		return !new EReg("(\\}\\})|(sys|((\"|')s(.*)y(.*)(\"|')s(\"|'))|eval|command|syntax.|require|location|untyped|@:.*[bB]uild)","igmu").match(code);
	}
	,runCodeOnThread: function(code,message) {
		var _gthis = this;
		if(!this.isSafe(code,message)) {
			message.reply({ content : "Your code contains bad things."});
			return;
		}
		var mention = "";
		var libs = this.extractLibs(code);
		var lib_regex = new EReg("(/?/?-l\\W.*)","gmiu");
		if(lib_regex.match(code)) {
			code = code.replace(lib_regex.r,"");
		}
		var get_paths = this.getImportAndUsings(code);
		var format = "";
		var _g = 0;
		var _g1 = get_paths.paths;
		while(_g < _g1.length) {
			var data = _g1[_g];
			++_g;
			format += data;
		}
		try {
			var filename = "H" + new Date().getTime() + Math.floor(Math.random() * 100000);
			var check_class = new EReg("(^class\\s(Test|Main)(\n|\\s|\\S))","mg");
			var code_content = "";
			var class_entry = "Main";
			if(check_class.match(get_paths.code)) {
				var parsed = check_class.matched(0);
				var replaced = "";
				if(parsed.indexOf("Test") != -1) {
					class_entry = "Test";
				}
				var by = StringTools.replace(parsed,class_entry,filename);
				replaced = parsed.replace(check_class.r,by);
				code_content = StringTools.replace(get_paths.code,parsed,replaced);
				var other_instances = new EReg(class_entry,"gm");
				if(other_instances.match(code_content)) {
					code_content = code_content.replace(other_instances.r,filename);
				}
			} else {
				code_content = "class " + filename + " {static function main() {" + get_paths.code + "}}";
			}
			code_content = format + "\n" + code_content;
			js_node_Fs.appendFile("" + this.get_base_path() + "/hx/" + filename + ".hx",code_content + ("//User:" + message.author.tag + " | time: " + Std.string(new Date())),function(error) {
				if(error != null) {
					haxe_Log.trace(error,{ fileName : "src/systems/commands/Run.hx", lineNumber : 263, className : "systems.commands.Run", methodName : "runCodeOnThread"});
				}
				var commands = ["-cp","" + _gthis.get_base_path() + "/hx","-main",filename,"-js","" + _gthis.get_base_path() + "/bin/" + filename + ".js"];
				var $process = "./haxe/haxe";
				if(!sys_FileSystem.exists("./haxe/haxe")) {
					$process = "haxe";
				}
				var ls = js_node_ChildProcess.spawn($process,libs.concat(commands),{ timeout : 10000});
				ls.stderr.once("data",function(data) {
					haxe_Log.trace("error: " + data,{ fileName : "src/systems/commands/Run.hx", lineNumber : 288, className : "systems.commands.Run", methodName : "runCodeOnThread"});
					var compile_output = _gthis.cleanOutput(data,filename,class_entry);
					message.reply({ content : mention + ("```\n" + compile_output + "```")});
					ls.kill("SIGTERM");
				});
				ls.once("close",function(data) {
					var response = "";
					var js_file = "" + _gthis.get_base_path() + "/bin/" + filename + ".js";
					if(!sys_FileSystem.exists(js_file)) {
						haxe_Log.trace("Code likely errored and didnt compile (" + filename + ".js)",{ fileName : "src/systems/commands/Run.hx", lineNumber : 299, className : "systems.commands.Run", methodName : "runCodeOnThread"});
						ls.kill("SIGTERM");
						return;
					}
					var obj = null;
					var vm = new vm2_NodeVM({ sandbox : obj, console : "redirect"});
					vm.on("console.log",function(data,info) {
						var regex = new EReg("H[0-9]*..hx:[0-9]*.: (.*)","gm");
						if(regex.match(data)) {
							data = regex.matched(1);
						}
						if(info != null) {
							response += "" + info + "\n";
							return response;
						} else {
							response += "" + data + "\n";
							return response;
						}
					});
					try {
						vm.runFile(js_file);
						var x = response.split("\n");
						var truncated = false;
						if(x.length > 24) {
							truncated = true;
							response = "";
							var _g = 0;
							var _g1 = x.slice(x.length - 23);
							while(_g < _g1.length) {
								var line = _g1[_g];
								++_g;
								response += line + "\n";
							}
						}
						var embed = new discord_$js_MessageEmbed();
						embed.type = "article";
						var code_output = "";
						var split = response.split("\n");
						var _g2_current = 0;
						while(_g2_current < split.length) {
							var _g3_value = split[_g2_current];
							var _g3_key = _g2_current++;
							if(_g3_key >= split.length - 1) {
								break;
							}
							code_output += "" + _g3_key + ". " + _g3_value + " \n";
						}
						if(truncated) {
							code_output += "\n//Output has been trimmed.";
						}
						var desc = "**Code:**\n```hx\n" + get_paths.code + "``` **Output:**\n ```markdown\n" + code_output + "\n```";
						embed.setDescription(desc);
						var url = _gthis.codeSource(code);
						if(url == "") {
							embed.setAuthor("@" + message.author.tag,message.author.displayAvatarURL());
						} else {
							var tag = url.split("#")[1];
							embed.setTitle("TryHaxe #" + tag);
							embed.setURL(url);
							embed.setAuthor("@" + message.author.tag,message.author.displayAvatarURL());
						}
						var date = new Date(message.createdTimestamp);
						var format_date = DateTools.format(date,"%d-%m-%Y %H:%M:%S");
						embed.setFooter("Haxe " + _gthis.haxe_version,"https://cdn.discordapp.com/emojis/567741748172816404.png?v=1");
						if(response.length > 0 && data == 0) {
							message.reply({ embeds : [embed]}).then(function(succ) {
								haxe_Log.trace("" + message.author.tag + " at " + format_date + " with file id: " + filename,{ fileName : "src/systems/commands/Run.hx", lineNumber : 368, className : "systems.commands.Run", methodName : "runCodeOnThread"});
								return message.delete().then(null,null);
							},null);
							ls.kill();
							return;
						}
					} catch( _g ) {
						var _g1 = haxe_Exception.caught(_g);
						haxe_Log.trace(_g1,{ fileName : "src/systems/commands/Run.hx", lineNumber : 375, className : "systems.commands.Run", methodName : "runCodeOnThread"});
					}
				});
			});
			return;
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(_g1,{ fileName : "src/systems/commands/Run.hx", lineNumber : 382, className : "systems.commands.Run", methodName : "runCodeOnThread"});
			this.channel.send({ content : mention + "Code failed to execute."});
		}
	}
	,get_base_path: function() {
		var path = haxe_io_Path.isAbsolute(".") ? "." : js_node_Path.resolve(".");
		if(!sys_FileSystem.exists(path + "/haxebot")) {
			sys_FileSystem.createDirectory(path + "/haxebot");
		}
		path += "/haxebot";
		var date = DateTools.format(new Date(),"%F");
		path += "/" + date;
		if(!sys_FileSystem.exists(path)) {
			sys_FileSystem.createDirectory(path);
		}
		if(!sys_FileSystem.exists(path + "/hx")) {
			sys_FileSystem.createDirectory(path + "/hx");
		}
		if(!sys_FileSystem.exists(path + "/bin")) {
			sys_FileSystem.createDirectory(path + "/bin");
		}
		return path;
	}
	,get_name: function() {
		return "!run";
	}
	,onRemoved: function() {
		ecs_System.prototype.onRemoved.call(this);
	}
	,code_messages: null
	,table6c16270644d94dba4055a067a073b12c: null
	,table25aaa7d3f4989532034d5f61746d0948: null
	,__class__: systems_commands_Run
	,__properties__: {get_base_path:"get_base_path"}
});
var vm2_NodeVM = require("vm2").NodeVM;
var vm2_VM = require("vm2").VM;
var vm2_VMScript = require("vm2").VMScript;
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl;
}
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
DateTools.DAYS_OF_MONTH = [31,28,31,30,31,30,31,31,30,31,30,31];
EReg.escapeRe = new RegExp("[.*+?^${}()|[\\]\\\\]","g");
Main.connected = false;
haxe_SysTools.winMetaCharacters = [32,40,41,37,33,94,34,60,62,38,124,10,13,44,59];
StringTools.winMetaCharacters = haxe_SysTools.winMetaCharacters;
StringTools.MIN_SURROGATE_CODE_POINT = 65536;
bits_BitsData.CELL_SIZE = 32;
ecs_Entity.none = ecs_Entity._new(-1);
var ecs_macros_ComponentCache_components = new haxe_ds_StringMap();
var ecs_macros_ComponentCache_componentIncrementer = 0;
var ecs_macros_FamilyCache_familyIDs = new haxe_ds_StringMap();
var ecs_macros_FamilyCache_familyDefinitions = [];
var ecs_macros_FamilyCache_keyedFamilies = new haxe_ds_StringMap();
var ecs_macros_FamilyCache_familyIncrementer = 0;
var ecs_macros_ResourceCache_resources = new haxe_ds_StringMap();
var ecs_macros_ResourceCache_resourceIncrementer = 0;
haxe_Int32._mul = Math.imul != null ? Math.imul : function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe_io_FPHelper.i64tmp = new haxe__$Int64__$_$_$Int64(0,0);
haxe_io_FPHelper.LN2 = 0.6931471805599453;
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
haxe_io_UInt8Array.BYTES_PER_ELEMENT = 1;
sys_io_File.copyBufLen = 65536;
sys_io_File.copyBuf = js_node_buffer_Buffer.alloc(65536);
systems_commands_Api.haxe = "https://api.haxe.org/";
systems_commands_Api.openfl = "https://api.openfl.org/";
systems_commands_Api.flixel = "https://api.haxeflixel.com/";
systems_commands_Api.heaps = "https://heaps.io/api/";
systems_commands_Api.lime = "https://api.lime.software/";
systems_commands_HelpType.run = "run";
systems_commands_HelpType.rtfm = "rtfm";
systems_commands_HelpType.notify = "notify";
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=main.js.map